{"id":"../node_modules/ipfs-core/cjs/src/components/get.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"ipfs-unixfs-exporter","loc":{"line":5,"column":33},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-unixfs-exporter\\cjs\\src\\index.js"},{"name":"err-code","loc":{"line":6,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"../utils.js","loc":{"line":7,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\utils.js"},{"name":"ipfs-core-utils/with-timeout-option","loc":{"line":8,"column":32},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-utils\\cjs\\src\\with-timeout-option.js"},{"name":"multiformats/cid","loc":{"line":9,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\cid.js"},{"name":"it-tar","loc":{"line":10,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-tar\\index.js"},{"name":"it-pipe","loc":{"line":11,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-pipe\\index.js"},{"name":"pako","loc":{"line":12,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\pako\\index.js"},{"name":"it-map","loc":{"line":13,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-map\\index.js"},{"name":"it-to-buffer","loc":{"line":14,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\get.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-to-buffer\\index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\nvar errCode = require('err-code');\nvar utils = require('../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar cid = require('multiformats/cid');\nvar itTar = require('it-tar');\nvar itPipe = require('it-pipe');\nvar Pako = require('pako');\nvar map = require('it-map');\nvar toBuffer = require('it-to-buffer');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar Pako__default = /*#__PURE__*/_interopDefaultLegacy(Pako);\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\nvar toBuffer__default = /*#__PURE__*/_interopDefaultLegacy(toBuffer);\n\nconst DEFAULT_COMPRESSION_LEVEL = 6;\nfunction createGet({repo, preload}) {\n  async function* get(ipfsPath, options = {}) {\n    if (options.compressionLevel < 0 || options.compressionLevel > 9) {\n      throw errCode__default[\"default\"](new Error('Compression level must be between 1 and 9'), 'ERR_INVALID_PARAMS');\n    }\n    if (options.preload !== false) {\n      let pathComponents;\n      try {\n        pathComponents = utils.normalizeCidPath(ipfsPath).split('/');\n      } catch (err) {\n        throw errCode__default[\"default\"](err, 'ERR_INVALID_PATH');\n      }\n      preload(cid.CID.parse(pathComponents[0]));\n    }\n    const ipfsPathOrCid = cid.CID.asCID(ipfsPath) || ipfsPath;\n    const file = await ipfsUnixfsExporter.exporter(ipfsPathOrCid, repo.blocks, options);\n    if (file.type === 'file' || file.type === 'raw') {\n      const args = [];\n      if (!options.compress || options.archive === true) {\n        args.push([{\n            header: {\n              name: file.path,\n              mode: file.type === 'file' && file.unixfs.mode,\n              mtime: file.type === 'file' && file.unixfs.mtime ? new Date(file.unixfs.mtime.secs * 1000) : undefined,\n              size: file.size,\n              type: 'file'\n            },\n            body: file.content()\n          }], itTar.pack(), source => map__default[\"default\"](source, buf => buf.slice()));\n      } else {\n        args.push(file.content);\n      }\n      if (options.compress) {\n        args.push(async function* (source) {\n          const buf = await toBuffer__default[\"default\"](source);\n          yield Pako__default[\"default\"].gzip(buf, { level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL });\n        });\n      }\n      yield* itPipe.pipe(...args);\n      return;\n    }\n    if (file.type === 'directory') {\n      const args = [\n        ipfsUnixfsExporter.recursive(ipfsPathOrCid, repo.blocks, options),\n        async function* (source) {\n          for await (const entry of source) {\n            const output = {\n              header: {\n                name: entry.path,\n                size: entry.size\n              }\n            };\n            if (entry.type === 'file') {\n              output.header.type = 'file';\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined;\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined;\n              output.body = entry.content();\n            } else if (entry.type === 'raw') {\n              output.header.type = 'file';\n              output.body = entry.content();\n            } else if (entry.type === 'directory') {\n              output.header.type = 'directory';\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined;\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined;\n            } else {\n              throw errCode__default[\"default\"](new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS');\n            }\n            yield output;\n          }\n        },\n        itTar.pack(),\n        source => map__default[\"default\"](source, buf => buf.slice())\n      ];\n      if (options.compress) {\n        if (!options.archive) {\n          throw errCode__default[\"default\"](new Error('file is not regular'), 'ERR_INVALID_PATH');\n        }\n        if (options.compress) {\n          args.push(async function* (source) {\n            const buf = await toBuffer__default[\"default\"](source);\n            yield Pako__default[\"default\"].gzip(buf, { level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL });\n          });\n        }\n      }\n      yield* itPipe.pipe(...args);\n      return;\n    }\n    throw errCode__default[\"default\"](new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS');\n  }\n  return withTimeoutOption.withTimeoutOption(get);\n}\n\nexports.createGet = createGet;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/get.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/get.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\nvar errCode = require('err-code');\nvar utils = require('../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar cid = require('multiformats/cid');\nvar itTar = require('it-tar');\nvar itPipe = require('it-pipe');\nvar Pako = require('pako');\nvar map = require('it-map');\nvar toBuffer = require('it-to-buffer');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar Pako__default = /*#__PURE__*/_interopDefaultLegacy(Pako);\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\nvar toBuffer__default = /*#__PURE__*/_interopDefaultLegacy(toBuffer);\n\nconst DEFAULT_COMPRESSION_LEVEL = 6;\nfunction createGet({repo, preload}) {\n  async function* get(ipfsPath, options = {}) {\n    if (options.compressionLevel < 0 || options.compressionLevel > 9) {\n      throw errCode__default[\"default\"](new Error('Compression level must be between 1 and 9'), 'ERR_INVALID_PARAMS');\n    }\n    if (options.preload !== false) {\n      let pathComponents;\n      try {\n        pathComponents = utils.normalizeCidPath(ipfsPath).split('/');\n      } catch (err) {\n        throw errCode__default[\"default\"](err, 'ERR_INVALID_PATH');\n      }\n      preload(cid.CID.parse(pathComponents[0]));\n    }\n    const ipfsPathOrCid = cid.CID.asCID(ipfsPath) || ipfsPath;\n    const file = await ipfsUnixfsExporter.exporter(ipfsPathOrCid, repo.blocks, options);\n    if (file.type === 'file' || file.type === 'raw') {\n      const args = [];\n      if (!options.compress || options.archive === true) {\n        args.push([{\n            header: {\n              name: file.path,\n              mode: file.type === 'file' && file.unixfs.mode,\n              mtime: file.type === 'file' && file.unixfs.mtime ? new Date(file.unixfs.mtime.secs * 1000) : undefined,\n              size: file.size,\n              type: 'file'\n            },\n            body: file.content()\n          }], itTar.pack(), source => map__default[\"default\"](source, buf => buf.slice()));\n      } else {\n        args.push(file.content);\n      }\n      if (options.compress) {\n        args.push(async function* (source) {\n          const buf = await toBuffer__default[\"default\"](source);\n          yield Pako__default[\"default\"].gzip(buf, { level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL });\n        });\n      }\n      yield* itPipe.pipe(...args);\n      return;\n    }\n    if (file.type === 'directory') {\n      const args = [\n        ipfsUnixfsExporter.recursive(ipfsPathOrCid, repo.blocks, options),\n        async function* (source) {\n          for await (const entry of source) {\n            const output = {\n              header: {\n                name: entry.path,\n                size: entry.size\n              }\n            };\n            if (entry.type === 'file') {\n              output.header.type = 'file';\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined;\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined;\n              output.body = entry.content();\n            } else if (entry.type === 'raw') {\n              output.header.type = 'file';\n              output.body = entry.content();\n            } else if (entry.type === 'directory') {\n              output.header.type = 'directory';\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined;\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined;\n            } else {\n              throw errCode__default[\"default\"](new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS');\n            }\n            yield output;\n          }\n        },\n        itTar.pack(),\n        source => map__default[\"default\"](source, buf => buf.slice())\n      ];\n      if (options.compress) {\n        if (!options.archive) {\n          throw errCode__default[\"default\"](new Error('file is not regular'), 'ERR_INVALID_PATH');\n        }\n        if (options.compress) {\n          args.push(async function* (source) {\n            const buf = await toBuffer__default[\"default\"](source);\n            yield Pako__default[\"default\"].gzip(buf, { level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL });\n          });\n        }\n      }\n      yield* itPipe.pipe(...args);\n      return;\n    }\n    throw errCode__default[\"default\"](new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS');\n  }\n  return withTimeoutOption.withTimeoutOption(get);\n}\n\nexports.createGet = createGet;\n"},"lineCount":117}},"error":null,"hash":"8295d0cc9f2ab8b2af4435a5fd003f0c","cacheData":{"env":{}}}