{"id":"../node_modules/libp2p/src/record/utils.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p\\package.json","includedInParent":true,"mtime":1638722718888},{"name":"./envelope","loc":{"line":3,"column":25},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p\\src\\record\\utils.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p\\src\\record\\envelope\\index.js"},{"name":"./peer-record","loc":{"line":4,"column":27},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p\\src\\record\\utils.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p\\src\\record\\peer-record\\index.js"}],"generated":{"js":"'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Envelope = require('./envelope');\n\nvar PeerRecord = require('./peer-record');\n/**\n * @typedef {import('../')} Libp2p\n */\n\n/**\n * Create (or update if existing) self peer record and store it in the AddressBook.\n *\n * @param {Libp2p} libp2p\n * @returns {Promise<void>}\n */\n\n\nfunction updateSelfPeerRecord(_x) {\n  return _updateSelfPeerRecord.apply(this, arguments);\n}\n\nfunction _updateSelfPeerRecord() {\n  _updateSelfPeerRecord = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(libp2p) {\n    var peerRecord, envelope;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            peerRecord = new PeerRecord({\n              peerId: libp2p.peerId,\n              multiaddrs: libp2p.multiaddrs\n            });\n            _context.next = 3;\n            return Envelope.seal(peerRecord, libp2p.peerId);\n\n          case 3:\n            envelope = _context.sent;\n            libp2p.peerStore.addressBook.consumePeerRecord(envelope);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _updateSelfPeerRecord.apply(this, arguments);\n}\n\nmodule.exports.updateSelfPeerRecord = updateSelfPeerRecord;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":3,"column":0}},{"name":"Envelope","generated":{"line":7,"column":4},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":3,"column":6}},{"generated":{"line":7,"column":12},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":3,"column":14}},{"name":"require","generated":{"line":7,"column":15},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":3,"column":17}},{"generated":{"line":7,"column":22},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":3,"column":24}},{"generated":{"line":7,"column":23},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":3,"column":25}},{"generated":{"line":7,"column":35},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":3,"column":24}},{"generated":{"line":7,"column":36},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":4,"column":0}},{"name":"PeerRecord","generated":{"line":9,"column":4},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":4,"column":6}},{"generated":{"line":9,"column":14},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":4,"column":16}},{"name":"require","generated":{"line":9,"column":17},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":4,"column":19}},{"generated":{"line":9,"column":24},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":4,"column":26}},{"generated":{"line":9,"column":25},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":4,"column":27}},{"generated":{"line":9,"column":40},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":4,"column":26}},{"generated":{"line":9,"column":41},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":6,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":10,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":11,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":12,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":13,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":14,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":15,"column":0}},{"name":"updateSelfPeerRecord","generated":{"line":22,"column":9},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":15}},{"generated":{"line":27,"column":82},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"name":"libp2p","generated":{"line":27,"column":99},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":37}},{"generated":{"line":27,"column":105},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"name":"peerRecord","generated":{"line":33,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":17,"column":8}},{"name":"peerRecord","generated":{"line":33,"column":12},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":17,"column":8}},{"generated":{"line":33,"column":22},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":33,"column":25},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":17,"column":21}},{"name":"PeerRecord","generated":{"line":33,"column":29},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":17,"column":25}},{"generated":{"line":33,"column":39},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":17,"column":21}},{"generated":{"line":33,"column":40},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":17,"column":36}},{"name":"peerId","generated":{"line":34,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":18,"column":4}},{"name":"peerId","generated":{"line":34,"column":14},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":18,"column":4}},{"generated":{"line":34,"column":20},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":18,"column":10}},{"name":"libp2p","generated":{"line":34,"column":22},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":18,"column":12}},{"generated":{"line":34,"column":28},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":18,"column":18}},{"name":"peerId","generated":{"line":34,"column":29},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":18,"column":19}},{"generated":{"line":34,"column":35},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":17,"column":36}},{"name":"multiaddrs","generated":{"line":35,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":19,"column":4}},{"name":"multiaddrs","generated":{"line":35,"column":14},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":19,"column":4}},{"generated":{"line":35,"column":24},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":19,"column":14}},{"name":"libp2p","generated":{"line":35,"column":26},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":19,"column":16}},{"generated":{"line":35,"column":32},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":19,"column":22}},{"name":"multiaddrs","generated":{"line":35,"column":33},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":19,"column":23}},{"generated":{"line":36,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":17,"column":36}},{"generated":{"line":36,"column":13},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":17,"column":21}},{"generated":{"line":36,"column":14},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"name":"Envelope","generated":{"line":38,"column":19},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":25}},{"generated":{"line":38,"column":27},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":33}},{"name":"seal","generated":{"line":38,"column":28},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":34}},{"generated":{"line":38,"column":32},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":25}},{"name":"peerRecord","generated":{"line":38,"column":33},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":39}},{"generated":{"line":38,"column":43},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":25}},{"name":"libp2p","generated":{"line":38,"column":45},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":51}},{"generated":{"line":38,"column":51},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":57}},{"name":"peerId","generated":{"line":38,"column":52},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":58}},{"generated":{"line":38,"column":58},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":25}},{"generated":{"line":38,"column":59},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"name":"envelope","generated":{"line":41,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":8}},{"name":"envelope","generated":{"line":41,"column":12},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":21,"column":8}},{"generated":{"line":41,"column":20},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"name":"libp2p","generated":{"line":42,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":2}},{"name":"libp2p","generated":{"line":42,"column":12},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":2}},{"generated":{"line":42,"column":18},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":8}},{"name":"peerStore","generated":{"line":42,"column":19},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":9}},{"generated":{"line":42,"column":28},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":2}},{"name":"addressBook","generated":{"line":42,"column":29},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":19}},{"generated":{"line":42,"column":40},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":2}},{"name":"consumePeerRecord","generated":{"line":42,"column":41},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":31}},{"generated":{"line":42,"column":58},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":2}},{"name":"envelope","generated":{"line":42,"column":59},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":49}},{"generated":{"line":42,"column":67},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":22,"column":2}},{"generated":{"line":44,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":46,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":48,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":16,"column":0}},{"name":"module","generated":{"line":54,"column":0},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":25,"column":0}},{"generated":{"line":54,"column":6},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":25,"column":6}},{"name":"exports","generated":{"line":54,"column":7},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":25,"column":7}},{"generated":{"line":54,"column":14},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":25,"column":0}},{"name":"updateSelfPeerRecord","generated":{"line":54,"column":15},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":25,"column":15}},{"generated":{"line":54,"column":35},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":25,"column":0}},{"name":"updateSelfPeerRecord","generated":{"line":54,"column":38},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":25,"column":38}},{"generated":{"line":54,"column":58},"source":"../node_modules/libp2p/src/record/utils.js","original":{"line":25,"column":0}}],"sources":{"../node_modules/libp2p/src/record/utils.js":"'use strict'\n\nconst Envelope = require('./envelope')\nconst PeerRecord = require('./peer-record')\n\n/**\n * @typedef {import('../')} Libp2p\n */\n\n/**\n * Create (or update if existing) self peer record and store it in the AddressBook.\n *\n * @param {Libp2p} libp2p\n * @returns {Promise<void>}\n */\nasync function updateSelfPeerRecord (libp2p) {\n  const peerRecord = new PeerRecord({\n    peerId: libp2p.peerId,\n    multiaddrs: libp2p.multiaddrs\n  })\n  const envelope = await Envelope.seal(peerRecord, libp2p.peerId)\n  libp2p.peerStore.addressBook.consumePeerRecord(envelope)\n}\n\nmodule.exports.updateSelfPeerRecord = updateSelfPeerRecord\n"},"lineCount":null}},"error":null,"hash":"69039edfff2efe4f10716b0257628b30","cacheData":{"env":{}}}