{"id":"../node_modules/it-length-prefixed/src/varint-encode.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-length-prefixed\\package.json","includedInParent":true,"mtime":1638722718113},{"name":"varint","loc":{"line":4,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-length-prefixed\\src\\varint-encode.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\varint\\index.js"},{"name":"buffer","loc":{"line":5,"column":27},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-length-prefixed\\src\\varint-encode.js","resolved":"C:\\Users\\matte\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"}],"generated":{"js":"\n'use strict'\n\n// @ts-ignore no types\nconst Varint = require('varint')\nconst { Buffer } = require('buffer')\n\n/**\n * Encode the passed length `value` to the `target` buffer at the given `offset`\n *\n * @type {import('./types').LengthEncoderFunction}\n */\n// @ts-ignore cannot declare expected bytes property\nconst varintEncode = (value, target, offset) => {\n  const ret = Varint.encode(value, target, offset)\n  varintEncode.bytes = Varint.encode.bytes\n  // If no target, create Buffer from returned array\n  return target || Buffer.from(ret)\n}\n\nmodule.exports = varintEncode\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../node_modules/it-length-prefixed/src/varint-encode.js":"'use strict'\n\n// @ts-ignore no types\nconst Varint = require('varint')\nconst { Buffer } = require('buffer')\n\n/**\n * Encode the passed length `value` to the `target` buffer at the given `offset`\n *\n * @type {import('./types').LengthEncoderFunction}\n */\n// @ts-ignore cannot declare expected bytes property\nconst varintEncode = (value, target, offset) => {\n  const ret = Varint.encode(value, target, offset)\n  varintEncode.bytes = Varint.encode.bytes\n  // If no target, create Buffer from returned array\n  return target || Buffer.from(ret)\n}\n\nmodule.exports = varintEncode\n"},"lineCount":22}},"error":null,"hash":"97140b04020f3278c5e7181b931b6ecf","cacheData":{"env":{}}}