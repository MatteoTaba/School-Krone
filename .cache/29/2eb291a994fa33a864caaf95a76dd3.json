{"id":"../node_modules/ipfs-core/cjs/src/components/dht.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"peer-id","loc":{"line":5,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\dht.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\peer-id\\src\\index.js"},{"name":"err-code","loc":{"line":6,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\dht.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"../errors.js","loc":{"line":7,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\dht.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\errors.js"},{"name":"dlv","loc":{"line":8,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\dht.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\dlv\\dist\\dlv.umd.js"},{"name":"ipfs-core-utils/with-timeout-option","loc":{"line":9,"column":32},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\dht.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-utils\\cjs\\src\\with-timeout-option.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar PeerId = require('peer-id');\nvar errCode = require('err-code');\nvar errors = require('../errors.js');\nvar get = require('dlv');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\n\nfunction createDht({network, repo}) {\n  const {get, put, findProvs, findPeer, provide, query} = {\n    async get(key, options = {}) {\n      const {libp2p} = await use(network, options);\n      return libp2p._dht.get(key, options);\n    },\n    async *put(key, value, options) {\n      const {libp2p} = await use(network, options);\n      yield* libp2p._dht.put(key, value);\n    },\n    async *findProvs(cid, options = { numProviders: 20 }) {\n      const {libp2p} = await use(network, options);\n      for await (const peer of libp2p._dht.findProviders(cid, {\n          maxNumProviders: options.numProviders,\n          signal: options.signal\n        })) {\n        yield {\n          id: peer.id.toB58String(),\n          addrs: peer.addrs\n        };\n      }\n    },\n    async findPeer(peerId, options) {\n      const {libp2p} = await use(network, options);\n      const peer = await libp2p._dht.findPeer(PeerId__default[\"default\"].parse(peerId));\n      return {\n        id: peer.id.toB58String(),\n        addrs: peer.multiaddrs\n      };\n    },\n    async *provide(cids, options = { recursive: false }) {\n      const {libp2p} = await use(network, options);\n      const cidArr = Array.isArray(cids) ? cids : [cids];\n      const hasCids = await Promise.all(cidArr.map(cid => repo.blocks.has(cid)));\n      const hasAll = hasCids.every(has => has);\n      if (!hasAll) {\n        throw errCode__default[\"default\"](new Error('block(s) not found locally, cannot provide'), 'ERR_BLOCK_NOT_FOUND');\n      }\n      if (options.recursive) {\n        throw errCode__default[\"default\"](new Error('not implemented yet'), 'ERR_NOT_IMPLEMENTED_YET');\n      }\n      for (const cid of cidArr) {\n        yield libp2p._dht.provide(cid);\n      }\n    },\n    async *query(peerId, options) {\n      const {libp2p} = await use(network, options);\n      for await (const closerPeerId of libp2p._dht.getClosestPeers(PeerId__default[\"default\"].parse(peerId).toBytes())) {\n        yield {\n          id: closerPeerId.toB58String(),\n          addrs: []\n        };\n      }\n    }\n  };\n  return {\n    get: withTimeoutOption.withTimeoutOption(get),\n    put: withTimeoutOption.withTimeoutOption(put),\n    findProvs: withTimeoutOption.withTimeoutOption(findProvs),\n    findPeer: withTimeoutOption.withTimeoutOption(findPeer),\n    provide: withTimeoutOption.withTimeoutOption(provide),\n    query: withTimeoutOption.withTimeoutOption(query)\n  };\n}\nconst use = async (network, options) => {\n  const net = await network.use(options);\n  if (get__default[\"default\"](net.libp2p, '_config.dht.enabled', false)) {\n    return net;\n  } else {\n    throw new errors.NotEnabledError('dht not enabled');\n  }\n};\n\nexports.createDht = createDht;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/dht.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/dht.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar PeerId = require('peer-id');\nvar errCode = require('err-code');\nvar errors = require('../errors.js');\nvar get = require('dlv');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\n\nfunction createDht({network, repo}) {\n  const {get, put, findProvs, findPeer, provide, query} = {\n    async get(key, options = {}) {\n      const {libp2p} = await use(network, options);\n      return libp2p._dht.get(key, options);\n    },\n    async *put(key, value, options) {\n      const {libp2p} = await use(network, options);\n      yield* libp2p._dht.put(key, value);\n    },\n    async *findProvs(cid, options = { numProviders: 20 }) {\n      const {libp2p} = await use(network, options);\n      for await (const peer of libp2p._dht.findProviders(cid, {\n          maxNumProviders: options.numProviders,\n          signal: options.signal\n        })) {\n        yield {\n          id: peer.id.toB58String(),\n          addrs: peer.addrs\n        };\n      }\n    },\n    async findPeer(peerId, options) {\n      const {libp2p} = await use(network, options);\n      const peer = await libp2p._dht.findPeer(PeerId__default[\"default\"].parse(peerId));\n      return {\n        id: peer.id.toB58String(),\n        addrs: peer.multiaddrs\n      };\n    },\n    async *provide(cids, options = { recursive: false }) {\n      const {libp2p} = await use(network, options);\n      const cidArr = Array.isArray(cids) ? cids : [cids];\n      const hasCids = await Promise.all(cidArr.map(cid => repo.blocks.has(cid)));\n      const hasAll = hasCids.every(has => has);\n      if (!hasAll) {\n        throw errCode__default[\"default\"](new Error('block(s) not found locally, cannot provide'), 'ERR_BLOCK_NOT_FOUND');\n      }\n      if (options.recursive) {\n        throw errCode__default[\"default\"](new Error('not implemented yet'), 'ERR_NOT_IMPLEMENTED_YET');\n      }\n      for (const cid of cidArr) {\n        yield libp2p._dht.provide(cid);\n      }\n    },\n    async *query(peerId, options) {\n      const {libp2p} = await use(network, options);\n      for await (const closerPeerId of libp2p._dht.getClosestPeers(PeerId__default[\"default\"].parse(peerId).toBytes())) {\n        yield {\n          id: closerPeerId.toB58String(),\n          addrs: []\n        };\n      }\n    }\n  };\n  return {\n    get: withTimeoutOption.withTimeoutOption(get),\n    put: withTimeoutOption.withTimeoutOption(put),\n    findProvs: withTimeoutOption.withTimeoutOption(findProvs),\n    findPeer: withTimeoutOption.withTimeoutOption(findPeer),\n    provide: withTimeoutOption.withTimeoutOption(provide),\n    query: withTimeoutOption.withTimeoutOption(query)\n  };\n}\nconst use = async (network, options) => {\n  const net = await network.use(options);\n  if (get__default[\"default\"](net.libp2p, '_config.dht.enabled', false)) {\n    return net;\n  } else {\n    throw new errors.NotEnabledError('dht not enabled');\n  }\n};\n\nexports.createDht = createDht;\n"},"lineCount":91}},"error":null,"hash":"cd55d97da2de0a459da35aa0bbb1a5c6","cacheData":{"env":{}}}