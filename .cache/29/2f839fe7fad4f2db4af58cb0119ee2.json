{"id":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"debug","loc":{"line":5,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\name\\resolve.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"},{"name":"err-code","loc":{"line":6,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\name\\resolve.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"merge-options","loc":{"line":7,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\name\\resolve.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\merge-options\\index.js"},{"name":"multiformats/cid","loc":{"line":8,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\name\\resolve.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\cid.js"},{"name":"peer-id","loc":{"line":9,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\name\\resolve.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\peer-id\\src\\index.js"},{"name":"is-domain-name","loc":{"line":10,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\name\\resolve.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\is-domain-name\\index.js"},{"name":"uint8arrays/to-string","loc":{"line":11,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\name\\resolve.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\to-string.js"},{"name":"../../utils.js","loc":{"line":12,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\name\\resolve.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\utils.js"},{"name":"ipfs-core-utils/with-timeout-option","loc":{"line":13,"column":32},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\name\\resolve.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-utils\\cjs\\src\\with-timeout-option.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar errCode = require('err-code');\nvar mergeOpts = require('merge-options');\nvar cid = require('multiformats/cid');\nvar PeerId = require('peer-id');\nvar isDomain = require('is-domain-name');\nvar toString = require('uint8arrays/to-string');\nvar utils = require('../../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\nvar isDomain__default = /*#__PURE__*/_interopDefaultLegacy(isDomain);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({ ignoreUndefined: true });\nconst log = Object.assign(debug__default[\"default\"]('ipfs:name:resolve'), { error: debug__default[\"default\"]('ipfs:name:resolve:error') });\nconst appendRemainder = (result, remainder) => remainder.length > 0 ? result + '/' + remainder.join('/') : result;\nfunction createResolve({\n  dns,\n  ipns,\n  peerId,\n  isOnline,\n  options: {offline}\n}) {\n  async function* resolve(name, options = {}) {\n    options = mergeOptions({\n      nocache: false,\n      recursive: true\n    }, options);\n    if (offline && options && options.nocache) {\n      throw errCode__default[\"default\"](new Error('cannot specify both offline and nocache'), 'ERR_NOCACHE_AND_OFFLINE');\n    }\n    if (!name) {\n      name = peerId.toB58String();\n    }\n    if (!name.startsWith('/ipns/')) {\n      name = `/ipns/${ name }`;\n    }\n    const [namespace, hash, ...remainder] = name.slice(1).split('/');\n    try {\n      if (hash.substring(0, 1) === '1') {\n        PeerId__default[\"default\"].parse(hash);\n      } else {\n        cid.CID.parse(hash);\n      }\n    } catch (err) {\n      if (isDomain__default[\"default\"](hash)) {\n        yield appendRemainder(await dns(hash, options), remainder);\n        return;\n      }\n      log.error(err);\n      throw errCode__default[\"default\"](new Error('Invalid IPNS name'), 'ERR_IPNS_INVALID_NAME');\n    }\n    if (!isOnline() && !offline) {\n      throw errCode__default[\"default\"](new Error(utils.OFFLINE_ERROR), 'OFFLINE_ERROR');\n    }\n    const value = await ipns.resolve(`/${ namespace }/${ hash }`, options);\n    yield appendRemainder(value instanceof Uint8Array ? toString.toString(value) : value, remainder);\n  }\n  return withTimeoutOption.withTimeoutOption(resolve);\n}\n\nexports.createResolve = createResolve;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/name/resolve.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/name/resolve.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar errCode = require('err-code');\nvar mergeOpts = require('merge-options');\nvar cid = require('multiformats/cid');\nvar PeerId = require('peer-id');\nvar isDomain = require('is-domain-name');\nvar toString = require('uint8arrays/to-string');\nvar utils = require('../../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\nvar isDomain__default = /*#__PURE__*/_interopDefaultLegacy(isDomain);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({ ignoreUndefined: true });\nconst log = Object.assign(debug__default[\"default\"]('ipfs:name:resolve'), { error: debug__default[\"default\"]('ipfs:name:resolve:error') });\nconst appendRemainder = (result, remainder) => remainder.length > 0 ? result + '/' + remainder.join('/') : result;\nfunction createResolve({\n  dns,\n  ipns,\n  peerId,\n  isOnline,\n  options: {offline}\n}) {\n  async function* resolve(name, options = {}) {\n    options = mergeOptions({\n      nocache: false,\n      recursive: true\n    }, options);\n    if (offline && options && options.nocache) {\n      throw errCode__default[\"default\"](new Error('cannot specify both offline and nocache'), 'ERR_NOCACHE_AND_OFFLINE');\n    }\n    if (!name) {\n      name = peerId.toB58String();\n    }\n    if (!name.startsWith('/ipns/')) {\n      name = `/ipns/${ name }`;\n    }\n    const [namespace, hash, ...remainder] = name.slice(1).split('/');\n    try {\n      if (hash.substring(0, 1) === '1') {\n        PeerId__default[\"default\"].parse(hash);\n      } else {\n        cid.CID.parse(hash);\n      }\n    } catch (err) {\n      if (isDomain__default[\"default\"](hash)) {\n        yield appendRemainder(await dns(hash, options), remainder);\n        return;\n      }\n      log.error(err);\n      throw errCode__default[\"default\"](new Error('Invalid IPNS name'), 'ERR_IPNS_INVALID_NAME');\n    }\n    if (!isOnline() && !offline) {\n      throw errCode__default[\"default\"](new Error(utils.OFFLINE_ERROR), 'OFFLINE_ERROR');\n    }\n    const value = await ipns.resolve(`/${ namespace }/${ hash }`, options);\n    yield appendRemainder(value instanceof Uint8Array ? toString.toString(value) : value, remainder);\n  }\n  return withTimeoutOption.withTimeoutOption(resolve);\n}\n\nexports.createResolve = createResolve;\n"},"lineCount":72}},"error":null,"hash":"868a4718ee2070559f7abca4b4cffbc3","cacheData":{"env":{}}}