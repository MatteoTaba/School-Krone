{"id":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"ipfs-core-utils/pins/normalise-input","loc":{"line":5,"column":29},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\pin\\rm-all.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-utils\\cjs\\src\\pins\\normalise-input.js"},{"name":"../../utils.js","loc":{"line":6,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\pin\\rm-all.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\utils.js"},{"name":"ipfs-core-utils/with-timeout-option","loc":{"line":7,"column":32},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\pin\\rm-all.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-utils\\cjs\\src\\with-timeout-option.js"},{"name":"ipfs-repo/pin-types","loc":{"line":8,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\pin\\rm-all.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\pin-types.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\nvar utils = require('../../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar pinTypes = require('ipfs-repo/pin-types');\n\nfunction createRmAll({repo, codecs}) {\n  async function* rmAll(source, _options = {}) {\n    const release = await repo.gcLock.readLock();\n    try {\n      for await (const {path, recursive} of normaliseInput.normaliseInput(source)) {\n        const {cid} = await utils.resolvePath(repo, codecs, path);\n        const {pinned, reason} = await repo.pins.isPinnedWithType(cid, pinTypes.PinTypes.all);\n        if (!pinned) {\n          throw new Error(`${ cid } is not pinned`);\n        }\n        switch (reason) {\n        case pinTypes.PinTypes.recursive:\n          if (!recursive) {\n            throw new Error(`${ cid } is pinned recursively`);\n          }\n          await repo.pins.unpin(cid);\n          yield cid;\n          break;\n        case pinTypes.PinTypes.direct:\n          await repo.pins.unpin(cid);\n          yield cid;\n          break;\n        default:\n          throw new Error(`${ cid } is pinned indirectly under ${ reason }`);\n        }\n      }\n    } finally {\n      release();\n    }\n  }\n  return withTimeoutOption.withTimeoutOption(rmAll);\n}\n\nexports.createRmAll = createRmAll;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/pin/rm-all.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\nvar utils = require('../../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar pinTypes = require('ipfs-repo/pin-types');\n\nfunction createRmAll({repo, codecs}) {\n  async function* rmAll(source, _options = {}) {\n    const release = await repo.gcLock.readLock();\n    try {\n      for await (const {path, recursive} of normaliseInput.normaliseInput(source)) {\n        const {cid} = await utils.resolvePath(repo, codecs, path);\n        const {pinned, reason} = await repo.pins.isPinnedWithType(cid, pinTypes.PinTypes.all);\n        if (!pinned) {\n          throw new Error(`${ cid } is not pinned`);\n        }\n        switch (reason) {\n        case pinTypes.PinTypes.recursive:\n          if (!recursive) {\n            throw new Error(`${ cid } is pinned recursively`);\n          }\n          await repo.pins.unpin(cid);\n          yield cid;\n          break;\n        case pinTypes.PinTypes.direct:\n          await repo.pins.unpin(cid);\n          yield cid;\n          break;\n        default:\n          throw new Error(`${ cid } is pinned indirectly under ${ reason }`);\n        }\n      }\n    } finally {\n      release();\n    }\n  }\n  return withTimeoutOption.withTimeoutOption(rmAll);\n}\n\nexports.createRmAll = createRmAll;\n"},"lineCount":44}},"error":null,"hash":"248813e8508be15e3a59a1d153abf184","cacheData":{"env":{}}}