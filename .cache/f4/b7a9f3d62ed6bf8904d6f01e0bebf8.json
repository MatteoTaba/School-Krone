{"id":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\package.json","includedInParent":true,"mtime":1638722720608},{"name":"./want-manager/index.js","loc":{"line":5,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\want-manager\\index.js"},{"name":"./network.js","loc":{"line":6,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\network.js"},{"name":"./decision-engine/index.js","loc":{"line":7,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\decision-engine\\index.js"},{"name":"./notifications.js","loc":{"line":8,"column":28},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\notifications.js"},{"name":"./utils/index.js","loc":{"line":9,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\utils\\index.js"},{"name":"./stats/index.js","loc":{"line":10,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\stats\\index.js"},{"name":"native-abort-controller","loc":{"line":11,"column":36},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\native-abort-controller\\src\\index.js"},{"name":"any-signal","loc":{"line":12,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\any-signal\\index.js"},{"name":"blockstore-core/base","loc":{"line":13,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\blockstore-core\\cjs\\src\\base.js"},{"name":"multiformats/cid","loc":{"line":14,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\bitswap.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\cid.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index$3 = require('./want-manager/index.js');\nvar network = require('./network.js');\nvar index$2 = require('./decision-engine/index.js');\nvar notifications = require('./notifications.js');\nvar index = require('./utils/index.js');\nvar index$1 = require('./stats/index.js');\nvar nativeAbortController = require('native-abort-controller');\nvar anySignal = require('any-signal');\nvar base = require('blockstore-core/base');\nvar cid = require('multiformats/cid');\n\nconst defaultOptions = {\n  statsEnabled: false,\n  statsComputeThrottleTimeout: 1000,\n  statsComputeThrottleMaxQueueSize: 1000\n};\nconst statsKeys = [\n  'blocksReceived',\n  'dataReceived',\n  'dupBlksReceived',\n  'dupDataReceived',\n  'blocksSent',\n  'dataSent',\n  'providesBufferLength',\n  'wantListLength',\n  'peerCount'\n];\nclass Bitswap extends base.BaseBlockstore {\n  constructor(libp2p, blockstore, options = {}) {\n    super();\n    this._libp2p = libp2p;\n    this._log = index.logger(this.peerId);\n    this._options = Object.assign({}, defaultOptions, options);\n    this._stats = new index$1.Stats(statsKeys, {\n      enabled: this._options.statsEnabled,\n      computeThrottleTimeout: this._options.statsComputeThrottleTimeout,\n      computeThrottleMaxQueueSize: this._options.statsComputeThrottleMaxQueueSize\n    });\n    this.network = new network.Network(libp2p, this, this._stats, { hashLoader: options.hashLoader });\n    this.blockstore = blockstore;\n    this.engine = new index$2.DecisionEngine(this.peerId, blockstore, this.network, this._stats);\n    this.wm = new index$3.WantManager(this.peerId, this.network, this._stats);\n    this.notifications = new notifications.Notifications(this.peerId);\n    this.started = false;\n  }\n  isStarted() {\n    return this.started;\n  }\n  get peerId() {\n    return this._libp2p.peerId;\n  }\n  async _receiveMessage(peerId, incoming) {\n    try {\n      await this.engine.messageReceived(peerId, incoming);\n    } catch (err) {\n      this._log('failed to receive message', incoming);\n    }\n    if (incoming.blocks.size === 0) {\n      return;\n    }\n    const received = [];\n    for (const [cidStr, data] of incoming.blocks.entries()) {\n      const cid$1 = cid.CID.parse(cidStr);\n      received.push({\n        wasWanted: this.wm.wantlist.contains(cid$1),\n        cid: cid$1,\n        data\n      });\n    }\n    this.wm.cancelWants(received.filter(({wasWanted}) => wasWanted).map(({cid}) => cid));\n    await Promise.all(received.map(({cid, wasWanted, data}) => this._handleReceivedBlock(peerId, cid, data, wasWanted)));\n  }\n  async _handleReceivedBlock(peerId, cid, data, wasWanted) {\n    this._log('received block');\n    const has = await this.blockstore.has(cid);\n    this._updateReceiveCounters(peerId.toB58String(), cid, data, has);\n    if (!wasWanted) {\n      return;\n    }\n    await this.put(cid, data);\n  }\n  _updateReceiveCounters(peerIdStr, cid, data, exists) {\n    this._stats.push(peerIdStr, 'blocksReceived', 1);\n    this._stats.push(peerIdStr, 'dataReceived', data.length);\n    if (exists) {\n      this._stats.push(peerIdStr, 'dupBlksReceived', 1);\n      this._stats.push(peerIdStr, 'dupDataReceived', data.length);\n    }\n  }\n  _receiveError(err) {\n    this._log.error('ReceiveError: %s', err.message);\n  }\n  _onPeerConnected(peerId) {\n    this.wm.connected(peerId);\n  }\n  _onPeerDisconnected(peerId) {\n    this.wm.disconnected(peerId);\n    this.engine.peerDisconnected(peerId);\n    this._stats.disconnected(peerId);\n  }\n  enableStats() {\n    this._stats.enable();\n  }\n  disableStats() {\n    this._stats.disable();\n  }\n  wantlistForPeer(peerId, _options) {\n    return this.engine.wantlistForPeer(peerId);\n  }\n  ledgerForPeer(peerId) {\n    return this.engine.ledgerForPeer(peerId);\n  }\n  async get(cid, options = {}) {\n    const fetchFromNetwork = (cid, options) => {\n      this.wm.wantBlocks([cid], options);\n      return this.notifications.wantBlock(cid, options);\n    };\n    let promptedNetwork = false;\n    const loadOrFetchFromNetwork = async (cid, options) => {\n      try {\n        const block = await this.blockstore.get(cid, options);\n        return block;\n      } catch (err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err;\n        }\n        if (!promptedNetwork) {\n          promptedNetwork = true;\n          this.network.findAndConnect(cid).catch(err => this._log.error(err));\n        }\n        return fetchFromNetwork(cid, options);\n      }\n    };\n    const controller = new nativeAbortController.AbortController();\n    const signal = options.signal ? anySignal.anySignal([\n      options.signal,\n      controller.signal\n    ]) : controller.signal;\n    const block = await Promise.race([\n      this.notifications.wantBlock(cid, { signal }),\n      loadOrFetchFromNetwork(cid, { signal })\n    ]);\n    controller.abort();\n    return block;\n  }\n  async *getMany(cids, options = {}) {\n    for await (const cid of cids) {\n      yield this.get(cid, options);\n    }\n  }\n  unwant(cids) {\n    const cidsArray = Array.isArray(cids) ? cids : [cids];\n    this.wm.unwantBlocks(cidsArray);\n    cidsArray.forEach(cid => this.notifications.unwantBlock(cid));\n  }\n  cancelWants(cids) {\n    this.wm.cancelWants(Array.isArray(cids) ? cids : [cids]);\n  }\n  async put(cid, block, _options) {\n    await this.blockstore.put(cid, block);\n    this._sendHaveBlockNotifications(cid, block);\n  }\n  async *putMany(source, options) {\n    for await (const {key, value} of this.blockstore.putMany(source, options)) {\n      this._sendHaveBlockNotifications(key, value);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  _sendHaveBlockNotifications(cid, data) {\n    this.notifications.hasBlock(cid, data);\n    this.engine.receivedBlocks([{\n        cid,\n        data\n      }]);\n    this.network.provide(cid).catch(err => {\n      this._log.error('Failed to provide: %s', err.message);\n    });\n  }\n  getWantlist() {\n    return this.wm.wantlist.entries();\n  }\n  peers() {\n    return this.engine.peers();\n  }\n  stat() {\n    return this._stats;\n  }\n  start() {\n    this.wm.start();\n    this.network.start();\n    this.engine.start();\n    this.started = true;\n  }\n  stop() {\n    this._stats.stop();\n    this.wm.stop();\n    this.network.stop();\n    this.engine.stop();\n    this.started = false;\n  }\n  unwrap() {\n    return this.blockstore;\n  }\n}\n\nexports.Bitswap = Bitswap;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/bitswap.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}}],"sources":{"../node_modules/ipfs-bitswap/cjs/src/bitswap.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index$3 = require('./want-manager/index.js');\nvar network = require('./network.js');\nvar index$2 = require('./decision-engine/index.js');\nvar notifications = require('./notifications.js');\nvar index = require('./utils/index.js');\nvar index$1 = require('./stats/index.js');\nvar nativeAbortController = require('native-abort-controller');\nvar anySignal = require('any-signal');\nvar base = require('blockstore-core/base');\nvar cid = require('multiformats/cid');\n\nconst defaultOptions = {\n  statsEnabled: false,\n  statsComputeThrottleTimeout: 1000,\n  statsComputeThrottleMaxQueueSize: 1000\n};\nconst statsKeys = [\n  'blocksReceived',\n  'dataReceived',\n  'dupBlksReceived',\n  'dupDataReceived',\n  'blocksSent',\n  'dataSent',\n  'providesBufferLength',\n  'wantListLength',\n  'peerCount'\n];\nclass Bitswap extends base.BaseBlockstore {\n  constructor(libp2p, blockstore, options = {}) {\n    super();\n    this._libp2p = libp2p;\n    this._log = index.logger(this.peerId);\n    this._options = Object.assign({}, defaultOptions, options);\n    this._stats = new index$1.Stats(statsKeys, {\n      enabled: this._options.statsEnabled,\n      computeThrottleTimeout: this._options.statsComputeThrottleTimeout,\n      computeThrottleMaxQueueSize: this._options.statsComputeThrottleMaxQueueSize\n    });\n    this.network = new network.Network(libp2p, this, this._stats, { hashLoader: options.hashLoader });\n    this.blockstore = blockstore;\n    this.engine = new index$2.DecisionEngine(this.peerId, blockstore, this.network, this._stats);\n    this.wm = new index$3.WantManager(this.peerId, this.network, this._stats);\n    this.notifications = new notifications.Notifications(this.peerId);\n    this.started = false;\n  }\n  isStarted() {\n    return this.started;\n  }\n  get peerId() {\n    return this._libp2p.peerId;\n  }\n  async _receiveMessage(peerId, incoming) {\n    try {\n      await this.engine.messageReceived(peerId, incoming);\n    } catch (err) {\n      this._log('failed to receive message', incoming);\n    }\n    if (incoming.blocks.size === 0) {\n      return;\n    }\n    const received = [];\n    for (const [cidStr, data] of incoming.blocks.entries()) {\n      const cid$1 = cid.CID.parse(cidStr);\n      received.push({\n        wasWanted: this.wm.wantlist.contains(cid$1),\n        cid: cid$1,\n        data\n      });\n    }\n    this.wm.cancelWants(received.filter(({wasWanted}) => wasWanted).map(({cid}) => cid));\n    await Promise.all(received.map(({cid, wasWanted, data}) => this._handleReceivedBlock(peerId, cid, data, wasWanted)));\n  }\n  async _handleReceivedBlock(peerId, cid, data, wasWanted) {\n    this._log('received block');\n    const has = await this.blockstore.has(cid);\n    this._updateReceiveCounters(peerId.toB58String(), cid, data, has);\n    if (!wasWanted) {\n      return;\n    }\n    await this.put(cid, data);\n  }\n  _updateReceiveCounters(peerIdStr, cid, data, exists) {\n    this._stats.push(peerIdStr, 'blocksReceived', 1);\n    this._stats.push(peerIdStr, 'dataReceived', data.length);\n    if (exists) {\n      this._stats.push(peerIdStr, 'dupBlksReceived', 1);\n      this._stats.push(peerIdStr, 'dupDataReceived', data.length);\n    }\n  }\n  _receiveError(err) {\n    this._log.error('ReceiveError: %s', err.message);\n  }\n  _onPeerConnected(peerId) {\n    this.wm.connected(peerId);\n  }\n  _onPeerDisconnected(peerId) {\n    this.wm.disconnected(peerId);\n    this.engine.peerDisconnected(peerId);\n    this._stats.disconnected(peerId);\n  }\n  enableStats() {\n    this._stats.enable();\n  }\n  disableStats() {\n    this._stats.disable();\n  }\n  wantlistForPeer(peerId, _options) {\n    return this.engine.wantlistForPeer(peerId);\n  }\n  ledgerForPeer(peerId) {\n    return this.engine.ledgerForPeer(peerId);\n  }\n  async get(cid, options = {}) {\n    const fetchFromNetwork = (cid, options) => {\n      this.wm.wantBlocks([cid], options);\n      return this.notifications.wantBlock(cid, options);\n    };\n    let promptedNetwork = false;\n    const loadOrFetchFromNetwork = async (cid, options) => {\n      try {\n        const block = await this.blockstore.get(cid, options);\n        return block;\n      } catch (err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err;\n        }\n        if (!promptedNetwork) {\n          promptedNetwork = true;\n          this.network.findAndConnect(cid).catch(err => this._log.error(err));\n        }\n        return fetchFromNetwork(cid, options);\n      }\n    };\n    const controller = new nativeAbortController.AbortController();\n    const signal = options.signal ? anySignal.anySignal([\n      options.signal,\n      controller.signal\n    ]) : controller.signal;\n    const block = await Promise.race([\n      this.notifications.wantBlock(cid, { signal }),\n      loadOrFetchFromNetwork(cid, { signal })\n    ]);\n    controller.abort();\n    return block;\n  }\n  async *getMany(cids, options = {}) {\n    for await (const cid of cids) {\n      yield this.get(cid, options);\n    }\n  }\n  unwant(cids) {\n    const cidsArray = Array.isArray(cids) ? cids : [cids];\n    this.wm.unwantBlocks(cidsArray);\n    cidsArray.forEach(cid => this.notifications.unwantBlock(cid));\n  }\n  cancelWants(cids) {\n    this.wm.cancelWants(Array.isArray(cids) ? cids : [cids]);\n  }\n  async put(cid, block, _options) {\n    await this.blockstore.put(cid, block);\n    this._sendHaveBlockNotifications(cid, block);\n  }\n  async *putMany(source, options) {\n    for await (const {key, value} of this.blockstore.putMany(source, options)) {\n      this._sendHaveBlockNotifications(key, value);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  _sendHaveBlockNotifications(cid, data) {\n    this.notifications.hasBlock(cid, data);\n    this.engine.receivedBlocks([{\n        cid,\n        data\n      }]);\n    this.network.provide(cid).catch(err => {\n      this._log.error('Failed to provide: %s', err.message);\n    });\n  }\n  getWantlist() {\n    return this.wm.wantlist.entries();\n  }\n  peers() {\n    return this.engine.peers();\n  }\n  stat() {\n    return this._stats;\n  }\n  start() {\n    this.wm.start();\n    this.network.start();\n    this.engine.start();\n    this.started = true;\n  }\n  stop() {\n    this._stats.stop();\n    this.wm.stop();\n    this.network.stop();\n    this.engine.stop();\n    this.started = false;\n  }\n  unwrap() {\n    return this.blockstore;\n  }\n}\n\nexports.Bitswap = Bitswap;\n"},"lineCount":214}},"error":null,"hash":"5dde5c89a1187e3f4df96f1fc051518a","cacheData":{"env":{}}}