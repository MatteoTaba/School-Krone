{"id":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"./with-mfs-root.js","loc":{"line":5,"column":26},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-mfs-path.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\with-mfs-root.js"},{"name":"./to-path-components.js","loc":{"line":6,"column":31},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-mfs-path.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-path-components.js"},{"name":"ipfs-unixfs-exporter","loc":{"line":7,"column":33},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-mfs-path.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-unixfs-exporter\\cjs\\src\\index.js"},{"name":"err-code","loc":{"line":8,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-mfs-path.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"multiformats/cid","loc":{"line":9,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-mfs-path.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\cid.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar withMfsRoot = require('./with-mfs-root.js');\nvar toPathComponents = require('./to-path-components.js');\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\nvar errCode = require('err-code');\nvar cid = require('multiformats/cid');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst IPFS_PREFIX = 'ipfs';\nconst toMfsPath = async (context, path, options) => {\n  const root = await withMfsRoot.loadMfsRoot(context, options);\n  let output = { entryType: 'file' };\n  let ipfsPath = '';\n  if (cid.CID.asCID(path)) {\n    ipfsPath = `/ipfs/${ path }`;\n  } else {\n    ipfsPath = path.toString();\n  }\n  ipfsPath = ipfsPath.trim();\n  ipfsPath = ipfsPath.replace(/(\\/\\/+)/g, '/');\n  if (ipfsPath.endsWith('/') && ipfsPath.length > 1) {\n    ipfsPath = ipfsPath.substring(0, ipfsPath.length - 1);\n  }\n  if (!ipfsPath) {\n    throw errCode__default[\"default\"](new Error('paths must not be empty'), 'ERR_NO_PATH');\n  }\n  if (ipfsPath.substring(0, 1) !== '/') {\n    throw errCode__default[\"default\"](new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH');\n  }\n  if (ipfsPath.substring(ipfsPath.length - 1) === '/') {\n    ipfsPath = ipfsPath.substring(0, ipfsPath.length - 1);\n  }\n  const pathComponents = toPathComponents.toPathComponents(ipfsPath);\n  if (pathComponents[0] === IPFS_PREFIX) {\n    let mfsDirectory;\n    if (pathComponents.length === 2) {\n      mfsDirectory = `/${ pathComponents.join('/') }`;\n    } else {\n      mfsDirectory = `/${ pathComponents.slice(0, pathComponents.length - 1).join('/') }`;\n    }\n    output = {\n      type: 'ipfs',\n      depth: pathComponents.length - 2,\n      entryType: 'file',\n      mfsPath: `/${ pathComponents.join('/') }`,\n      mfsDirectory,\n      parts: pathComponents,\n      path: `/${ pathComponents.join('/') }`,\n      name: pathComponents[pathComponents.length - 1]\n    };\n  } else {\n    const mfsPath = `/${ IPFS_PREFIX }/${ root }${ pathComponents.length ? '/' + pathComponents.join('/') : '' }`;\n    const mfsDirectory = `/${ IPFS_PREFIX }/${ root }/${ pathComponents.slice(0, pathComponents.length - 1).join('/') }`;\n    output = {\n      type: 'mfs',\n      depth: pathComponents.length,\n      entryType: 'file',\n      mfsDirectory,\n      mfsPath,\n      parts: pathComponents,\n      path: `/${ pathComponents.join('/') }`,\n      name: pathComponents[pathComponents.length - 1]\n    };\n  }\n  const cidPath = output.type === 'mfs' ? output.mfsPath : output.path;\n  try {\n    const res = await ipfsUnixfsExporter.exporter(cidPath, context.repo.blocks, options);\n    output.cid = res.cid;\n    output.mfsPath = `/ipfs/${ res.path }`;\n    output.entryType = res.type;\n    output.content = res.content;\n    if ((output.entryType === 'file' || output.entryType === 'directory') && (res.type === 'file' || res.type === 'directory')) {\n      output.unixfs = res.unixfs;\n    }\n  } catch (err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err;\n    }\n  }\n  output.exists = Boolean(output.cid);\n  return output;\n};\n\nexports.toMfsPath = toMfsPath;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/files/utils/to-mfs-path.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar withMfsRoot = require('./with-mfs-root.js');\nvar toPathComponents = require('./to-path-components.js');\nvar ipfsUnixfsExporter = require('ipfs-unixfs-exporter');\nvar errCode = require('err-code');\nvar cid = require('multiformats/cid');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst IPFS_PREFIX = 'ipfs';\nconst toMfsPath = async (context, path, options) => {\n  const root = await withMfsRoot.loadMfsRoot(context, options);\n  let output = { entryType: 'file' };\n  let ipfsPath = '';\n  if (cid.CID.asCID(path)) {\n    ipfsPath = `/ipfs/${ path }`;\n  } else {\n    ipfsPath = path.toString();\n  }\n  ipfsPath = ipfsPath.trim();\n  ipfsPath = ipfsPath.replace(/(\\/\\/+)/g, '/');\n  if (ipfsPath.endsWith('/') && ipfsPath.length > 1) {\n    ipfsPath = ipfsPath.substring(0, ipfsPath.length - 1);\n  }\n  if (!ipfsPath) {\n    throw errCode__default[\"default\"](new Error('paths must not be empty'), 'ERR_NO_PATH');\n  }\n  if (ipfsPath.substring(0, 1) !== '/') {\n    throw errCode__default[\"default\"](new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH');\n  }\n  if (ipfsPath.substring(ipfsPath.length - 1) === '/') {\n    ipfsPath = ipfsPath.substring(0, ipfsPath.length - 1);\n  }\n  const pathComponents = toPathComponents.toPathComponents(ipfsPath);\n  if (pathComponents[0] === IPFS_PREFIX) {\n    let mfsDirectory;\n    if (pathComponents.length === 2) {\n      mfsDirectory = `/${ pathComponents.join('/') }`;\n    } else {\n      mfsDirectory = `/${ pathComponents.slice(0, pathComponents.length - 1).join('/') }`;\n    }\n    output = {\n      type: 'ipfs',\n      depth: pathComponents.length - 2,\n      entryType: 'file',\n      mfsPath: `/${ pathComponents.join('/') }`,\n      mfsDirectory,\n      parts: pathComponents,\n      path: `/${ pathComponents.join('/') }`,\n      name: pathComponents[pathComponents.length - 1]\n    };\n  } else {\n    const mfsPath = `/${ IPFS_PREFIX }/${ root }${ pathComponents.length ? '/' + pathComponents.join('/') : '' }`;\n    const mfsDirectory = `/${ IPFS_PREFIX }/${ root }/${ pathComponents.slice(0, pathComponents.length - 1).join('/') }`;\n    output = {\n      type: 'mfs',\n      depth: pathComponents.length,\n      entryType: 'file',\n      mfsDirectory,\n      mfsPath,\n      parts: pathComponents,\n      path: `/${ pathComponents.join('/') }`,\n      name: pathComponents[pathComponents.length - 1]\n    };\n  }\n  const cidPath = output.type === 'mfs' ? output.mfsPath : output.path;\n  try {\n    const res = await ipfsUnixfsExporter.exporter(cidPath, context.repo.blocks, options);\n    output.cid = res.cid;\n    output.mfsPath = `/ipfs/${ res.path }`;\n    output.entryType = res.type;\n    output.content = res.content;\n    if ((output.entryType === 'file' || output.entryType === 'directory') && (res.type === 'file' || res.type === 'directory')) {\n      output.unixfs = res.unixfs;\n    }\n  } catch (err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err;\n    }\n  }\n  output.exists = Boolean(output.cid);\n  return output;\n};\n\nexports.toMfsPath = toMfsPath;\n"},"lineCount":91}},"error":null,"hash":"d9b38e1cbc118c40bed0b5de0efba735","cacheData":{"env":{}}}