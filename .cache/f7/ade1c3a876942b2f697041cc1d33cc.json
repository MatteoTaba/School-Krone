{"id":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\package.json","includedInParent":true,"mtime":1638722715892},{"name":"../migrations/index.js","loc":{"line":5,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\cjs\\migrations\\index.js"},{"name":"./repo/version.js","loc":{"line":6,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\cjs\\src\\repo\\version.js"},{"name":"./errors.js","loc":{"line":7,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\cjs\\src\\errors.js"},{"name":"./utils.js","loc":{"line":8,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\cjs\\src\\utils.js"},{"name":"debug","loc":{"line":9,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo-migrations\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('../migrations/index.js');\nvar version = require('./repo/version.js');\nvar errors$1 = require('./errors.js');\nvar utils = require('./utils.js');\nvar debug = require('debug');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:repo:migrator');\nfunction getLatestMigrationVersion(migrations) {\n  migrations = migrations || index;\n  if (!Array.isArray(migrations) || migrations.length === 0) {\n    return 0;\n  }\n  return migrations[migrations.length - 1].version;\n}\nasync function migrate(path, backends, repoOptions, toVersion, {ignoreLock = false, onProgress, isDryRun = false, migrations}) {\n  migrations = migrations || index;\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!');\n  }\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!');\n  }\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('toVersion argument is required!');\n  }\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!');\n  }\n  backends = utils.wrapBackends(backends);\n  const currentVersion = await version.getVersion(backends);\n  if (currentVersion === toVersion) {\n    log('Nothing to migrate.');\n    return;\n  }\n  if (currentVersion > toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${ currentVersion }) is higher then toVersion (${ toVersion }), you probably wanted to revert it?`);\n  }\n  verifyAvailableMigrations(migrations, currentVersion, toVersion);\n  let lock;\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path);\n  }\n  try {\n    for (const migration of migrations) {\n      if (toVersion !== undefined && migration.version > toVersion) {\n        break;\n      }\n      if (migration.version <= currentVersion) {\n        continue;\n      }\n      log(`Migrating version ${ migration.version }`);\n      try {\n        if (!isDryRun) {\n          let progressCallback = () => {\n          };\n          if (onProgress) {\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message);\n          }\n          await migration.migrate(backends, progressCallback);\n        }\n      } catch (e) {\n        const lastSuccessfullyMigratedVersion = migration.version - 1;\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully migrated version: ${ lastSuccessfullyMigratedVersion }`);\n        await version.setVersion(lastSuccessfullyMigratedVersion, backends);\n        throw new Error(`During migration to version ${ migration.version } exception was raised: ${ e.stack || e.message || e }`);\n      }\n      log(`Migrating to version ${ migration.version } finished`);\n    }\n    if (!isDryRun) {\n      await version.setVersion(toVersion || getLatestMigrationVersion(migrations), backends);\n    }\n    log('Repo successfully migrated', toVersion !== undefined ? `to version ${ toVersion }!` : 'to latest version!');\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close();\n    }\n  }\n}\nasync function revert(path, backends, repoOptions, toVersion, {ignoreLock = false, onProgress, isDryRun = false, migrations}) {\n  migrations = migrations || index;\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!');\n  }\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!');\n  }\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('When reverting migrations, you have to specify to which version to revert!');\n  }\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!');\n  }\n  backends = utils.wrapBackends(backends);\n  const currentVersion = await version.getVersion(backends);\n  if (currentVersion === toVersion) {\n    log('Nothing to revert.');\n    return;\n  }\n  if (currentVersion < toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${ currentVersion }) is lower then toVersion (${ toVersion }), you probably wanted to migrate it?`);\n  }\n  verifyAvailableMigrations(migrations, toVersion, currentVersion, true);\n  let lock;\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path);\n  }\n  log(`Reverting from version ${ currentVersion } to ${ toVersion }`);\n  try {\n    const reversedMigrationArray = migrations.slice().reverse();\n    for (const migration of reversedMigrationArray) {\n      if (migration.version <= toVersion) {\n        break;\n      }\n      if (migration.version > currentVersion) {\n        continue;\n      }\n      log(`Reverting migration version ${ migration.version }`);\n      try {\n        if (!isDryRun) {\n          let progressCallback = () => {\n          };\n          if (onProgress) {\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message);\n          }\n          await migration.revert(backends, progressCallback);\n        }\n      } catch (e) {\n        const lastSuccessfullyRevertedVersion = migration.version;\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully reverted version: ${ lastSuccessfullyRevertedVersion }`);\n        await version.setVersion(lastSuccessfullyRevertedVersion, backends);\n        e.message = `During reversion to version ${ migration.version } exception was raised: ${ e.message }`;\n        throw e;\n      }\n      log(`Reverting to version ${ migration.version } finished`);\n    }\n    if (!isDryRun) {\n      await version.setVersion(toVersion, backends);\n    }\n    log(`All migrations successfully reverted to version ${ toVersion }!`);\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close();\n    }\n  }\n}\nfunction verifyAvailableMigrations(migrations, fromVersion, toVersion, checkReversibility = false) {\n  let migrationCounter = 0;\n  for (const migration of migrations) {\n    if (migration.version > toVersion) {\n      break;\n    }\n    if (migration.version > fromVersion) {\n      if (checkReversibility && !migration.revert) {\n        throw new errors.NonReversibleMigrationError(`It is not possible to revert to version ${ fromVersion } because migration version ${ migration.version } is not reversible. Cancelling reversion.`);\n      }\n      migrationCounter++;\n    }\n  }\n  if (migrationCounter !== toVersion - fromVersion) {\n    throw new errors.InvalidValueError(`The ipfs-repo-migrations package does not have all migration to migrate from version ${ fromVersion } to ${ toVersion }`);\n  }\n}\nconst getCurrentRepoVersion = version.getVersion;\nconst errors = errors$1;\nconst migrations = index;\n\nexports.errors = errors;\nexports.getCurrentRepoVersion = getCurrentRepoVersion;\nexports.getLatestMigrationVersion = getLatestMigrationVersion;\nexports.migrate = migrate;\nexports.migrations = migrations;\nexports.revert = revert;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipfs-repo-migrations/cjs/src/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}}],"sources":{"../node_modules/ipfs-repo-migrations/cjs/src/index.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('../migrations/index.js');\nvar version = require('./repo/version.js');\nvar errors$1 = require('./errors.js');\nvar utils = require('./utils.js');\nvar debug = require('debug');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:repo:migrator');\nfunction getLatestMigrationVersion(migrations) {\n  migrations = migrations || index;\n  if (!Array.isArray(migrations) || migrations.length === 0) {\n    return 0;\n  }\n  return migrations[migrations.length - 1].version;\n}\nasync function migrate(path, backends, repoOptions, toVersion, {ignoreLock = false, onProgress, isDryRun = false, migrations}) {\n  migrations = migrations || index;\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!');\n  }\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!');\n  }\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('toVersion argument is required!');\n  }\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!');\n  }\n  backends = utils.wrapBackends(backends);\n  const currentVersion = await version.getVersion(backends);\n  if (currentVersion === toVersion) {\n    log('Nothing to migrate.');\n    return;\n  }\n  if (currentVersion > toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${ currentVersion }) is higher then toVersion (${ toVersion }), you probably wanted to revert it?`);\n  }\n  verifyAvailableMigrations(migrations, currentVersion, toVersion);\n  let lock;\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path);\n  }\n  try {\n    for (const migration of migrations) {\n      if (toVersion !== undefined && migration.version > toVersion) {\n        break;\n      }\n      if (migration.version <= currentVersion) {\n        continue;\n      }\n      log(`Migrating version ${ migration.version }`);\n      try {\n        if (!isDryRun) {\n          let progressCallback = () => {\n          };\n          if (onProgress) {\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message);\n          }\n          await migration.migrate(backends, progressCallback);\n        }\n      } catch (e) {\n        const lastSuccessfullyMigratedVersion = migration.version - 1;\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully migrated version: ${ lastSuccessfullyMigratedVersion }`);\n        await version.setVersion(lastSuccessfullyMigratedVersion, backends);\n        throw new Error(`During migration to version ${ migration.version } exception was raised: ${ e.stack || e.message || e }`);\n      }\n      log(`Migrating to version ${ migration.version } finished`);\n    }\n    if (!isDryRun) {\n      await version.setVersion(toVersion || getLatestMigrationVersion(migrations), backends);\n    }\n    log('Repo successfully migrated', toVersion !== undefined ? `to version ${ toVersion }!` : 'to latest version!');\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close();\n    }\n  }\n}\nasync function revert(path, backends, repoOptions, toVersion, {ignoreLock = false, onProgress, isDryRun = false, migrations}) {\n  migrations = migrations || index;\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!');\n  }\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!');\n  }\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('When reverting migrations, you have to specify to which version to revert!');\n  }\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!');\n  }\n  backends = utils.wrapBackends(backends);\n  const currentVersion = await version.getVersion(backends);\n  if (currentVersion === toVersion) {\n    log('Nothing to revert.');\n    return;\n  }\n  if (currentVersion < toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${ currentVersion }) is lower then toVersion (${ toVersion }), you probably wanted to migrate it?`);\n  }\n  verifyAvailableMigrations(migrations, toVersion, currentVersion, true);\n  let lock;\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path);\n  }\n  log(`Reverting from version ${ currentVersion } to ${ toVersion }`);\n  try {\n    const reversedMigrationArray = migrations.slice().reverse();\n    for (const migration of reversedMigrationArray) {\n      if (migration.version <= toVersion) {\n        break;\n      }\n      if (migration.version > currentVersion) {\n        continue;\n      }\n      log(`Reverting migration version ${ migration.version }`);\n      try {\n        if (!isDryRun) {\n          let progressCallback = () => {\n          };\n          if (onProgress) {\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message);\n          }\n          await migration.revert(backends, progressCallback);\n        }\n      } catch (e) {\n        const lastSuccessfullyRevertedVersion = migration.version;\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully reverted version: ${ lastSuccessfullyRevertedVersion }`);\n        await version.setVersion(lastSuccessfullyRevertedVersion, backends);\n        e.message = `During reversion to version ${ migration.version } exception was raised: ${ e.message }`;\n        throw e;\n      }\n      log(`Reverting to version ${ migration.version } finished`);\n    }\n    if (!isDryRun) {\n      await version.setVersion(toVersion, backends);\n    }\n    log(`All migrations successfully reverted to version ${ toVersion }!`);\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close();\n    }\n  }\n}\nfunction verifyAvailableMigrations(migrations, fromVersion, toVersion, checkReversibility = false) {\n  let migrationCounter = 0;\n  for (const migration of migrations) {\n    if (migration.version > toVersion) {\n      break;\n    }\n    if (migration.version > fromVersion) {\n      if (checkReversibility && !migration.revert) {\n        throw new errors.NonReversibleMigrationError(`It is not possible to revert to version ${ fromVersion } because migration version ${ migration.version } is not reversible. Cancelling reversion.`);\n      }\n      migrationCounter++;\n    }\n  }\n  if (migrationCounter !== toVersion - fromVersion) {\n    throw new errors.InvalidValueError(`The ipfs-repo-migrations package does not have all migration to migrate from version ${ fromVersion } to ${ toVersion }`);\n  }\n}\nconst getCurrentRepoVersion = version.getVersion;\nconst errors = errors$1;\nconst migrations = index;\n\nexports.errors = errors;\nexports.getCurrentRepoVersion = getCurrentRepoVersion;\nexports.getLatestMigrationVersion = getLatestMigrationVersion;\nexports.migrate = migrate;\nexports.migrations = migrations;\nexports.revert = revert;\n"},"lineCount":181}},"error":null,"hash":"bceee8452430a60e9023a0ec4ef66e65","cacheData":{"env":{}}}