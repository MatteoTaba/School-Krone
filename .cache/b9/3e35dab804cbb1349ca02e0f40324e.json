{"id":"../node_modules/libp2p-record/src/validators/public-key.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-record\\package.json","includedInParent":true,"mtime":1638722718138},{"name":"multiformats/hashes/sha2","loc":{"line":3,"column":27},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-record\\src\\validators\\public-key.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\hashes\\sha2-browser.js"},{"name":"err-code","loc":{"line":4,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-record\\src\\validators\\public-key.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"uint8arrays/to-string","loc":{"line":5,"column":49},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-record\\src\\validators\\public-key.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\to-string.js"},{"name":"uint8arrays/equals","loc":{"line":6,"column":45},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-record\\src\\validators\\public-key.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\equals.js"}],"generated":{"js":"'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = require('multiformats/hashes/sha2'),\n    sha256 = _require.sha256;\n\nvar errcode = require('err-code');\n\nvar _require2 = require('uint8arrays/to-string'),\n    uint8ArrayToString = _require2.toString;\n\nvar _require3 = require('uint8arrays/equals'),\n    uint8ArrayEquals = _require3.equals;\n/**\n * Validator for public key records.\n * Verifies that the passed in record value is the PublicKey\n * that matches the passed in key.\n * If validation fails the returned Promise will reject with the error.\n *\n * @param {Uint8Array} key - A valid key is of the form `'/pk/<keymultihash>'`\n * @param {Uint8Array} publicKey - The public key to validate against (protobuf encoded).\n */\n\n\nvar validatePublicKeyRecord = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(key, publicKey) {\n    var prefix, keyhash, publicKeyHash;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (key instanceof Uint8Array) {\n              _context.next = 2;\n              break;\n            }\n\n            throw errcode(new Error('\"key\" must be a Uint8Array'), 'ERR_INVALID_RECORD_KEY_NOT_BUFFER');\n\n          case 2:\n            if (!(key.byteLength < 5)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw errcode(new Error('invalid public key record'), 'ERR_INVALID_RECORD_KEY_TOO_SHORT');\n\n          case 4:\n            prefix = uint8ArrayToString(key.subarray(0, 4));\n\n            if (!(prefix !== '/pk/')) {\n              _context.next = 7;\n              break;\n            }\n\n            throw errcode(new Error('key was not prefixed with /pk/'), 'ERR_INVALID_RECORD_KEY_BAD_PREFIX');\n\n          case 7:\n            keyhash = key.slice(4);\n            _context.next = 10;\n            return sha256.digest(publicKey);\n\n          case 10:\n            publicKeyHash = _context.sent;\n\n            if (uint8ArrayEquals(keyhash, publicKeyHash.bytes)) {\n              _context.next = 13;\n              break;\n            }\n\n            throw errcode(new Error('public key does not match passed in key'), 'ERR_INVALID_RECORD_HASH_MISMATCH');\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function validatePublicKeyRecord(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  func: validatePublicKeyRecord,\n  sign: false\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":0}},{"name":"require","generated":{"line":7,"column":15},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":19}},{"generated":{"line":7,"column":22},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":26}},{"generated":{"line":7,"column":23},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":27}},{"generated":{"line":7,"column":49},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":26}},{"generated":{"line":7,"column":50},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":0}},{"name":"sha256","generated":{"line":8,"column":4},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":8}},{"generated":{"line":8,"column":10},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":0}},{"name":"sha256","generated":{"line":8,"column":22},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":8}},{"generated":{"line":8,"column":28},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":4,"column":0}},{"name":"errcode","generated":{"line":10,"column":4},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":4,"column":6}},{"generated":{"line":10,"column":11},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":4,"column":13}},{"name":"require","generated":{"line":10,"column":14},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":4,"column":16}},{"generated":{"line":10,"column":21},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":4,"column":23}},{"generated":{"line":10,"column":22},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":4,"column":24}},{"generated":{"line":10,"column":32},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":4,"column":23}},{"generated":{"line":10,"column":33},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":0}},{"name":"require","generated":{"line":12,"column":16},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":41}},{"generated":{"line":12,"column":23},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":48}},{"generated":{"line":12,"column":24},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":49}},{"generated":{"line":12,"column":47},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":48}},{"generated":{"line":12,"column":48},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":0}},{"name":"uint8ArrayToString","generated":{"line":13,"column":4},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":18}},{"generated":{"line":13,"column":22},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":0}},{"name":"toString","generated":{"line":13,"column":35},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":8}},{"generated":{"line":13,"column":43},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":0}},{"name":"require","generated":{"line":15,"column":16},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":37}},{"generated":{"line":15,"column":23},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":44}},{"generated":{"line":15,"column":24},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":45}},{"generated":{"line":15,"column":44},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":44}},{"generated":{"line":15,"column":45},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":0}},{"name":"uint8ArrayEquals","generated":{"line":16,"column":4},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":16}},{"generated":{"line":16,"column":20},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":0}},{"name":"equals","generated":{"line":16,"column":33},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":8}},{"generated":{"line":16,"column":39},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":10,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":11,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":12,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":0}},{"name":"validatePublicKeyRecord","generated":{"line":28,"column":4},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":6}},{"generated":{"line":28,"column":27},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":29}},{"generated":{"line":29,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":29}},{"generated":{"line":29,"column":69},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"key","generated":{"line":29,"column":86},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":39}},{"generated":{"line":29,"column":89},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"publicKey","generated":{"line":29,"column":91},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":44}},{"generated":{"line":29,"column":100},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":30,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":31,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":32,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":33,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":34,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":35,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"key","generated":{"line":35,"column":16},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":18,"column":8}},{"generated":{"line":35,"column":19},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":18,"column":11}},{"name":"Uint8Array","generated":{"line":35,"column":31},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":18,"column":23}},{"generated":{"line":35,"column":41},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":36,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":37,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":38,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":40,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"errcode","generated":{"line":40,"column":18},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":10}},{"generated":{"line":40,"column":25},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":17}},{"generated":{"line":40,"column":26},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":18}},{"name":"Error","generated":{"line":40,"column":30},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":22}},{"generated":{"line":40,"column":35},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":18}},{"generated":{"line":40,"column":36},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":28}},{"generated":{"line":40,"column":64},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":18}},{"generated":{"line":40,"column":65},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":17}},{"generated":{"line":40,"column":67},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":59}},{"generated":{"line":40,"column":102},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":19,"column":17}},{"generated":{"line":40,"column":103},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":42,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":43,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"key","generated":{"line":43,"column":18},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":22,"column":6}},{"generated":{"line":43,"column":21},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":22,"column":9}},{"name":"byteLength","generated":{"line":43,"column":22},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":22,"column":10}},{"generated":{"line":43,"column":32},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":22,"column":6}},{"generated":{"line":43,"column":35},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":22,"column":23}},{"generated":{"line":43,"column":36},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":44,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":45,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":46,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":48,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"errcode","generated":{"line":48,"column":18},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":10}},{"generated":{"line":48,"column":25},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":17}},{"generated":{"line":48,"column":26},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":18}},{"name":"Error","generated":{"line":48,"column":30},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":22}},{"generated":{"line":48,"column":35},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":18}},{"generated":{"line":48,"column":36},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":28}},{"generated":{"line":48,"column":63},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":18}},{"generated":{"line":48,"column":64},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":17}},{"generated":{"line":48,"column":66},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":58}},{"generated":{"line":48,"column":100},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":23,"column":17}},{"generated":{"line":48,"column":101},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":50,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"prefix","generated":{"line":51,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":8}},{"name":"prefix","generated":{"line":51,"column":12},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":8}},{"generated":{"line":51,"column":18},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"uint8ArrayToString","generated":{"line":51,"column":21},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":17}},{"generated":{"line":51,"column":39},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":35}},{"name":"key","generated":{"line":51,"column":40},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":36}},{"generated":{"line":51,"column":43},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":39}},{"name":"subarray","generated":{"line":51,"column":44},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":40}},{"generated":{"line":51,"column":52},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":36}},{"generated":{"line":51,"column":53},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":49}},{"generated":{"line":51,"column":54},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":36}},{"generated":{"line":51,"column":56},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":52}},{"generated":{"line":51,"column":57},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":36}},{"generated":{"line":51,"column":58},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":26,"column":35}},{"generated":{"line":51,"column":59},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":53,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"prefix","generated":{"line":53,"column":18},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":28,"column":6}},{"generated":{"line":53,"column":24},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":28,"column":12}},{"generated":{"line":53,"column":29},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":28,"column":17}},{"generated":{"line":53,"column":35},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":54,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":55,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":56,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":58,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"errcode","generated":{"line":58,"column":18},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":10}},{"generated":{"line":58,"column":25},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":17}},{"generated":{"line":58,"column":26},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":18}},{"name":"Error","generated":{"line":58,"column":30},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":22}},{"generated":{"line":58,"column":35},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":18}},{"generated":{"line":58,"column":36},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":28}},{"generated":{"line":58,"column":68},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":18}},{"generated":{"line":58,"column":69},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":17}},{"generated":{"line":58,"column":71},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":63}},{"generated":{"line":58,"column":106},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":29,"column":17}},{"generated":{"line":58,"column":107},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":60,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"keyhash","generated":{"line":61,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":32,"column":8}},{"name":"keyhash","generated":{"line":61,"column":12},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":32,"column":8}},{"generated":{"line":61,"column":19},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"key","generated":{"line":61,"column":22},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":32,"column":18}},{"generated":{"line":61,"column":25},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":32,"column":21}},{"name":"slice","generated":{"line":61,"column":26},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":32,"column":22}},{"generated":{"line":61,"column":31},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":32,"column":18}},{"generated":{"line":61,"column":32},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":32,"column":28}},{"generated":{"line":61,"column":33},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":32,"column":18}},{"generated":{"line":61,"column":34},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":62,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":63,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"sha256","generated":{"line":63,"column":19},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":34,"column":30}},{"generated":{"line":63,"column":25},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":34,"column":36}},{"name":"digest","generated":{"line":63,"column":26},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":34,"column":37}},{"generated":{"line":63,"column":32},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":34,"column":30}},{"name":"publicKey","generated":{"line":63,"column":33},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":34,"column":44}},{"generated":{"line":63,"column":42},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":34,"column":30}},{"generated":{"line":63,"column":43},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":65,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"publicKeyHash","generated":{"line":66,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":34,"column":8}},{"name":"publicKeyHash","generated":{"line":66,"column":12},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":34,"column":8}},{"generated":{"line":66,"column":25},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":68,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"uint8ArrayEquals","generated":{"line":68,"column":16},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":36,"column":7}},{"generated":{"line":68,"column":32},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":36,"column":23}},{"name":"keyhash","generated":{"line":68,"column":33},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":36,"column":24}},{"generated":{"line":68,"column":40},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":36,"column":23}},{"name":"publicKeyHash","generated":{"line":68,"column":42},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":36,"column":33}},{"generated":{"line":68,"column":55},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":36,"column":46}},{"name":"bytes","generated":{"line":68,"column":56},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":36,"column":47}},{"generated":{"line":68,"column":61},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":36,"column":23}},{"generated":{"line":68,"column":62},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":69,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":70,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":71,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":73,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"name":"errcode","generated":{"line":73,"column":18},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":10}},{"generated":{"line":73,"column":25},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":17}},{"generated":{"line":73,"column":26},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":18}},{"name":"Error","generated":{"line":73,"column":30},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":22}},{"generated":{"line":73,"column":35},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":18}},{"generated":{"line":73,"column":36},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":28}},{"generated":{"line":73,"column":77},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":18}},{"generated":{"line":73,"column":78},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":17}},{"generated":{"line":73,"column":80},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":72}},{"generated":{"line":73,"column":114},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":37,"column":17}},{"generated":{"line":73,"column":115},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":75,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":76,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":77,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":78,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":79,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":80,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":81,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":32}},{"generated":{"line":81,"column":3},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":29}},{"generated":{"line":83,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":29}},{"name":"validatePublicKeyRecord","generated":{"line":83,"column":18},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":6}},{"generated":{"line":83,"column":41},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":29}},{"generated":{"line":84,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":29}},{"generated":{"line":85,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":29}},{"generated":{"line":86,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":29}},{"generated":{"line":86,"column":3},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":17,"column":0}},{"name":"module","generated":{"line":88,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":41,"column":0}},{"generated":{"line":88,"column":6},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":41,"column":6}},{"name":"exports","generated":{"line":88,"column":7},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":41,"column":7}},{"generated":{"line":88,"column":14},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":41,"column":0}},{"generated":{"line":88,"column":17},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":41,"column":17}},{"name":"func","generated":{"line":89,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":42,"column":2}},{"name":"func","generated":{"line":89,"column":2},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":42,"column":2}},{"generated":{"line":89,"column":6},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":42,"column":6}},{"name":"validatePublicKeyRecord","generated":{"line":89,"column":8},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":42,"column":8}},{"generated":{"line":89,"column":31},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":41,"column":17}},{"name":"sign","generated":{"line":90,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":43,"column":2}},{"name":"sign","generated":{"line":90,"column":2},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":43,"column":2}},{"generated":{"line":90,"column":6},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":43,"column":6}},{"generated":{"line":90,"column":8},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":43,"column":8}},{"generated":{"line":91,"column":0},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":41,"column":17}},{"generated":{"line":91,"column":1},"source":"../node_modules/libp2p-record/src/validators/public-key.js","original":{"line":41,"column":0}}],"sources":{"../node_modules/libp2p-record/src/validators/public-key.js":"'use strict'\n\nconst { sha256 } = require('multiformats/hashes/sha2')\nconst errcode = require('err-code')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { equals: uint8ArrayEquals } = require('uint8arrays/equals')\n\n/**\n * Validator for public key records.\n * Verifies that the passed in record value is the PublicKey\n * that matches the passed in key.\n * If validation fails the returned Promise will reject with the error.\n *\n * @param {Uint8Array} key - A valid key is of the form `'/pk/<keymultihash>'`\n * @param {Uint8Array} publicKey - The public key to validate against (protobuf encoded).\n */\nconst validatePublicKeyRecord = async (key, publicKey) => {\n  if (!(key instanceof Uint8Array)) {\n    throw errcode(new Error('\"key\" must be a Uint8Array'), 'ERR_INVALID_RECORD_KEY_NOT_BUFFER')\n  }\n\n  if (key.byteLength < 5) {\n    throw errcode(new Error('invalid public key record'), 'ERR_INVALID_RECORD_KEY_TOO_SHORT')\n  }\n\n  const prefix = uint8ArrayToString(key.subarray(0, 4))\n\n  if (prefix !== '/pk/') {\n    throw errcode(new Error('key was not prefixed with /pk/'), 'ERR_INVALID_RECORD_KEY_BAD_PREFIX')\n  }\n\n  const keyhash = key.slice(4)\n\n  const publicKeyHash = await sha256.digest(publicKey)\n\n  if (!uint8ArrayEquals(keyhash, publicKeyHash.bytes)) {\n    throw errcode(new Error('public key does not match passed in key'), 'ERR_INVALID_RECORD_HASH_MISMATCH')\n  }\n}\n\nmodule.exports = {\n  func: validatePublicKeyRecord,\n  sign: false\n}\n"},"lineCount":null}},"error":null,"hash":"bdd00bf20e98740102f49a52664cf40a","cacheData":{"env":{}}}