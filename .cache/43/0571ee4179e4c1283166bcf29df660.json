{"id":"../node_modules/ipfs-core/cjs/src/components/files/write.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"debug","loc":{"line":5,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"},{"name":"ipfs-unixfs-importer","loc":{"line":6,"column":33},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-unixfs-importer\\cjs\\src\\index.js"},{"name":"@ipld/dag-pb","loc":{"line":7,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\@ipld\\dag-pb\\cjs\\src\\index.js"},{"name":"./stat.js","loc":{"line":8,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\stat.js"},{"name":"./mkdir.js","loc":{"line":9,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\mkdir.js"},{"name":"./utils/add-link.js","loc":{"line":10,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\add-link.js"},{"name":"merge-options","loc":{"line":11,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\merge-options\\index.js"},{"name":"./utils/create-lock.js","loc":{"line":12,"column":25},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\create-lock.js"},{"name":"./utils/to-async-iterator.js","loc":{"line":13,"column":30},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-async-iterator.js"},{"name":"./utils/to-mfs-path.js","loc":{"line":14,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-mfs-path.js"},{"name":"./utils/to-path-components.js","loc":{"line":15,"column":31},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-path-components.js"},{"name":"./utils/to-trail.js","loc":{"line":16,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-trail.js"},{"name":"./utils/update-tree.js","loc":{"line":17,"column":25},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\update-tree.js"},{"name":"./utils/update-mfs-root.js","loc":{"line":18,"column":28},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\update-mfs-root.js"},{"name":"err-code","loc":{"line":19,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"../../utils.js","loc":{"line":20,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\utils.js"},{"name":"it-last","loc":{"line":21,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-last\\index.js"},{"name":"ipfs-core-utils/with-timeout-option","loc":{"line":22,"column":32},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-utils\\cjs\\src\\with-timeout-option.js"},{"name":"ipfs-unixfs","loc":{"line":23,"column":25},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\write.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-unixfs\\cjs\\src\\index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar ipfsUnixfsImporter = require('ipfs-unixfs-importer');\nvar dagPB = require('@ipld/dag-pb');\nvar stat = require('./stat.js');\nvar mkdir = require('./mkdir.js');\nvar addLink = require('./utils/add-link.js');\nvar mergeOpts = require('merge-options');\nvar createLock = require('./utils/create-lock.js');\nvar toAsyncIterator = require('./utils/to-async-iterator.js');\nvar toMfsPath = require('./utils/to-mfs-path.js');\nvar toPathComponents = require('./utils/to-path-components.js');\nvar toTrail = require('./utils/to-trail.js');\nvar updateTree = require('./utils/update-tree.js');\nvar updateMfsRoot = require('./utils/update-mfs-root.js');\nvar errCode = require('err-code');\nvar utils = require('../../utils.js');\nvar last = require('it-last');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar ipfsUnixfs = require('ipfs-unixfs');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar last__default = /*#__PURE__*/_interopDefaultLegacy(last);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({ ignoreUndefined: true });\nconst log = debug__default[\"default\"]('ipfs:mfs:write');\nconst defaultOptions = {\n  offset: 0,\n  length: Infinity,\n  create: false,\n  truncate: false,\n  rawLeaves: false,\n  reduceSingleLeafToSelf: false,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  parents: false,\n  progress: (bytes, path) => {\n  },\n  strategy: 'trickle',\n  flush: true,\n  leafType: 'raw',\n  shardSplitThreshold: 1000\n};\nfunction createWrite(context) {\n  async function mfsWrite(path, content, opts = {}) {\n    const options = mergeOptions(defaultOptions, opts);\n    let source;\n    let destination;\n    let parent;\n    log('Reading source, destination and parent');\n    await createLock.createLock().readLock(async () => {\n      source = await toAsyncIterator.toAsyncIterator(content);\n      destination = await toMfsPath.toMfsPath(context, path, options);\n      parent = await toMfsPath.toMfsPath(context, destination.mfsDirectory, options);\n    })();\n    log('Read source, destination and parent');\n    if (!options.parents && !parent.exists) {\n      throw errCode__default[\"default\"](new Error('directory does not exist'), 'ERR_NO_EXIST');\n    }\n    if (source == null) {\n      throw errCode__default[\"default\"](new Error('could not create source'), 'ERR_NO_SOURCE');\n    }\n    if (destination == null) {\n      throw errCode__default[\"default\"](new Error('could not create destination'), 'ERR_NO_DESTINATION');\n    }\n    if (!options.create && !destination.exists) {\n      throw errCode__default[\"default\"](new Error('file does not exist'), 'ERR_NO_EXIST');\n    }\n    if (destination.entryType !== 'file') {\n      throw errCode__default[\"default\"](new Error('not a file'), 'ERR_NOT_A_FILE');\n    }\n    return updateOrImport(context, path, source, destination, options);\n  }\n  return withTimeoutOption.withTimeoutOption(mfsWrite);\n}\nconst updateOrImport = async (context, path, source, destination, options) => {\n  const child = await write(context, source, destination, options);\n  await createLock.createLock().writeLock(async () => {\n    const pathComponents = toPathComponents.toPathComponents(path);\n    const fileName = pathComponents.pop();\n    if (fileName == null) {\n      throw errCode__default[\"default\"](new Error('source does not exist'), 'ERR_NO_EXIST');\n    }\n    let parentExists = false;\n    try {\n      await stat.createStat(context)(`/${ pathComponents.join('/') }`, options);\n      parentExists = true;\n    } catch (err) {\n      if (err.code !== 'ERR_NOT_FOUND') {\n        throw err;\n      }\n    }\n    if (!parentExists) {\n      await mkdir.createMkdir(context)(`/${ pathComponents.join('/') }`, options);\n    }\n    const updatedPath = await toMfsPath.toMfsPath(context, path, options);\n    const trail = await toTrail.toTrail(context, updatedPath.mfsDirectory);\n    const parent = trail[trail.length - 1];\n    if (!parent) {\n      throw errCode__default[\"default\"](new Error('directory does not exist'), 'ERR_NO_EXIST');\n    }\n    if (!parent.type || !parent.type.includes('directory')) {\n      throw errCode__default[\"default\"](new Error(`cannot write to ${ parent.name }: Not a directory`), 'ERR_NOT_A_DIRECTORY');\n    }\n    const parentBlock = await context.repo.blocks.get(parent.cid);\n    const parentNode = dagPB.decode(parentBlock);\n    const result = await addLink.addLink(context, {\n      parent: parentNode,\n      name: fileName,\n      cid: child.cid,\n      size: child.size,\n      flush: options.flush,\n      shardSplitThreshold: options.shardSplitThreshold,\n      hashAlg: options.hashAlg,\n      cidVersion: options.cidVersion\n    });\n    parent.cid = result.cid;\n    const newRootCid = await updateTree.updateTree(context, trail, options);\n    await updateMfsRoot.updateMfsRoot(context, newRootCid, options);\n  })();\n};\nconst write = async (context, source, destination, options) => {\n  if (destination.exists) {\n    log(`Overwriting file ${ destination.cid } offset ${ options.offset } length ${ options.length }`);\n  } else {\n    log(`Writing file offset ${ options.offset } length ${ options.length }`);\n  }\n  const sources = [];\n  if (options.offset > 0) {\n    if (destination.unixfs) {\n      log(`Writing first ${ options.offset } bytes of original file`);\n      sources.push(() => {\n        return destination.content({\n          offset: 0,\n          length: options.offset\n        });\n      });\n      if (destination.unixfs.fileSize() < options.offset) {\n        const extra = options.offset - destination.unixfs.fileSize();\n        log(`Writing zeros for extra ${ extra } bytes`);\n        sources.push(asyncZeroes(extra));\n      }\n    } else {\n      log(`Writing zeros for first ${ options.offset } bytes`);\n      sources.push(asyncZeroes(options.offset));\n    }\n  }\n  sources.push(limitAsyncStreamBytes(source, options.length));\n  const content = countBytesStreamed(catAsyncIterators(sources), bytesWritten => {\n    if (destination.unixfs && !options.truncate) {\n      const fileSize = destination.unixfs.fileSize();\n      if (fileSize > bytesWritten) {\n        log(`Writing last ${ fileSize - bytesWritten } of ${ fileSize } bytes from original file starting at offset ${ bytesWritten }`);\n        return destination.content({ offset: bytesWritten });\n      } else {\n        log('Not writing last bytes from original file');\n      }\n    }\n    return {\n      [Symbol.asyncIterator]: async function* () {\n      }\n    };\n  });\n  let mode;\n  if (options.mode !== undefined && options.mode !== null) {\n    mode = ipfsUnixfs.parseMode(options.mode);\n  } else if (destination && destination.unixfs) {\n    mode = destination.unixfs.mode;\n  }\n  let mtime;\n  if (options.mtime != null) {\n    mtime = ipfsUnixfs.parseMtime(options.mtime);\n  } else if (destination && destination.unixfs) {\n    mtime = destination.unixfs.mtime;\n  }\n  const hasher = await context.hashers.getHasher(options.hashAlg);\n  const result = await last__default[\"default\"](ipfsUnixfsImporter.importer([{\n      content: content,\n      mode,\n      mtime\n    }], context.repo.blocks, {\n    progress: options.progress,\n    hasher,\n    cidVersion: options.cidVersion,\n    strategy: options.strategy,\n    rawLeaves: options.rawLeaves,\n    reduceSingleLeafToSelf: options.reduceSingleLeafToSelf,\n    leafType: options.leafType\n  }));\n  if (!result) {\n    throw errCode__default[\"default\"](new Error(`cannot write to ${ parent.name }`), 'ERR_COULD_NOT_WRITE');\n  }\n  log(`Wrote ${ result.cid }`);\n  return {\n    cid: result.cid,\n    size: result.size\n  };\n};\nconst limitAsyncStreamBytes = (stream, limit) => {\n  return async function* _limitAsyncStreamBytes() {\n    let emitted = 0;\n    for await (const buf of stream) {\n      emitted += buf.length;\n      if (emitted > limit) {\n        yield buf.slice(0, limit - emitted);\n        return;\n      }\n      yield buf;\n    }\n  };\n};\nconst asyncZeroes = (count, chunkSize = utils.MFS_MAX_CHUNK_SIZE) => {\n  const buf = new Uint8Array(chunkSize);\n  async function* _asyncZeroes() {\n    while (true) {\n      yield buf.slice();\n    }\n  }\n  return limitAsyncStreamBytes(_asyncZeroes(), count);\n};\nconst catAsyncIterators = async function* (sources) {\n  for (let i = 0; i < sources.length; i++) {\n    yield* sources[i]();\n  }\n};\nconst countBytesStreamed = async function* (source, notify) {\n  let wrote = 0;\n  for await (const buf of source) {\n    wrote += buf.length;\n    yield buf;\n  }\n  for await (const buf of notify(wrote)) {\n    wrote += buf.length;\n    yield buf;\n  }\n};\n\nexports.createWrite = createWrite;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/write.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/files/write.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar ipfsUnixfsImporter = require('ipfs-unixfs-importer');\nvar dagPB = require('@ipld/dag-pb');\nvar stat = require('./stat.js');\nvar mkdir = require('./mkdir.js');\nvar addLink = require('./utils/add-link.js');\nvar mergeOpts = require('merge-options');\nvar createLock = require('./utils/create-lock.js');\nvar toAsyncIterator = require('./utils/to-async-iterator.js');\nvar toMfsPath = require('./utils/to-mfs-path.js');\nvar toPathComponents = require('./utils/to-path-components.js');\nvar toTrail = require('./utils/to-trail.js');\nvar updateTree = require('./utils/update-tree.js');\nvar updateMfsRoot = require('./utils/update-mfs-root.js');\nvar errCode = require('err-code');\nvar utils = require('../../utils.js');\nvar last = require('it-last');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar ipfsUnixfs = require('ipfs-unixfs');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar last__default = /*#__PURE__*/_interopDefaultLegacy(last);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({ ignoreUndefined: true });\nconst log = debug__default[\"default\"]('ipfs:mfs:write');\nconst defaultOptions = {\n  offset: 0,\n  length: Infinity,\n  create: false,\n  truncate: false,\n  rawLeaves: false,\n  reduceSingleLeafToSelf: false,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  parents: false,\n  progress: (bytes, path) => {\n  },\n  strategy: 'trickle',\n  flush: true,\n  leafType: 'raw',\n  shardSplitThreshold: 1000\n};\nfunction createWrite(context) {\n  async function mfsWrite(path, content, opts = {}) {\n    const options = mergeOptions(defaultOptions, opts);\n    let source;\n    let destination;\n    let parent;\n    log('Reading source, destination and parent');\n    await createLock.createLock().readLock(async () => {\n      source = await toAsyncIterator.toAsyncIterator(content);\n      destination = await toMfsPath.toMfsPath(context, path, options);\n      parent = await toMfsPath.toMfsPath(context, destination.mfsDirectory, options);\n    })();\n    log('Read source, destination and parent');\n    if (!options.parents && !parent.exists) {\n      throw errCode__default[\"default\"](new Error('directory does not exist'), 'ERR_NO_EXIST');\n    }\n    if (source == null) {\n      throw errCode__default[\"default\"](new Error('could not create source'), 'ERR_NO_SOURCE');\n    }\n    if (destination == null) {\n      throw errCode__default[\"default\"](new Error('could not create destination'), 'ERR_NO_DESTINATION');\n    }\n    if (!options.create && !destination.exists) {\n      throw errCode__default[\"default\"](new Error('file does not exist'), 'ERR_NO_EXIST');\n    }\n    if (destination.entryType !== 'file') {\n      throw errCode__default[\"default\"](new Error('not a file'), 'ERR_NOT_A_FILE');\n    }\n    return updateOrImport(context, path, source, destination, options);\n  }\n  return withTimeoutOption.withTimeoutOption(mfsWrite);\n}\nconst updateOrImport = async (context, path, source, destination, options) => {\n  const child = await write(context, source, destination, options);\n  await createLock.createLock().writeLock(async () => {\n    const pathComponents = toPathComponents.toPathComponents(path);\n    const fileName = pathComponents.pop();\n    if (fileName == null) {\n      throw errCode__default[\"default\"](new Error('source does not exist'), 'ERR_NO_EXIST');\n    }\n    let parentExists = false;\n    try {\n      await stat.createStat(context)(`/${ pathComponents.join('/') }`, options);\n      parentExists = true;\n    } catch (err) {\n      if (err.code !== 'ERR_NOT_FOUND') {\n        throw err;\n      }\n    }\n    if (!parentExists) {\n      await mkdir.createMkdir(context)(`/${ pathComponents.join('/') }`, options);\n    }\n    const updatedPath = await toMfsPath.toMfsPath(context, path, options);\n    const trail = await toTrail.toTrail(context, updatedPath.mfsDirectory);\n    const parent = trail[trail.length - 1];\n    if (!parent) {\n      throw errCode__default[\"default\"](new Error('directory does not exist'), 'ERR_NO_EXIST');\n    }\n    if (!parent.type || !parent.type.includes('directory')) {\n      throw errCode__default[\"default\"](new Error(`cannot write to ${ parent.name }: Not a directory`), 'ERR_NOT_A_DIRECTORY');\n    }\n    const parentBlock = await context.repo.blocks.get(parent.cid);\n    const parentNode = dagPB.decode(parentBlock);\n    const result = await addLink.addLink(context, {\n      parent: parentNode,\n      name: fileName,\n      cid: child.cid,\n      size: child.size,\n      flush: options.flush,\n      shardSplitThreshold: options.shardSplitThreshold,\n      hashAlg: options.hashAlg,\n      cidVersion: options.cidVersion\n    });\n    parent.cid = result.cid;\n    const newRootCid = await updateTree.updateTree(context, trail, options);\n    await updateMfsRoot.updateMfsRoot(context, newRootCid, options);\n  })();\n};\nconst write = async (context, source, destination, options) => {\n  if (destination.exists) {\n    log(`Overwriting file ${ destination.cid } offset ${ options.offset } length ${ options.length }`);\n  } else {\n    log(`Writing file offset ${ options.offset } length ${ options.length }`);\n  }\n  const sources = [];\n  if (options.offset > 0) {\n    if (destination.unixfs) {\n      log(`Writing first ${ options.offset } bytes of original file`);\n      sources.push(() => {\n        return destination.content({\n          offset: 0,\n          length: options.offset\n        });\n      });\n      if (destination.unixfs.fileSize() < options.offset) {\n        const extra = options.offset - destination.unixfs.fileSize();\n        log(`Writing zeros for extra ${ extra } bytes`);\n        sources.push(asyncZeroes(extra));\n      }\n    } else {\n      log(`Writing zeros for first ${ options.offset } bytes`);\n      sources.push(asyncZeroes(options.offset));\n    }\n  }\n  sources.push(limitAsyncStreamBytes(source, options.length));\n  const content = countBytesStreamed(catAsyncIterators(sources), bytesWritten => {\n    if (destination.unixfs && !options.truncate) {\n      const fileSize = destination.unixfs.fileSize();\n      if (fileSize > bytesWritten) {\n        log(`Writing last ${ fileSize - bytesWritten } of ${ fileSize } bytes from original file starting at offset ${ bytesWritten }`);\n        return destination.content({ offset: bytesWritten });\n      } else {\n        log('Not writing last bytes from original file');\n      }\n    }\n    return {\n      [Symbol.asyncIterator]: async function* () {\n      }\n    };\n  });\n  let mode;\n  if (options.mode !== undefined && options.mode !== null) {\n    mode = ipfsUnixfs.parseMode(options.mode);\n  } else if (destination && destination.unixfs) {\n    mode = destination.unixfs.mode;\n  }\n  let mtime;\n  if (options.mtime != null) {\n    mtime = ipfsUnixfs.parseMtime(options.mtime);\n  } else if (destination && destination.unixfs) {\n    mtime = destination.unixfs.mtime;\n  }\n  const hasher = await context.hashers.getHasher(options.hashAlg);\n  const result = await last__default[\"default\"](ipfsUnixfsImporter.importer([{\n      content: content,\n      mode,\n      mtime\n    }], context.repo.blocks, {\n    progress: options.progress,\n    hasher,\n    cidVersion: options.cidVersion,\n    strategy: options.strategy,\n    rawLeaves: options.rawLeaves,\n    reduceSingleLeafToSelf: options.reduceSingleLeafToSelf,\n    leafType: options.leafType\n  }));\n  if (!result) {\n    throw errCode__default[\"default\"](new Error(`cannot write to ${ parent.name }`), 'ERR_COULD_NOT_WRITE');\n  }\n  log(`Wrote ${ result.cid }`);\n  return {\n    cid: result.cid,\n    size: result.size\n  };\n};\nconst limitAsyncStreamBytes = (stream, limit) => {\n  return async function* _limitAsyncStreamBytes() {\n    let emitted = 0;\n    for await (const buf of stream) {\n      emitted += buf.length;\n      if (emitted > limit) {\n        yield buf.slice(0, limit - emitted);\n        return;\n      }\n      yield buf;\n    }\n  };\n};\nconst asyncZeroes = (count, chunkSize = utils.MFS_MAX_CHUNK_SIZE) => {\n  const buf = new Uint8Array(chunkSize);\n  async function* _asyncZeroes() {\n    while (true) {\n      yield buf.slice();\n    }\n  }\n  return limitAsyncStreamBytes(_asyncZeroes(), count);\n};\nconst catAsyncIterators = async function* (sources) {\n  for (let i = 0; i < sources.length; i++) {\n    yield* sources[i]();\n  }\n};\nconst countBytesStreamed = async function* (source, notify) {\n  let wrote = 0;\n  for await (const buf of source) {\n    wrote += buf.length;\n    yield buf;\n  }\n  for await (const buf of notify(wrote)) {\n    wrote += buf.length;\n    yield buf;\n  }\n};\n\nexports.createWrite = createWrite;\n"},"lineCount":246}},"error":null,"hash":"1053fa44db380dfde733adc120021720","cacheData":{"env":{}}}