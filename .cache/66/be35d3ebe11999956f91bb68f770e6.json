{"id":"../node_modules/libp2p-webrtc-star/src/index.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\package.json","includedInParent":true,"mtime":1638722718033},{"name":"debug","loc":{"line":3,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"},{"name":"events","loc":{"line":7,"column":33},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\events\\events.js"},{"name":"err-code","loc":{"line":8,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"class-is","loc":{"line":9,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\class-is\\index.js"},{"name":"abortable-iterator","loc":{"line":11,"column":31},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\abortable-iterator\\index.js"},{"name":"libp2p-webrtc-peer","loc":{"line":12,"column":27},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-peer\\index.js"},{"name":"ipfs-utils/src/supports","loc":{"line":13,"column":62},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-utils\\src\\supports.js"},{"name":"multiaddr","loc":{"line":15,"column":30},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiaddr\\src\\index.js"},{"name":"mafmt","loc":{"line":16,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\mafmt\\src\\index.js"},{"name":"peer-id","loc":{"line":17,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\peer-id\\src\\index.js"},{"name":"./constants","loc":{"line":19,"column":33},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\constants.js"},{"name":"./listener","loc":{"line":20,"column":31},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\listener.js"},{"name":"./socket-to-conn","loc":{"line":21,"column":29},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\socket-to-conn.js"},{"name":"./utils","loc":{"line":22,"column":48},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-webrtc-star\\src\\utils.js"}],"generated":{"js":"'use strict'\n\nconst debug = require('debug')\nconst log = debug('libp2p:webrtc-star')\nlog.error = debug('libp2p:webrtc-star:error')\n\nconst { EventEmitter } = require('events')\nconst errcode = require('err-code')\nconst withIs = require('class-is')\n\nconst { AbortError } = require('abortable-iterator')\nconst SimplePeer = require('libp2p-webrtc-peer')\nconst { supportsWebRTCDataChannels: webrtcSupport } = require('ipfs-utils/src/supports')\n\nconst { Multiaddr } = require('multiaddr')\nconst mafmt = require('mafmt')\nconst PeerId = require('peer-id')\n\nconst { CODE_CIRCUIT } = require('./constants')\nconst createListener = require('./listener')\nconst toConnection = require('./socket-to-conn')\nconst { cleanMultiaddr, cleanUrlSIO } = require('./utils')\n\nfunction noop () { }\n\n/**\n * @class WebRTCStar\n */\nclass WebRTCStar {\n  /**\n   * @class\n   * @param {object} options\n   * @param {Upgrader} options.upgrader\n   */\n  constructor (options = {}) {\n    if (!options.upgrader) {\n      throw new Error('An upgrader must be provided. See https://github.com/libp2p/interface-transport#upgrader.')\n    }\n\n    this._upgrader = options.upgrader\n\n    this.sioOptions = {\n      transports: ['websocket'],\n      'force new connection': true\n    }\n\n    if (options.wrtc) {\n      this.wrtc = options.wrtc\n    }\n\n    // Keep Signalling references\n    this.sigReferences = new Map()\n\n    // Discovery\n    this.discovery = new EventEmitter()\n    this.discovery.tag = 'webRTCStar'\n    this.discovery._isStarted = false\n    this.discovery.start = () => {\n      this.discovery._isStarted = true\n    }\n    this.discovery.stop = () => {\n      this.discovery._isStarted = false\n    }\n    this._peerDiscovered = this._peerDiscovered.bind(this)\n  }\n\n  /**\n   * @async\n   * @param {Multiaddr} ma\n   * @param {object} options\n   * @param {AbortSignal} options.signal - Used to abort dial requests\n   * @returns {Connection} An upgraded Connection\n   */\n  async dial (ma, options = {}) {\n    const rawConn = await this._connect(ma, options)\n    const maConn = toConnection(rawConn, { remoteAddr: ma, signal: options.signal })\n    log('new outbound connection %s', maConn.remoteAddr)\n    const conn = await this._upgrader.upgradeOutbound(maConn)\n    log('outbound connection %s upgraded', maConn.remoteAddr)\n    return conn\n  }\n\n  /**\n   * @private\n   * @param {Multiaddr} ma\n   * @param {object} options\n   * @param {AbortSignal} options.signal - Used to abort dial requests\n   * @returns {Promise<SimplePeer>} Resolves a SimplePeer Webrtc channel\n   */\n  _connect (ma, options = {}) {\n    if (options.signal && options.signal.aborted) {\n      throw new AbortError()\n    }\n\n    const spOptions = {\n      initiator: true,\n      trickle: false,\n      ...options.spOptions || {}\n    }\n\n    // Use custom WebRTC implementation\n    if (this.wrtc) { spOptions.wrtc = this.wrtc }\n\n    const cOpts = ma.toOptions()\n    const intentId = (~~(Math.random() * 1e9)).toString(36) + Date.now()\n\n    return new Promise((resolve, reject) => {\n      const sio = this.sigReferences.get(cleanUrlSIO(ma))\n\n      if (!sio || !sio.listener) {\n        return reject(errcode(new Error('unknown signal server to use'), 'ERR_UNKNOWN_SIGNAL_SERVER'))\n      }\n\n      const sioClient = sio.listener.io\n\n      const start = Date.now()\n      let connected\n\n      log('dialing %s:%s', cOpts.host, cOpts.port)\n      const channel = new SimplePeer(spOptions)\n\n      const onError = (err) => {\n        if (!connected) {\n          const msg = `connection error ${cOpts.host}:${cOpts.port}: ${err.message}`\n          log.error(msg)\n          done(err)\n        }\n      }\n\n      const onTimeout = () => {\n        log('connnection timeout %s:%s', cOpts.host, cOpts.port)\n        const err = errcode(new Error(`connection timeout after ${Date.now() - start}ms`), 'ERR_CONNECT_TIMEOUT')\n        // Note: this will result in onError() being called\n        channel.emit('error', err)\n      }\n\n      const onConnect = () => {\n        connected = true\n\n        log('connection opened %s:%s', cOpts.host, cOpts.port)\n        done(null)\n      }\n\n      const onAbort = () => {\n        log.error('connection aborted %s:%s', cOpts.host, cOpts.port)\n        channel.destroy()\n        done(new AbortError())\n      }\n\n      const done = (err) => {\n        channel.removeListener('timeout', onTimeout)\n        channel.removeListener('connect', onConnect)\n        options.signal && options.signal.removeEventListener('abort', onAbort)\n\n        err ? reject(err) : resolve(channel)\n      }\n\n      channel.on('error', onError)\n      channel.once('timeout', onTimeout)\n      channel.once('connect', onConnect)\n      channel.on('close', () => {\n        channel.removeListener('error', onError)\n      })\n      options.signal && options.signal.addEventListener('abort', onAbort)\n\n      channel.on('signal', (signal) => {\n        sioClient.emit('ss-handshake', {\n          intentId: intentId,\n          srcMultiaddr: sio.signallingAddr.toString(),\n          dstMultiaddr: ma.toString(),\n          signal: signal\n        })\n      })\n\n      // NOTE: aegir segfaults if we do .once on the socket.io event emitter and we\n      // are clueless as to why.\n      sioClient.on('ws-handshake', (offer) => {\n        if (offer.intentId === intentId && offer.err) {\n          channel.destroy()\n          reject(errcode(offer.err instanceof Error ? offer.err : new Error(offer.err), 'ERR_SIGNALLING_FAILED'))\n        }\n\n        if (offer.intentId !== intentId || !offer.answer || channel.destroyed) {\n          return\n        }\n\n        channel.signal(offer.signal)\n      })\n    })\n  }\n\n  /**\n   * Creates a WebrtcStar listener. The provided `handler` function will be called\n   * anytime a new incoming Connection has been successfully upgraded via\n   * `upgrader.upgradeInbound`.\n   *\n   * @param {object} [options] - simple-peer options for listener\n   * @param {function (Connection)} handler\n   * @returns {Listener} A WebrtcStar listener\n   */\n  createListener (options = {}, handler) {\n    if (!webrtcSupport && !this.wrtc) {\n      throw errcode(new Error('no WebRTC support'), 'ERR_NO_WEBRTC_SUPPORT')\n    }\n\n    if (typeof options === 'function') {\n      handler = options\n      options = {}\n    }\n\n    handler = handler || noop\n\n    return createListener({ handler, upgrader: this._upgrader }, this, options)\n  }\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only valid TCP addresses\n   *\n   * @param {Multiaddr[]} multiaddrs\n   * @returns {Multiaddr[]} Valid TCP multiaddrs\n   */\n  filter (multiaddrs) {\n    multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs]\n\n    return multiaddrs.filter((ma) => {\n      if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n        return false\n      }\n\n      return mafmt.WebRTCStar.matches(ma)\n    })\n  }\n\n  _peerDiscovered (maStr) {\n    if (!this.discovery._isStarted) return\n\n    log('Peer Discovered:', maStr)\n    maStr = cleanMultiaddr(maStr)\n\n    const ma = new Multiaddr(maStr)\n    const peerId = PeerId.createFromB58String(ma.getPeerId())\n\n    this.discovery.emit('peer', {\n      id: peerId,\n      multiaddrs: [ma]\n    })\n  }\n}\n\nmodule.exports = withIs(WebRTCStar, { className: 'WebRTCStar', symbolName: '@libp2p/js-libp2p-webrtc-star/webrtcstar' })\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/libp2p-webrtc-star/src/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}}],"sources":{"../node_modules/libp2p-webrtc-star/src/index.js":"'use strict'\n\nconst debug = require('debug')\nconst log = debug('libp2p:webrtc-star')\nlog.error = debug('libp2p:webrtc-star:error')\n\nconst { EventEmitter } = require('events')\nconst errcode = require('err-code')\nconst withIs = require('class-is')\n\nconst { AbortError } = require('abortable-iterator')\nconst SimplePeer = require('libp2p-webrtc-peer')\nconst { supportsWebRTCDataChannels: webrtcSupport } = require('ipfs-utils/src/supports')\n\nconst { Multiaddr } = require('multiaddr')\nconst mafmt = require('mafmt')\nconst PeerId = require('peer-id')\n\nconst { CODE_CIRCUIT } = require('./constants')\nconst createListener = require('./listener')\nconst toConnection = require('./socket-to-conn')\nconst { cleanMultiaddr, cleanUrlSIO } = require('./utils')\n\nfunction noop () { }\n\n/**\n * @class WebRTCStar\n */\nclass WebRTCStar {\n  /**\n   * @class\n   * @param {object} options\n   * @param {Upgrader} options.upgrader\n   */\n  constructor (options = {}) {\n    if (!options.upgrader) {\n      throw new Error('An upgrader must be provided. See https://github.com/libp2p/interface-transport#upgrader.')\n    }\n\n    this._upgrader = options.upgrader\n\n    this.sioOptions = {\n      transports: ['websocket'],\n      'force new connection': true\n    }\n\n    if (options.wrtc) {\n      this.wrtc = options.wrtc\n    }\n\n    // Keep Signalling references\n    this.sigReferences = new Map()\n\n    // Discovery\n    this.discovery = new EventEmitter()\n    this.discovery.tag = 'webRTCStar'\n    this.discovery._isStarted = false\n    this.discovery.start = () => {\n      this.discovery._isStarted = true\n    }\n    this.discovery.stop = () => {\n      this.discovery._isStarted = false\n    }\n    this._peerDiscovered = this._peerDiscovered.bind(this)\n  }\n\n  /**\n   * @async\n   * @param {Multiaddr} ma\n   * @param {object} options\n   * @param {AbortSignal} options.signal - Used to abort dial requests\n   * @returns {Connection} An upgraded Connection\n   */\n  async dial (ma, options = {}) {\n    const rawConn = await this._connect(ma, options)\n    const maConn = toConnection(rawConn, { remoteAddr: ma, signal: options.signal })\n    log('new outbound connection %s', maConn.remoteAddr)\n    const conn = await this._upgrader.upgradeOutbound(maConn)\n    log('outbound connection %s upgraded', maConn.remoteAddr)\n    return conn\n  }\n\n  /**\n   * @private\n   * @param {Multiaddr} ma\n   * @param {object} options\n   * @param {AbortSignal} options.signal - Used to abort dial requests\n   * @returns {Promise<SimplePeer>} Resolves a SimplePeer Webrtc channel\n   */\n  _connect (ma, options = {}) {\n    if (options.signal && options.signal.aborted) {\n      throw new AbortError()\n    }\n\n    const spOptions = {\n      initiator: true,\n      trickle: false,\n      ...options.spOptions || {}\n    }\n\n    // Use custom WebRTC implementation\n    if (this.wrtc) { spOptions.wrtc = this.wrtc }\n\n    const cOpts = ma.toOptions()\n    const intentId = (~~(Math.random() * 1e9)).toString(36) + Date.now()\n\n    return new Promise((resolve, reject) => {\n      const sio = this.sigReferences.get(cleanUrlSIO(ma))\n\n      if (!sio || !sio.listener) {\n        return reject(errcode(new Error('unknown signal server to use'), 'ERR_UNKNOWN_SIGNAL_SERVER'))\n      }\n\n      const sioClient = sio.listener.io\n\n      const start = Date.now()\n      let connected\n\n      log('dialing %s:%s', cOpts.host, cOpts.port)\n      const channel = new SimplePeer(spOptions)\n\n      const onError = (err) => {\n        if (!connected) {\n          const msg = `connection error ${cOpts.host}:${cOpts.port}: ${err.message}`\n          log.error(msg)\n          done(err)\n        }\n      }\n\n      const onTimeout = () => {\n        log('connnection timeout %s:%s', cOpts.host, cOpts.port)\n        const err = errcode(new Error(`connection timeout after ${Date.now() - start}ms`), 'ERR_CONNECT_TIMEOUT')\n        // Note: this will result in onError() being called\n        channel.emit('error', err)\n      }\n\n      const onConnect = () => {\n        connected = true\n\n        log('connection opened %s:%s', cOpts.host, cOpts.port)\n        done(null)\n      }\n\n      const onAbort = () => {\n        log.error('connection aborted %s:%s', cOpts.host, cOpts.port)\n        channel.destroy()\n        done(new AbortError())\n      }\n\n      const done = (err) => {\n        channel.removeListener('timeout', onTimeout)\n        channel.removeListener('connect', onConnect)\n        options.signal && options.signal.removeEventListener('abort', onAbort)\n\n        err ? reject(err) : resolve(channel)\n      }\n\n      channel.on('error', onError)\n      channel.once('timeout', onTimeout)\n      channel.once('connect', onConnect)\n      channel.on('close', () => {\n        channel.removeListener('error', onError)\n      })\n      options.signal && options.signal.addEventListener('abort', onAbort)\n\n      channel.on('signal', (signal) => {\n        sioClient.emit('ss-handshake', {\n          intentId: intentId,\n          srcMultiaddr: sio.signallingAddr.toString(),\n          dstMultiaddr: ma.toString(),\n          signal: signal\n        })\n      })\n\n      // NOTE: aegir segfaults if we do .once on the socket.io event emitter and we\n      // are clueless as to why.\n      sioClient.on('ws-handshake', (offer) => {\n        if (offer.intentId === intentId && offer.err) {\n          channel.destroy()\n          reject(errcode(offer.err instanceof Error ? offer.err : new Error(offer.err), 'ERR_SIGNALLING_FAILED'))\n        }\n\n        if (offer.intentId !== intentId || !offer.answer || channel.destroyed) {\n          return\n        }\n\n        channel.signal(offer.signal)\n      })\n    })\n  }\n\n  /**\n   * Creates a WebrtcStar listener. The provided `handler` function will be called\n   * anytime a new incoming Connection has been successfully upgraded via\n   * `upgrader.upgradeInbound`.\n   *\n   * @param {object} [options] - simple-peer options for listener\n   * @param {function (Connection)} handler\n   * @returns {Listener} A WebrtcStar listener\n   */\n  createListener (options = {}, handler) {\n    if (!webrtcSupport && !this.wrtc) {\n      throw errcode(new Error('no WebRTC support'), 'ERR_NO_WEBRTC_SUPPORT')\n    }\n\n    if (typeof options === 'function') {\n      handler = options\n      options = {}\n    }\n\n    handler = handler || noop\n\n    return createListener({ handler, upgrader: this._upgrader }, this, options)\n  }\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only valid TCP addresses\n   *\n   * @param {Multiaddr[]} multiaddrs\n   * @returns {Multiaddr[]} Valid TCP multiaddrs\n   */\n  filter (multiaddrs) {\n    multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs]\n\n    return multiaddrs.filter((ma) => {\n      if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n        return false\n      }\n\n      return mafmt.WebRTCStar.matches(ma)\n    })\n  }\n\n  _peerDiscovered (maStr) {\n    if (!this.discovery._isStarted) return\n\n    log('Peer Discovered:', maStr)\n    maStr = cleanMultiaddr(maStr)\n\n    const ma = new Multiaddr(maStr)\n    const peerId = PeerId.createFromB58String(ma.getPeerId())\n\n    this.discovery.emit('peer', {\n      id: peerId,\n      multiaddrs: [ma]\n    })\n  }\n}\n\nmodule.exports = withIs(WebRTCStar, { className: 'WebRTCStar', symbolName: '@libp2p/js-libp2p-webrtc-star/webrtcstar' })\n"},"lineCount":251}},"error":null,"hash":"ba04a5623554ec256db0f799ac6f0726","cacheData":{"env":{}}}