{"id":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\package.json","includedInParent":true,"mtime":1638722720608},{"name":"varint","loc":{"line":3,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\utils\\varint-encoder.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\varint\\index.js"}],"generated":{"js":"'use strict';\n\nvar varint = require('varint');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar varint__namespace = /*#__PURE__*/_interopNamespace(varint);\n\nfunction varintEncoder(buf) {\n  let out = new Uint8Array(buf.reduce((acc, curr) => {\n    return acc + varint__namespace.default.encodingLength(curr);\n  }, 0));\n  let offset = 0;\n  for (const num of buf) {\n    out = varint__namespace.encode(num, out, offset);\n    offset += varint__namespace.default.encodingLength(num);\n  }\n  return out;\n}\n\nmodule.exports = varintEncoder;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}}],"sources":{"../node_modules/ipfs-bitswap/cjs/src/utils/varint-encoder.js":"'use strict';\n\nvar varint = require('varint');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar varint__namespace = /*#__PURE__*/_interopNamespace(varint);\n\nfunction varintEncoder(buf) {\n  let out = new Uint8Array(buf.reduce((acc, curr) => {\n    return acc + varint__namespace.default.encodingLength(curr);\n  }, 0));\n  let offset = 0;\n  for (const num of buf) {\n    out = varint__namespace.encode(num, out, offset);\n    offset += varint__namespace.default.encodingLength(num);\n  }\n  return out;\n}\n\nmodule.exports = varintEncoder;\n"},"lineCount":38}},"error":null,"hash":"739fc31f2a3aca9b20674e5d79d7bd03","cacheData":{"env":{}}}