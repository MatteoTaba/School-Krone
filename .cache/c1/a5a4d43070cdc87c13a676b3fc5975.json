{"id":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\package.json","includedInParent":true,"mtime":1638722720622},{"name":"../errors.js","loc":{"line":5,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\locks\\memory.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\errors.js"},{"name":"debug","loc":{"line":6,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\locks\\memory.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errors = require('../errors.js');\nvar debug = require('debug');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:repo:lock:memory');\nconst lockFile = 'repo.lock';\nconst LOCKS = {};\nasync function lock(dir) {\n  const file = dir + '/' + lockFile;\n  log('locking %s', file);\n  if (LOCKS[file] === true) {\n    throw new errors.LockExistsError(`Lock already being held for file: ${ file }`);\n  }\n  LOCKS[file] = true;\n  const closer = {\n    async close() {\n      if (LOCKS[file]) {\n        delete LOCKS[file];\n      }\n    }\n  };\n  return closer;\n}\nasync function locked(dir) {\n  const file = dir + '/' + lockFile;\n  log(`checking lock: ${ file }`);\n  return Boolean(LOCKS[file]);\n}\nconst MemoryLock = {\n  lock,\n  locked\n};\n\nexports.MemoryLock = MemoryLock;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/locks/memory.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"../node_modules/ipfs-repo/cjs/src/locks/memory.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errors = require('../errors.js');\nvar debug = require('debug');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:repo:lock:memory');\nconst lockFile = 'repo.lock';\nconst LOCKS = {};\nasync function lock(dir) {\n  const file = dir + '/' + lockFile;\n  log('locking %s', file);\n  if (LOCKS[file] === true) {\n    throw new errors.LockExistsError(`Lock already being held for file: ${ file }`);\n  }\n  LOCKS[file] = true;\n  const closer = {\n    async close() {\n      if (LOCKS[file]) {\n        delete LOCKS[file];\n      }\n    }\n  };\n  return closer;\n}\nasync function locked(dir) {\n  const file = dir + '/' + lockFile;\n  log(`checking lock: ${ file }`);\n  return Boolean(LOCKS[file]);\n}\nconst MemoryLock = {\n  lock,\n  locked\n};\n\nexports.MemoryLock = MemoryLock;\n"},"lineCount":42}},"error":null,"hash":"be066cced25719a1a286b0ed4e8f9103","cacheData":{"env":{}}}