{"id":"../node_modules/ipfs-core/cjs/src/preload.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"multiaddr-to-uri","loc":{"line":5,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\preload.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiaddr-to-uri\\index.js"},{"name":"debug","loc":{"line":6,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\preload.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"},{"name":"array-shuffle","loc":{"line":7,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\preload.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\array-shuffle\\index.js"},{"name":"native-abort-controller","loc":{"line":8,"column":36},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\preload.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\native-abort-controller\\src\\index.js"},{"name":"ipfs-core-config/preload","loc":{"line":9,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\preload.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-config\\cjs\\src\\preload.browser.js"},{"name":"hashlru","loc":{"line":10,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\preload.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\hashlru\\index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar toUri = require('multiaddr-to-uri');\nvar debug = require('debug');\nvar shuffle = require('array-shuffle');\nvar nativeAbortController = require('native-abort-controller');\nvar preload = require('ipfs-core-config/preload');\nvar hashlru = require('hashlru');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar toUri__default = /*#__PURE__*/_interopDefaultLegacy(toUri);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar shuffle__default = /*#__PURE__*/_interopDefaultLegacy(shuffle);\nvar hashlru__default = /*#__PURE__*/_interopDefaultLegacy(hashlru);\n\nconst log = Object.assign(debug__default[\"default\"]('ipfs:preload'), { error: debug__default[\"default\"]('ipfs:preload:error') });\nfunction createPreloader(options = {}) {\n  options.enabled = Boolean(options.enabled);\n  options.addresses = options.addresses || [];\n  options.cache = options.cache || 1000;\n  if (!options.enabled || !options.addresses.length) {\n    log('preload disabled');\n    const api = () => {\n    };\n    return Object.assign(api, {\n      start: () => {\n      },\n      stop: () => {\n      }\n    });\n  }\n  let stopped = true;\n  let requests = [];\n  const apiUris = options.addresses.map(toUri__default[\"default\"]);\n  const cache = hashlru__default[\"default\"](options.cache);\n  const api = async cid => {\n    try {\n      if (stopped) {\n        throw new Error(`preload ${ cid } but preloader is not started`);\n      }\n      const path = cid.toString();\n      if (cache.has(path)) {\n        return;\n      }\n      cache.set(path, true);\n      const fallbackApiUris = shuffle__default[\"default\"](apiUris);\n      let success = false;\n      const now = Date.now();\n      for (const uri of fallbackApiUris) {\n        if (stopped)\n          throw new Error(`preload aborted for ${ path }`);\n        let controller;\n        try {\n          controller = new nativeAbortController.AbortController();\n          requests = requests.concat(controller);\n          await preload.preload(`${ uri }/api/v0/refs?r=true&arg=${ encodeURIComponent(path) }`, { signal: controller.signal });\n          success = true;\n        } catch (err) {\n          if (err.type !== 'aborted')\n            log.error(err);\n        } finally {\n          requests = requests.filter(r => r !== controller);\n        }\n        if (success)\n          break;\n      }\n      log(`${ success ? '' : 'un' }successfully preloaded ${ path } in ${ Date.now() - now }ms`);\n    } catch (err) {\n      log.error(err);\n    }\n  };\n  api.start = () => {\n    stopped = false;\n  };\n  api.stop = () => {\n    stopped = true;\n    log(`aborting ${ requests.length } pending preload request(s)`);\n    requests.forEach(r => r.abort());\n    requests = [];\n  };\n  return api;\n}\n\nexports.createPreloader = createPreloader;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/preload.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/preload.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar toUri = require('multiaddr-to-uri');\nvar debug = require('debug');\nvar shuffle = require('array-shuffle');\nvar nativeAbortController = require('native-abort-controller');\nvar preload = require('ipfs-core-config/preload');\nvar hashlru = require('hashlru');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar toUri__default = /*#__PURE__*/_interopDefaultLegacy(toUri);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar shuffle__default = /*#__PURE__*/_interopDefaultLegacy(shuffle);\nvar hashlru__default = /*#__PURE__*/_interopDefaultLegacy(hashlru);\n\nconst log = Object.assign(debug__default[\"default\"]('ipfs:preload'), { error: debug__default[\"default\"]('ipfs:preload:error') });\nfunction createPreloader(options = {}) {\n  options.enabled = Boolean(options.enabled);\n  options.addresses = options.addresses || [];\n  options.cache = options.cache || 1000;\n  if (!options.enabled || !options.addresses.length) {\n    log('preload disabled');\n    const api = () => {\n    };\n    return Object.assign(api, {\n      start: () => {\n      },\n      stop: () => {\n      }\n    });\n  }\n  let stopped = true;\n  let requests = [];\n  const apiUris = options.addresses.map(toUri__default[\"default\"]);\n  const cache = hashlru__default[\"default\"](options.cache);\n  const api = async cid => {\n    try {\n      if (stopped) {\n        throw new Error(`preload ${ cid } but preloader is not started`);\n      }\n      const path = cid.toString();\n      if (cache.has(path)) {\n        return;\n      }\n      cache.set(path, true);\n      const fallbackApiUris = shuffle__default[\"default\"](apiUris);\n      let success = false;\n      const now = Date.now();\n      for (const uri of fallbackApiUris) {\n        if (stopped)\n          throw new Error(`preload aborted for ${ path }`);\n        let controller;\n        try {\n          controller = new nativeAbortController.AbortController();\n          requests = requests.concat(controller);\n          await preload.preload(`${ uri }/api/v0/refs?r=true&arg=${ encodeURIComponent(path) }`, { signal: controller.signal });\n          success = true;\n        } catch (err) {\n          if (err.type !== 'aborted')\n            log.error(err);\n        } finally {\n          requests = requests.filter(r => r !== controller);\n        }\n        if (success)\n          break;\n      }\n      log(`${ success ? '' : 'un' }successfully preloaded ${ path } in ${ Date.now() - now }ms`);\n    } catch (err) {\n      log.error(err);\n    }\n  };\n  api.start = () => {\n    stopped = false;\n  };\n  api.stop = () => {\n    stopped = true;\n    log(`aborting ${ requests.length } pending preload request(s)`);\n    requests.forEach(r => r.abort());\n    requests = [];\n  };\n  return api;\n}\n\nexports.createPreloader = createPreloader;\n"},"lineCount":88}},"error":null,"hash":"80bcf7b72c125a613db8a415a2ec45d0","cacheData":{"env":{}}}