{"id":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\package.json","includedInParent":true,"mtime":1638722720608},{"name":"multiformats/cid","loc":{"line":5,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\cid.js"},{"name":"multiformats/hashes/sha2","loc":{"line":6,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\hashes\\sha2-browser.js"},{"name":"multiformats/bases/base58","loc":{"line":7,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\bases\\base58.js"},{"name":"varint-decoder","loc":{"line":8,"column":17},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\varint-decoder\\src\\index.js"},{"name":"../utils/varint-encoder.js","loc":{"line":9,"column":28},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\utils\\varint-encoder.js"},{"name":"../utils/index.js","loc":{"line":10,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\utils\\index.js"},{"name":"./message.js","loc":{"line":11,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\message.js"},{"name":"./entry.js","loc":{"line":12,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\entry.js"},{"name":"err-code","loc":{"line":13,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar sha2 = require('multiformats/hashes/sha2');\nvar base58 = require('multiformats/bases/base58');\nvar vd = require('varint-decoder');\nvar varintEncoder = require('../utils/varint-encoder.js');\nvar index = require('../utils/index.js');\nvar message = require('./message.js');\nvar entry = require('./entry.js');\nvar errcode = require('err-code');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar vd__default = /*#__PURE__*/_interopDefaultLegacy(vd);\nvar errcode__default = /*#__PURE__*/_interopDefaultLegacy(errcode);\n\nclass BitswapMessage {\n  constructor(full) {\n    this.full = full;\n    this.wantlist = new Map();\n    this.blocks = new Map();\n    this.blockPresences = new Map();\n    this.pendingBytes = 0;\n  }\n  get empty() {\n    return this.blocks.size === 0 && this.wantlist.size === 0 && this.blockPresences.size === 0;\n  }\n  addEntry(cid, priority, wantType, cancel, sendDontHave) {\n    if (wantType == null) {\n      wantType = BitswapMessage.WantType.Block;\n    }\n    const cidStr = cid.toString(base58.base58btc);\n    const entry$1 = this.wantlist.get(cidStr);\n    if (entry$1) {\n      if (entry$1.wantType === wantType) {\n        entry$1.priority = priority;\n      }\n      if (cancel) {\n        entry$1.cancel = Boolean(cancel);\n      }\n      if (sendDontHave) {\n        entry$1.sendDontHave = Boolean(sendDontHave);\n      }\n      if (wantType === BitswapMessage.WantType.Block && entry$1.wantType === BitswapMessage.WantType.Have) {\n        entry$1.wantType = wantType;\n      }\n    } else {\n      this.wantlist.set(cidStr, new entry.BitswapMessageEntry(cid, priority, wantType, cancel, sendDontHave));\n    }\n  }\n  addBlock(cid, block) {\n    const cidStr = cid.toString(base58.base58btc);\n    this.blocks.set(cidStr, block);\n  }\n  addHave(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.Have);\n    }\n  }\n  addDontHave(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.DontHave);\n    }\n  }\n  cancel(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    this.wantlist.delete(cidStr);\n    this.addEntry(cid, 0, BitswapMessage.WantType.Block, true, false);\n  }\n  setPendingBytes(size) {\n    this.pendingBytes = size;\n  }\n  serializeToBitswap100() {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map(entry => {\n          return {\n            block: entry.cid.bytes,\n            priority: Number(entry.priority),\n            cancel: Boolean(entry.cancel)\n          };\n        }),\n        full: this.full ? true : undefined\n      },\n      blocks: Array.from(this.blocks.values())\n    };\n    return message.Message.encode(msg).finish();\n  }\n  serializeToBitswap110() {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map(entry => {\n          return {\n            block: entry.cid.bytes,\n            priority: Number(entry.priority),\n            wantType: entry.wantType,\n            cancel: Boolean(entry.cancel),\n            sendDontHave: Boolean(entry.sendDontHave)\n          };\n        }),\n        full: this.full ? true : undefined\n      },\n      blockPresences: [],\n      payload: [],\n      pendingBytes: this.pendingBytes\n    };\n    for (const [cidStr, data] of this.blocks.entries()) {\n      const cid$1 = cid.CID.parse(cidStr);\n      const version = cid$1.version;\n      const codec = cid$1.code;\n      const multihash = cid$1.multihash.code;\n      const digestLength = cid$1.multihash.digest.length;\n      const prefix = varintEncoder([\n        version,\n        codec,\n        multihash,\n        digestLength\n      ]);\n      msg.payload.push(new message.Message.Block({\n        prefix,\n        data\n      }));\n    }\n    for (const [cidStr, bpType] of this.blockPresences) {\n      msg.blockPresences.push(new message.Message.BlockPresence({\n        cid: cid.CID.parse(cidStr).bytes,\n        type: bpType\n      }));\n    }\n    if (this.pendingBytes > 0) {\n      msg.pendingBytes = this.pendingBytes;\n    }\n    return message.Message.encode(msg).finish();\n  }\n  equals(other) {\n    if (this.full !== other.full || this.pendingBytes !== other.pendingBytes || !index.isMapEqual(this.wantlist, other.wantlist) || !index.isMapEqual(this.blocks, other.blocks) || !index.isMapEqual(this.blockPresences, other.blockPresences)) {\n      return false;\n    }\n    return true;\n  }\n  get [Symbol.toStringTag]() {\n    const list = Array.from(this.wantlist.keys());\n    const blocks = Array.from(this.blocks.keys());\n    return `BitswapMessage <full: ${ this.full }, list: ${ list }, blocks: ${ blocks }>`;\n  }\n}\nBitswapMessage.deserialize = async (raw, hashLoader) => {\n  const decoded = message.Message.decode(raw);\n  const isFull = decoded.wantlist && decoded.wantlist.full || false;\n  const msg = new BitswapMessage(isFull);\n  if (decoded.wantlist && decoded.wantlist.entries) {\n    decoded.wantlist.entries.forEach(entry => {\n      if (!entry.block) {\n        return;\n      }\n      const cid$1 = cid.CID.decode(entry.block);\n      msg.addEntry(cid$1, entry.priority || 0, entry.wantType, Boolean(entry.cancel), Boolean(entry.sendDontHave));\n    });\n  }\n  if (decoded.blockPresences) {\n    decoded.blockPresences.forEach(blockPresence => {\n      if (!blockPresence.cid) {\n        return;\n      }\n      const cid$1 = cid.CID.decode(blockPresence.cid);\n      if (blockPresence.type === BitswapMessage.BlockPresenceType.Have) {\n        msg.addHave(cid$1);\n      } else {\n        msg.addDontHave(cid$1);\n      }\n    });\n  }\n  if (decoded.blocks.length > 0) {\n    await Promise.all(decoded.blocks.map(async b => {\n      const hash = await sha2.sha256.digest(b);\n      const cid$1 = cid.CID.createV0(hash);\n      msg.addBlock(cid$1, b);\n    }));\n    return msg;\n  }\n  if (decoded.payload.length > 0) {\n    await Promise.all(decoded.payload.map(async p => {\n      if (!p.prefix || !p.data) {\n        return;\n      }\n      const values = vd__default[\"default\"](p.prefix);\n      const cidVersion = values[0];\n      const multicodec = values[1];\n      const hashAlg = values[2];\n      const hasher = hashAlg === sha2.sha256.code ? sha2.sha256 : hashLoader && await hashLoader.getHasher(hashAlg);\n      if (!hasher) {\n        throw errcode__default[\"default\"](new Error('Unknown hash algorithm'), 'ERR_UNKNOWN_HASH_ALG');\n      }\n      const hash = await hasher.digest(p.data);\n      const cid$1 = cid.CID.create(cidVersion, multicodec, hash);\n      msg.addBlock(cid$1, p.data);\n    }));\n    msg.setPendingBytes(decoded.pendingBytes);\n    return msg;\n  }\n  return msg;\n};\nBitswapMessage.blockPresenceSize = cid => {\n  return cid.bytes.length + 1;\n};\nBitswapMessage.Entry = entry.BitswapMessageEntry;\nBitswapMessage.WantType = {\n  Block: message.Message.Wantlist.WantType.Block,\n  Have: message.Message.Wantlist.WantType.Have\n};\nBitswapMessage.BlockPresenceType = {\n  Have: message.Message.BlockPresenceType.Have,\n  DontHave: message.Message.BlockPresenceType.DontHave\n};\n\nexports.BitswapMessage = BitswapMessage;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/message/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}}],"sources":{"../node_modules/ipfs-bitswap/cjs/src/message/index.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar sha2 = require('multiformats/hashes/sha2');\nvar base58 = require('multiformats/bases/base58');\nvar vd = require('varint-decoder');\nvar varintEncoder = require('../utils/varint-encoder.js');\nvar index = require('../utils/index.js');\nvar message = require('./message.js');\nvar entry = require('./entry.js');\nvar errcode = require('err-code');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar vd__default = /*#__PURE__*/_interopDefaultLegacy(vd);\nvar errcode__default = /*#__PURE__*/_interopDefaultLegacy(errcode);\n\nclass BitswapMessage {\n  constructor(full) {\n    this.full = full;\n    this.wantlist = new Map();\n    this.blocks = new Map();\n    this.blockPresences = new Map();\n    this.pendingBytes = 0;\n  }\n  get empty() {\n    return this.blocks.size === 0 && this.wantlist.size === 0 && this.blockPresences.size === 0;\n  }\n  addEntry(cid, priority, wantType, cancel, sendDontHave) {\n    if (wantType == null) {\n      wantType = BitswapMessage.WantType.Block;\n    }\n    const cidStr = cid.toString(base58.base58btc);\n    const entry$1 = this.wantlist.get(cidStr);\n    if (entry$1) {\n      if (entry$1.wantType === wantType) {\n        entry$1.priority = priority;\n      }\n      if (cancel) {\n        entry$1.cancel = Boolean(cancel);\n      }\n      if (sendDontHave) {\n        entry$1.sendDontHave = Boolean(sendDontHave);\n      }\n      if (wantType === BitswapMessage.WantType.Block && entry$1.wantType === BitswapMessage.WantType.Have) {\n        entry$1.wantType = wantType;\n      }\n    } else {\n      this.wantlist.set(cidStr, new entry.BitswapMessageEntry(cid, priority, wantType, cancel, sendDontHave));\n    }\n  }\n  addBlock(cid, block) {\n    const cidStr = cid.toString(base58.base58btc);\n    this.blocks.set(cidStr, block);\n  }\n  addHave(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.Have);\n    }\n  }\n  addDontHave(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.DontHave);\n    }\n  }\n  cancel(cid) {\n    const cidStr = cid.toString(base58.base58btc);\n    this.wantlist.delete(cidStr);\n    this.addEntry(cid, 0, BitswapMessage.WantType.Block, true, false);\n  }\n  setPendingBytes(size) {\n    this.pendingBytes = size;\n  }\n  serializeToBitswap100() {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map(entry => {\n          return {\n            block: entry.cid.bytes,\n            priority: Number(entry.priority),\n            cancel: Boolean(entry.cancel)\n          };\n        }),\n        full: this.full ? true : undefined\n      },\n      blocks: Array.from(this.blocks.values())\n    };\n    return message.Message.encode(msg).finish();\n  }\n  serializeToBitswap110() {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map(entry => {\n          return {\n            block: entry.cid.bytes,\n            priority: Number(entry.priority),\n            wantType: entry.wantType,\n            cancel: Boolean(entry.cancel),\n            sendDontHave: Boolean(entry.sendDontHave)\n          };\n        }),\n        full: this.full ? true : undefined\n      },\n      blockPresences: [],\n      payload: [],\n      pendingBytes: this.pendingBytes\n    };\n    for (const [cidStr, data] of this.blocks.entries()) {\n      const cid$1 = cid.CID.parse(cidStr);\n      const version = cid$1.version;\n      const codec = cid$1.code;\n      const multihash = cid$1.multihash.code;\n      const digestLength = cid$1.multihash.digest.length;\n      const prefix = varintEncoder([\n        version,\n        codec,\n        multihash,\n        digestLength\n      ]);\n      msg.payload.push(new message.Message.Block({\n        prefix,\n        data\n      }));\n    }\n    for (const [cidStr, bpType] of this.blockPresences) {\n      msg.blockPresences.push(new message.Message.BlockPresence({\n        cid: cid.CID.parse(cidStr).bytes,\n        type: bpType\n      }));\n    }\n    if (this.pendingBytes > 0) {\n      msg.pendingBytes = this.pendingBytes;\n    }\n    return message.Message.encode(msg).finish();\n  }\n  equals(other) {\n    if (this.full !== other.full || this.pendingBytes !== other.pendingBytes || !index.isMapEqual(this.wantlist, other.wantlist) || !index.isMapEqual(this.blocks, other.blocks) || !index.isMapEqual(this.blockPresences, other.blockPresences)) {\n      return false;\n    }\n    return true;\n  }\n  get [Symbol.toStringTag]() {\n    const list = Array.from(this.wantlist.keys());\n    const blocks = Array.from(this.blocks.keys());\n    return `BitswapMessage <full: ${ this.full }, list: ${ list }, blocks: ${ blocks }>`;\n  }\n}\nBitswapMessage.deserialize = async (raw, hashLoader) => {\n  const decoded = message.Message.decode(raw);\n  const isFull = decoded.wantlist && decoded.wantlist.full || false;\n  const msg = new BitswapMessage(isFull);\n  if (decoded.wantlist && decoded.wantlist.entries) {\n    decoded.wantlist.entries.forEach(entry => {\n      if (!entry.block) {\n        return;\n      }\n      const cid$1 = cid.CID.decode(entry.block);\n      msg.addEntry(cid$1, entry.priority || 0, entry.wantType, Boolean(entry.cancel), Boolean(entry.sendDontHave));\n    });\n  }\n  if (decoded.blockPresences) {\n    decoded.blockPresences.forEach(blockPresence => {\n      if (!blockPresence.cid) {\n        return;\n      }\n      const cid$1 = cid.CID.decode(blockPresence.cid);\n      if (blockPresence.type === BitswapMessage.BlockPresenceType.Have) {\n        msg.addHave(cid$1);\n      } else {\n        msg.addDontHave(cid$1);\n      }\n    });\n  }\n  if (decoded.blocks.length > 0) {\n    await Promise.all(decoded.blocks.map(async b => {\n      const hash = await sha2.sha256.digest(b);\n      const cid$1 = cid.CID.createV0(hash);\n      msg.addBlock(cid$1, b);\n    }));\n    return msg;\n  }\n  if (decoded.payload.length > 0) {\n    await Promise.all(decoded.payload.map(async p => {\n      if (!p.prefix || !p.data) {\n        return;\n      }\n      const values = vd__default[\"default\"](p.prefix);\n      const cidVersion = values[0];\n      const multicodec = values[1];\n      const hashAlg = values[2];\n      const hasher = hashAlg === sha2.sha256.code ? sha2.sha256 : hashLoader && await hashLoader.getHasher(hashAlg);\n      if (!hasher) {\n        throw errcode__default[\"default\"](new Error('Unknown hash algorithm'), 'ERR_UNKNOWN_HASH_ALG');\n      }\n      const hash = await hasher.digest(p.data);\n      const cid$1 = cid.CID.create(cidVersion, multicodec, hash);\n      msg.addBlock(cid$1, p.data);\n    }));\n    msg.setPendingBytes(decoded.pendingBytes);\n    return msg;\n  }\n  return msg;\n};\nBitswapMessage.blockPresenceSize = cid => {\n  return cid.bytes.length + 1;\n};\nBitswapMessage.Entry = entry.BitswapMessageEntry;\nBitswapMessage.WantType = {\n  Block: message.Message.Wantlist.WantType.Block,\n  Have: message.Message.Wantlist.WantType.Have\n};\nBitswapMessage.BlockPresenceType = {\n  Have: message.Message.BlockPresenceType.Have,\n  DontHave: message.Message.BlockPresenceType.DontHave\n};\n\nexports.BitswapMessage = BitswapMessage;\n"},"lineCount":222}},"error":null,"hash":"c16d398dfb5121d08be3a3a2a8fbe4dc","cacheData":{"env":{}}}