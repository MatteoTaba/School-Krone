{"id":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-config\\package.json","includedInParent":true,"mtime":1638722720627},{"name":"./utils/tlru.js","loc":{"line":5,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-config\\cjs\\src\\dns.browser.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-config\\cjs\\src\\utils\\tlru.js"},{"name":"p-queue","loc":{"line":6,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-config\\cjs\\src\\dns.browser.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\p-queue\\dist\\index.js"},{"name":"ipfs-utils/src/http.js","loc":{"line":7,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-config\\cjs\\src\\dns.browser.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-utils\\src\\http.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tlru = require('./utils/tlru.js');\nvar PQueue = require('p-queue');\nvar HTTP = require('ipfs-utils/src/http.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PQueue__default = /*#__PURE__*/_interopDefaultLegacy(PQueue);\nvar HTTP__default = /*#__PURE__*/_interopDefaultLegacy(HTTP);\n\nconst cache = new tlru.TLRU(1000);\nconst ttl = 60 * 1000;\nconst Queue = PQueue__default[\"default\"].default ? PQueue__default[\"default\"].default : PQueue__default[\"default\"];\nconst httpQueue = new Queue({ concurrency: 4 });\nconst ipfsPath = response => {\n  if (response.Path)\n    return response.Path;\n  throw new Error(response.Message);\n};\nasync function resolveDnslink(fqdn, opts) {\n  const resolve = async (fqdn, opts = {}) => {\n    const searchParams = new URLSearchParams(opts);\n    searchParams.set('arg', fqdn);\n    const query = searchParams.toString();\n    if (!opts.nocache && cache.has(query)) {\n      const response = cache.get(query);\n      return ipfsPath(response);\n    }\n    const response = await httpQueue.add(async () => {\n      const res = await HTTP__default[\"default\"].get('https://ipfs.io/api/v0/dns', { searchParams });\n      const query = new URL(res.url).search.slice(1);\n      const json = await res.json();\n      cache.set(query, json, ttl);\n      return json;\n    });\n    return ipfsPath(response);\n  };\n  return resolve(fqdn, opts);\n}\n\nexports.resolveDnslink = resolveDnslink;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core-config/cjs/src/dns.browser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}}],"sources":{"../node_modules/ipfs-core-config/cjs/src/dns.browser.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tlru = require('./utils/tlru.js');\nvar PQueue = require('p-queue');\nvar HTTP = require('ipfs-utils/src/http.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PQueue__default = /*#__PURE__*/_interopDefaultLegacy(PQueue);\nvar HTTP__default = /*#__PURE__*/_interopDefaultLegacy(HTTP);\n\nconst cache = new tlru.TLRU(1000);\nconst ttl = 60 * 1000;\nconst Queue = PQueue__default[\"default\"].default ? PQueue__default[\"default\"].default : PQueue__default[\"default\"];\nconst httpQueue = new Queue({ concurrency: 4 });\nconst ipfsPath = response => {\n  if (response.Path)\n    return response.Path;\n  throw new Error(response.Message);\n};\nasync function resolveDnslink(fqdn, opts) {\n  const resolve = async (fqdn, opts = {}) => {\n    const searchParams = new URLSearchParams(opts);\n    searchParams.set('arg', fqdn);\n    const query = searchParams.toString();\n    if (!opts.nocache && cache.has(query)) {\n      const response = cache.get(query);\n      return ipfsPath(response);\n    }\n    const response = await httpQueue.add(async () => {\n      const res = await HTTP__default[\"default\"].get('https://ipfs.io/api/v0/dns', { searchParams });\n      const query = new URL(res.url).search.slice(1);\n      const json = await res.json();\n      cache.set(query, json, ttl);\n      return json;\n    });\n    return ipfsPath(response);\n  };\n  return resolve(fqdn, opts);\n}\n\nexports.resolveDnslink = resolveDnslink;\n"},"lineCount":45}},"error":null,"hash":"396aa9c63efdc95a2aa5e0e0ca16e4d2","cacheData":{"env":{}}}