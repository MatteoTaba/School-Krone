{"id":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"just-safe-set","loc":{"line":5,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\config\\profiles.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\just-safe-set\\index.js"},{"name":"ipfs-core-config/config","loc":{"line":6,"column":31},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\config\\profiles.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-config\\cjs\\src\\config.browser.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar set = require('just-safe-set');\nvar getDefaultConfig = require('ipfs-core-config/config');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar set__default = /*#__PURE__*/_interopDefaultLegacy(set);\nvar getDefaultConfig__default = /*#__PURE__*/_interopDefaultLegacy(getDefaultConfig);\n\nconst profiles = {\n  server: {\n    description: 'Recommended for nodes with public IPv4 address (servers, VPSes, etc.), disables host and content discovery and UPnP in local networks.',\n    transform: config => {\n      set__default[\"default\"](config, 'Discovery.MDNS.Enabled', false);\n      set__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', false);\n      config.Swarm = {\n        ...config.Swarm || {},\n        DisableNatPortMap: true\n      };\n      return config;\n    }\n  },\n  'local-discovery': {\n    description: 'Sets default values to fields affected by `server` profile, enables discovery and UPnP in local networks.',\n    transform: config => {\n      set__default[\"default\"](config, 'Discovery.MDNS.Enabled', true);\n      set__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', true);\n      set__default[\"default\"](config, 'Swarm', {\n        ...config.Swarm || {},\n        DisableNatPortMap: false\n      });\n      return config;\n    }\n  },\n  test: {\n    description: 'Reduces external interference, useful for running ipfs in test environments. Note that with these settings node won\\'t be able to talk to the rest of the network without manual bootstrap.',\n    transform: config => {\n      const defaultConfig = getDefaultConfig__default[\"default\"]();\n      set__default[\"default\"](config, 'Addresses.API', defaultConfig.Addresses.API ? '/ip4/127.0.0.1/tcp/0' : '');\n      set__default[\"default\"](config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway ? '/ip4/127.0.0.1/tcp/0' : '');\n      set__default[\"default\"](config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm.length ? ['/ip4/127.0.0.1/tcp/0'] : []);\n      set__default[\"default\"](config, 'Addresses.Delegates', []);\n      set__default[\"default\"](config, 'Bootstrap', []);\n      set__default[\"default\"](config, 'Discovery.MDNS.Enabled', false);\n      set__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', false);\n      set__default[\"default\"](config, 'Swarm', {\n        ...config.Swarm || {},\n        DisableNatPortMap: true\n      });\n      return config;\n    }\n  },\n  'default-networking': {\n    description: 'Restores default network settings. Inverse profile of the `test` profile.',\n    transform: config => {\n      const defaultConfig = getDefaultConfig__default[\"default\"]();\n      set__default[\"default\"](config, 'Addresses.API', defaultConfig.Addresses.API);\n      set__default[\"default\"](config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway);\n      set__default[\"default\"](config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm);\n      set__default[\"default\"](config, 'Addresses.Delegates', defaultConfig.Addresses.Delegates);\n      set__default[\"default\"](config, 'Bootstrap', defaultConfig.Bootstrap);\n      set__default[\"default\"](config, 'Discovery.MDNS.Enabled', defaultConfig.Discovery.MDNS.Enabled);\n      set__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', defaultConfig.Discovery.webRTCStar.Enabled);\n      set__default[\"default\"](config, 'Swarm', {\n        ...config.Swarm || {},\n        DisableNatPortMap: false\n      });\n      return config;\n    }\n  },\n  lowpower: {\n    description: 'Reduces daemon overhead on the system. May affect node functionality,performance of content discovery and data fetching may be degraded. Recommended for low power systems.',\n    transform: config => {\n      const Swarm = config.Swarm || {};\n      const ConnMgr = Swarm.ConnMgr || {};\n      ConnMgr.LowWater = 20;\n      ConnMgr.HighWater = 40;\n      Swarm.ConnMgr = ConnMgr;\n      config.Swarm = Swarm;\n      return config;\n    }\n  },\n  'default-power': {\n    description: 'Inverse of \"lowpower\" profile.',\n    transform: config => {\n      const defaultConfig = getDefaultConfig__default[\"default\"]();\n      config.Swarm = defaultConfig.Swarm;\n      return config;\n    }\n  }\n};\n\nexports.profiles = profiles;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/config/profiles.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/config/profiles.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar set = require('just-safe-set');\nvar getDefaultConfig = require('ipfs-core-config/config');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar set__default = /*#__PURE__*/_interopDefaultLegacy(set);\nvar getDefaultConfig__default = /*#__PURE__*/_interopDefaultLegacy(getDefaultConfig);\n\nconst profiles = {\n  server: {\n    description: 'Recommended for nodes with public IPv4 address (servers, VPSes, etc.), disables host and content discovery and UPnP in local networks.',\n    transform: config => {\n      set__default[\"default\"](config, 'Discovery.MDNS.Enabled', false);\n      set__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', false);\n      config.Swarm = {\n        ...config.Swarm || {},\n        DisableNatPortMap: true\n      };\n      return config;\n    }\n  },\n  'local-discovery': {\n    description: 'Sets default values to fields affected by `server` profile, enables discovery and UPnP in local networks.',\n    transform: config => {\n      set__default[\"default\"](config, 'Discovery.MDNS.Enabled', true);\n      set__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', true);\n      set__default[\"default\"](config, 'Swarm', {\n        ...config.Swarm || {},\n        DisableNatPortMap: false\n      });\n      return config;\n    }\n  },\n  test: {\n    description: 'Reduces external interference, useful for running ipfs in test environments. Note that with these settings node won\\'t be able to talk to the rest of the network without manual bootstrap.',\n    transform: config => {\n      const defaultConfig = getDefaultConfig__default[\"default\"]();\n      set__default[\"default\"](config, 'Addresses.API', defaultConfig.Addresses.API ? '/ip4/127.0.0.1/tcp/0' : '');\n      set__default[\"default\"](config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway ? '/ip4/127.0.0.1/tcp/0' : '');\n      set__default[\"default\"](config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm.length ? ['/ip4/127.0.0.1/tcp/0'] : []);\n      set__default[\"default\"](config, 'Addresses.Delegates', []);\n      set__default[\"default\"](config, 'Bootstrap', []);\n      set__default[\"default\"](config, 'Discovery.MDNS.Enabled', false);\n      set__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', false);\n      set__default[\"default\"](config, 'Swarm', {\n        ...config.Swarm || {},\n        DisableNatPortMap: true\n      });\n      return config;\n    }\n  },\n  'default-networking': {\n    description: 'Restores default network settings. Inverse profile of the `test` profile.',\n    transform: config => {\n      const defaultConfig = getDefaultConfig__default[\"default\"]();\n      set__default[\"default\"](config, 'Addresses.API', defaultConfig.Addresses.API);\n      set__default[\"default\"](config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway);\n      set__default[\"default\"](config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm);\n      set__default[\"default\"](config, 'Addresses.Delegates', defaultConfig.Addresses.Delegates);\n      set__default[\"default\"](config, 'Bootstrap', defaultConfig.Bootstrap);\n      set__default[\"default\"](config, 'Discovery.MDNS.Enabled', defaultConfig.Discovery.MDNS.Enabled);\n      set__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', defaultConfig.Discovery.webRTCStar.Enabled);\n      set__default[\"default\"](config, 'Swarm', {\n        ...config.Swarm || {},\n        DisableNatPortMap: false\n      });\n      return config;\n    }\n  },\n  lowpower: {\n    description: 'Reduces daemon overhead on the system. May affect node functionality,performance of content discovery and data fetching may be degraded. Recommended for low power systems.',\n    transform: config => {\n      const Swarm = config.Swarm || {};\n      const ConnMgr = Swarm.ConnMgr || {};\n      ConnMgr.LowWater = 20;\n      ConnMgr.HighWater = 40;\n      Swarm.ConnMgr = ConnMgr;\n      config.Swarm = Swarm;\n      return config;\n    }\n  },\n  'default-power': {\n    description: 'Inverse of \"lowpower\" profile.',\n    transform: config => {\n      const defaultConfig = getDefaultConfig__default[\"default\"]();\n      config.Swarm = defaultConfig.Swarm;\n      return config;\n    }\n  }\n};\n\nexports.profiles = profiles;\n"},"lineCount":97}},"error":null,"hash":"93026de5147ad566fe9f0680729ec42f","cacheData":{"env":{}}}