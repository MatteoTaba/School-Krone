{"id":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\package.json","includedInParent":true,"mtime":1638722720608},{"name":"events","loc":{"line":5,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\notifications.js","resolved":"C:\\Users\\matte\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\events\\events.js"},{"name":"uint8arrays/to-string","loc":{"line":6,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\notifications.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\to-string.js"},{"name":"./constants.js","loc":{"line":7,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\notifications.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\constants.js"},{"name":"./utils/index.js","loc":{"line":8,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\notifications.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\utils\\index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar events = require('events');\nvar toString = require('uint8arrays/to-string');\nvar constants = require('./constants.js');\nvar index = require('./utils/index.js');\n\nconst unwantEvent = cid => `unwant:${ toString.toString(cid.multihash.bytes, 'base64') }`;\nconst blockEvent = cid => `block:${ toString.toString(cid.multihash.bytes, 'base64') }`;\nclass Notifications extends events.EventEmitter {\n  constructor(peerId) {\n    super();\n    this.setMaxListeners(constants.maxListeners);\n    this._log = index.logger(peerId, 'notif');\n  }\n  hasBlock(cid, block) {\n    const event = blockEvent(cid);\n    this._log(event);\n    this.emit(event, block);\n  }\n  wantBlock(cid, options = {}) {\n    if (!cid) {\n      throw new Error('Not a valid cid');\n    }\n    const blockEvt = blockEvent(cid);\n    const unwantEvt = unwantEvent(cid);\n    this._log(`wantBlock:${ cid }`);\n    return new Promise((resolve, reject) => {\n      const onUnwant = () => {\n        this.removeListener(blockEvt, onBlock);\n        reject(new Error(`Block for ${ cid } unwanted`));\n      };\n      const onBlock = data => {\n        this.removeListener(unwantEvt, onUnwant);\n        resolve(data);\n      };\n      this.once(unwantEvt, onUnwant);\n      this.once(blockEvt, onBlock);\n      if (options && options.signal) {\n        options.signal.addEventListener('abort', () => {\n          this.removeListener(blockEvt, onBlock);\n          this.removeListener(unwantEvt, onUnwant);\n          reject(new Error(`Want for ${ cid } aborted`));\n        });\n      }\n    });\n  }\n  unwantBlock(cid) {\n    const event = unwantEvent(cid);\n    this._log(event);\n    this.emit(event);\n  }\n}\n\nexports.Notifications = Notifications;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/notifications.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"../node_modules/ipfs-bitswap/cjs/src/notifications.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar events = require('events');\nvar toString = require('uint8arrays/to-string');\nvar constants = require('./constants.js');\nvar index = require('./utils/index.js');\n\nconst unwantEvent = cid => `unwant:${ toString.toString(cid.multihash.bytes, 'base64') }`;\nconst blockEvent = cid => `block:${ toString.toString(cid.multihash.bytes, 'base64') }`;\nclass Notifications extends events.EventEmitter {\n  constructor(peerId) {\n    super();\n    this.setMaxListeners(constants.maxListeners);\n    this._log = index.logger(peerId, 'notif');\n  }\n  hasBlock(cid, block) {\n    const event = blockEvent(cid);\n    this._log(event);\n    this.emit(event, block);\n  }\n  wantBlock(cid, options = {}) {\n    if (!cid) {\n      throw new Error('Not a valid cid');\n    }\n    const blockEvt = blockEvent(cid);\n    const unwantEvt = unwantEvent(cid);\n    this._log(`wantBlock:${ cid }`);\n    return new Promise((resolve, reject) => {\n      const onUnwant = () => {\n        this.removeListener(blockEvt, onBlock);\n        reject(new Error(`Block for ${ cid } unwanted`));\n      };\n      const onBlock = data => {\n        this.removeListener(unwantEvt, onUnwant);\n        resolve(data);\n      };\n      this.once(unwantEvt, onUnwant);\n      this.once(blockEvt, onBlock);\n      if (options && options.signal) {\n        options.signal.addEventListener('abort', () => {\n          this.removeListener(blockEvt, onBlock);\n          this.removeListener(unwantEvt, onUnwant);\n          reject(new Error(`Want for ${ cid } aborted`));\n        });\n      }\n    });\n  }\n  unwantBlock(cid) {\n    const event = unwantEvent(cid);\n    this._log(event);\n    this.emit(event);\n  }\n}\n\nexports.Notifications = Notifications;\n"},"lineCount":58}},"error":null,"hash":"5eb8bf7c84beb15059aae2b860de0edc","cacheData":{"env":{}}}