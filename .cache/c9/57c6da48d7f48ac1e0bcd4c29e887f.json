{"id":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"@ipld/dag-pb","loc":{"line":5,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\add-link.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\@ipld\\dag-pb\\cjs\\src\\index.js"},{"name":"multiformats/cid","loc":{"line":6,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\add-link.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\cid.js"},{"name":"debug","loc":{"line":7,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\add-link.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"},{"name":"ipfs-unixfs","loc":{"line":8,"column":25},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\add-link.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-unixfs\\cjs\\src\\index.js"},{"name":"./dir-sharded.js","loc":{"line":9,"column":25},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\add-link.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\dir-sharded.js"},{"name":"./hamt-utils.js","loc":{"line":10,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\add-link.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\hamt-utils.js"},{"name":"err-code","loc":{"line":11,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\add-link.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"it-last","loc":{"line":12,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\add-link.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-last\\index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar dagPB = require('@ipld/dag-pb');\nvar cid = require('multiformats/cid');\nvar debug = require('debug');\nvar ipfsUnixfs = require('ipfs-unixfs');\nvar dirSharded = require('./dir-sharded.js');\nvar hamtUtils = require('./hamt-utils.js');\nvar errCode = require('err-code');\nvar last = require('it-last');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar last__default = /*#__PURE__*/_interopDefaultLegacy(last);\n\nconst log = debug__default[\"default\"]('ipfs:mfs:core:utils:add-link');\nasync function addLink(context, options) {\n  let parent = options.parent;\n  if (options.parentCid) {\n    const parentCid = cid.CID.asCID(options.parentCid);\n    if (parentCid === null) {\n      throw errCode__default[\"default\"](new Error('Invalid CID passed to addLink'), 'EINVALIDPARENTCID');\n    }\n    if (parentCid.code !== dagPB__namespace.code) {\n      throw errCode__default[\"default\"](new Error('Unsupported codec. Only DAG-PB is supported'), 'EINVALIDPARENTCID');\n    }\n    log(`Loading parent node ${ parentCid }`);\n    const block = await context.repo.blocks.get(parentCid);\n    parent = dagPB__namespace.decode(block);\n  }\n  if (!parent) {\n    throw errCode__default[\"default\"](new Error('No parent node or CID passed to addLink'), 'EINVALIDPARENT');\n  }\n  if (!options.cid) {\n    throw errCode__default[\"default\"](new Error('No child cid passed to addLink'), 'EINVALIDCHILDCID');\n  }\n  if (!options.name) {\n    throw errCode__default[\"default\"](new Error('No child name passed to addLink'), 'EINVALIDCHILDNAME');\n  }\n  if (!options.size && options.size !== 0) {\n    throw errCode__default[\"default\"](new Error('No child size passed to addLink'), 'EINVALIDCHILDSIZE');\n  }\n  if (!parent.Data) {\n    throw errCode__default[\"default\"](new Error('Parent node with no data passed to addLink'), 'ERR_INVALID_PARENT');\n  }\n  const meta = ipfsUnixfs.UnixFS.unmarshal(parent.Data);\n  if (meta.type === 'hamt-sharded-directory') {\n    log('Adding link to sharded directory');\n    return addToShardedDirectory(context, {\n      ...options,\n      parent\n    });\n  }\n  if (parent.Links.length >= options.shardSplitThreshold) {\n    log('Converting directory to sharded directory');\n    return convertToShardedDirectory(context, {\n      ...options,\n      parent,\n      mtime: meta.mtime,\n      mode: meta.mode\n    });\n  }\n  log(`Adding ${ options.name } (${ options.cid }) to regular directory`);\n  return addToDirectory(context, {\n    ...options,\n    parent\n  });\n}\nconst convertToShardedDirectory = async (context, options) => {\n  const result = await hamtUtils.createShard(context, options.parent.Links.map(link => ({\n    name: link.Name || '',\n    size: link.Tsize || 0,\n    cid: link.Hash\n  })).concat({\n    name: options.name,\n    size: options.size,\n    cid: options.cid\n  }), options);\n  log(`Converted directory to sharded directory ${ result.cid }`);\n  return result;\n};\nconst addToDirectory = async (context, options) => {\n  const parentLinks = options.parent.Links.filter(link => {\n    return link.Name !== options.name;\n  });\n  parentLinks.push({\n    Name: options.name,\n    Tsize: options.size,\n    Hash: options.cid\n  });\n  if (!options.parent.Data) {\n    throw errCode__default[\"default\"](new Error('Parent node with no data passed to addToDirectory'), 'ERR_INVALID_PARENT');\n  }\n  const node = ipfsUnixfs.UnixFS.unmarshal(options.parent.Data);\n  let data;\n  if (node.mtime) {\n    const ms = Date.now();\n    const secs = Math.floor(ms / 1000);\n    node.mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n    data = node.marshal();\n  } else {\n    data = options.parent.Data;\n  }\n  options.parent = dagPB__namespace.prepare({\n    Data: data,\n    Links: parentLinks\n  });\n  const hasher = await context.hashers.getHasher(options.hashAlg);\n  const buf = dagPB__namespace.encode(options.parent);\n  const hash = await hasher.digest(buf);\n  const cid$1 = cid.CID.create(options.cidVersion, dagPB__namespace.code, hash);\n  if (options.flush) {\n    await context.repo.blocks.put(cid$1, buf);\n  }\n  return {\n    node: options.parent,\n    cid: cid$1,\n    size: buf.length\n  };\n};\nconst addToShardedDirectory = async (context, options) => {\n  const {shard, path} = await addFileToShardedDirectory(context, options);\n  const result = await last__default[\"default\"](shard.flush(context.repo.blocks));\n  if (!result) {\n    throw new Error('No result from flushing shard');\n  }\n  const block = await context.repo.blocks.get(result.cid);\n  const node = dagPB__namespace.decode(block);\n  const parentLinks = options.parent.Links.filter(link => {\n    return (link.Name || '').substring(0, 2) !== path[0].prefix;\n  });\n  const newLink = node.Links.find(link => (link.Name || '').substring(0, 2) === path[0].prefix);\n  if (!newLink) {\n    throw new Error(`No link found with prefix ${ path[0].prefix }`);\n  }\n  parentLinks.push(newLink);\n  return hamtUtils.updateHamtDirectory(context, parentLinks, path[0].bucket, options);\n};\nconst addFileToShardedDirectory = async (context, options) => {\n  const file = {\n    name: options.name,\n    cid: options.cid,\n    size: options.size\n  };\n  if (!options.parent.Data) {\n    throw errCode__default[\"default\"](new Error('Parent node with no data passed to addFileToShardedDirectory'), 'ERR_INVALID_PARENT');\n  }\n  const rootBucket = await hamtUtils.recreateInitialHamtLevel(options.parent.Links);\n  const node = ipfsUnixfs.UnixFS.unmarshal(options.parent.Data);\n  const shard = new dirSharded.DirSharded({\n    root: true,\n    dir: true,\n    parent: undefined,\n    parentKey: undefined,\n    path: '',\n    dirty: true,\n    flat: false,\n    mode: node.mode\n  }, options);\n  shard._bucket = rootBucket;\n  if (node.mtime) {\n    shard.mtime = { secs: Math.round(Date.now() / 1000) };\n  }\n  const position = await rootBucket._findNewBucketAndPos(file.name);\n  const path = toBucketPath(position);\n  path[0].node = options.parent;\n  let index = 0;\n  while (index < path.length) {\n    const segment = path[index];\n    index++;\n    const node = segment.node;\n    if (!node) {\n      throw new Error('Segment had no node');\n    }\n    const link = node.Links.find(link => (link.Name || '').substring(0, 2) === segment.prefix);\n    if (!link) {\n      log(`Link ${ segment.prefix }${ file.name } will be added`);\n      index = path.length;\n      break;\n    }\n    if (link.Name === `${ segment.prefix }${ file.name }`) {\n      log(`Link ${ segment.prefix }${ file.name } will be replaced`);\n      index = path.length;\n      break;\n    }\n    if ((link.Name || '').length > 2) {\n      log(`Link ${ link.Name } ${ link.Hash } will be replaced with a subshard`);\n      index = path.length;\n      break;\n    }\n    log(`Found subshard ${ segment.prefix }`);\n    const block = await context.repo.blocks.get(link.Hash);\n    const subShard = dagPB__namespace.decode(block);\n    if (!path[index]) {\n      log(`Loaded new subshard ${ segment.prefix }`);\n      await hamtUtils.recreateHamtLevel(context, subShard.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16));\n      const position = await rootBucket._findNewBucketAndPos(file.name);\n      path.push({\n        bucket: position.bucket,\n        prefix: hamtUtils.toPrefix(position.pos),\n        node: subShard\n      });\n      break;\n    }\n    const nextSegment = path[index];\n    await hamtUtils.addLinksToHamtBucket(context, subShard.Links, nextSegment.bucket, rootBucket);\n    nextSegment.node = subShard;\n  }\n  await shard._bucket.put(file.name, {\n    size: file.size,\n    cid: file.cid\n  });\n  return {\n    shard,\n    path\n  };\n};\nconst toBucketPath = position => {\n  const path = [{\n      bucket: position.bucket,\n      prefix: hamtUtils.toPrefix(position.pos)\n    }];\n  let bucket = position.bucket._parent;\n  let positionInBucket = position.bucket._posAtParent;\n  while (bucket) {\n    path.push({\n      bucket,\n      prefix: hamtUtils.toPrefix(positionInBucket)\n    });\n    positionInBucket = bucket._posAtParent;\n    bucket = bucket._parent;\n  }\n  path.reverse();\n  return path;\n};\n\nexports.addLink = addLink;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/files/utils/add-link.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar dagPB = require('@ipld/dag-pb');\nvar cid = require('multiformats/cid');\nvar debug = require('debug');\nvar ipfsUnixfs = require('ipfs-unixfs');\nvar dirSharded = require('./dir-sharded.js');\nvar hamtUtils = require('./hamt-utils.js');\nvar errCode = require('err-code');\nvar last = require('it-last');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar dagPB__namespace = /*#__PURE__*/_interopNamespace(dagPB);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar last__default = /*#__PURE__*/_interopDefaultLegacy(last);\n\nconst log = debug__default[\"default\"]('ipfs:mfs:core:utils:add-link');\nasync function addLink(context, options) {\n  let parent = options.parent;\n  if (options.parentCid) {\n    const parentCid = cid.CID.asCID(options.parentCid);\n    if (parentCid === null) {\n      throw errCode__default[\"default\"](new Error('Invalid CID passed to addLink'), 'EINVALIDPARENTCID');\n    }\n    if (parentCid.code !== dagPB__namespace.code) {\n      throw errCode__default[\"default\"](new Error('Unsupported codec. Only DAG-PB is supported'), 'EINVALIDPARENTCID');\n    }\n    log(`Loading parent node ${ parentCid }`);\n    const block = await context.repo.blocks.get(parentCid);\n    parent = dagPB__namespace.decode(block);\n  }\n  if (!parent) {\n    throw errCode__default[\"default\"](new Error('No parent node or CID passed to addLink'), 'EINVALIDPARENT');\n  }\n  if (!options.cid) {\n    throw errCode__default[\"default\"](new Error('No child cid passed to addLink'), 'EINVALIDCHILDCID');\n  }\n  if (!options.name) {\n    throw errCode__default[\"default\"](new Error('No child name passed to addLink'), 'EINVALIDCHILDNAME');\n  }\n  if (!options.size && options.size !== 0) {\n    throw errCode__default[\"default\"](new Error('No child size passed to addLink'), 'EINVALIDCHILDSIZE');\n  }\n  if (!parent.Data) {\n    throw errCode__default[\"default\"](new Error('Parent node with no data passed to addLink'), 'ERR_INVALID_PARENT');\n  }\n  const meta = ipfsUnixfs.UnixFS.unmarshal(parent.Data);\n  if (meta.type === 'hamt-sharded-directory') {\n    log('Adding link to sharded directory');\n    return addToShardedDirectory(context, {\n      ...options,\n      parent\n    });\n  }\n  if (parent.Links.length >= options.shardSplitThreshold) {\n    log('Converting directory to sharded directory');\n    return convertToShardedDirectory(context, {\n      ...options,\n      parent,\n      mtime: meta.mtime,\n      mode: meta.mode\n    });\n  }\n  log(`Adding ${ options.name } (${ options.cid }) to regular directory`);\n  return addToDirectory(context, {\n    ...options,\n    parent\n  });\n}\nconst convertToShardedDirectory = async (context, options) => {\n  const result = await hamtUtils.createShard(context, options.parent.Links.map(link => ({\n    name: link.Name || '',\n    size: link.Tsize || 0,\n    cid: link.Hash\n  })).concat({\n    name: options.name,\n    size: options.size,\n    cid: options.cid\n  }), options);\n  log(`Converted directory to sharded directory ${ result.cid }`);\n  return result;\n};\nconst addToDirectory = async (context, options) => {\n  const parentLinks = options.parent.Links.filter(link => {\n    return link.Name !== options.name;\n  });\n  parentLinks.push({\n    Name: options.name,\n    Tsize: options.size,\n    Hash: options.cid\n  });\n  if (!options.parent.Data) {\n    throw errCode__default[\"default\"](new Error('Parent node with no data passed to addToDirectory'), 'ERR_INVALID_PARENT');\n  }\n  const node = ipfsUnixfs.UnixFS.unmarshal(options.parent.Data);\n  let data;\n  if (node.mtime) {\n    const ms = Date.now();\n    const secs = Math.floor(ms / 1000);\n    node.mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n    data = node.marshal();\n  } else {\n    data = options.parent.Data;\n  }\n  options.parent = dagPB__namespace.prepare({\n    Data: data,\n    Links: parentLinks\n  });\n  const hasher = await context.hashers.getHasher(options.hashAlg);\n  const buf = dagPB__namespace.encode(options.parent);\n  const hash = await hasher.digest(buf);\n  const cid$1 = cid.CID.create(options.cidVersion, dagPB__namespace.code, hash);\n  if (options.flush) {\n    await context.repo.blocks.put(cid$1, buf);\n  }\n  return {\n    node: options.parent,\n    cid: cid$1,\n    size: buf.length\n  };\n};\nconst addToShardedDirectory = async (context, options) => {\n  const {shard, path} = await addFileToShardedDirectory(context, options);\n  const result = await last__default[\"default\"](shard.flush(context.repo.blocks));\n  if (!result) {\n    throw new Error('No result from flushing shard');\n  }\n  const block = await context.repo.blocks.get(result.cid);\n  const node = dagPB__namespace.decode(block);\n  const parentLinks = options.parent.Links.filter(link => {\n    return (link.Name || '').substring(0, 2) !== path[0].prefix;\n  });\n  const newLink = node.Links.find(link => (link.Name || '').substring(0, 2) === path[0].prefix);\n  if (!newLink) {\n    throw new Error(`No link found with prefix ${ path[0].prefix }`);\n  }\n  parentLinks.push(newLink);\n  return hamtUtils.updateHamtDirectory(context, parentLinks, path[0].bucket, options);\n};\nconst addFileToShardedDirectory = async (context, options) => {\n  const file = {\n    name: options.name,\n    cid: options.cid,\n    size: options.size\n  };\n  if (!options.parent.Data) {\n    throw errCode__default[\"default\"](new Error('Parent node with no data passed to addFileToShardedDirectory'), 'ERR_INVALID_PARENT');\n  }\n  const rootBucket = await hamtUtils.recreateInitialHamtLevel(options.parent.Links);\n  const node = ipfsUnixfs.UnixFS.unmarshal(options.parent.Data);\n  const shard = new dirSharded.DirSharded({\n    root: true,\n    dir: true,\n    parent: undefined,\n    parentKey: undefined,\n    path: '',\n    dirty: true,\n    flat: false,\n    mode: node.mode\n  }, options);\n  shard._bucket = rootBucket;\n  if (node.mtime) {\n    shard.mtime = { secs: Math.round(Date.now() / 1000) };\n  }\n  const position = await rootBucket._findNewBucketAndPos(file.name);\n  const path = toBucketPath(position);\n  path[0].node = options.parent;\n  let index = 0;\n  while (index < path.length) {\n    const segment = path[index];\n    index++;\n    const node = segment.node;\n    if (!node) {\n      throw new Error('Segment had no node');\n    }\n    const link = node.Links.find(link => (link.Name || '').substring(0, 2) === segment.prefix);\n    if (!link) {\n      log(`Link ${ segment.prefix }${ file.name } will be added`);\n      index = path.length;\n      break;\n    }\n    if (link.Name === `${ segment.prefix }${ file.name }`) {\n      log(`Link ${ segment.prefix }${ file.name } will be replaced`);\n      index = path.length;\n      break;\n    }\n    if ((link.Name || '').length > 2) {\n      log(`Link ${ link.Name } ${ link.Hash } will be replaced with a subshard`);\n      index = path.length;\n      break;\n    }\n    log(`Found subshard ${ segment.prefix }`);\n    const block = await context.repo.blocks.get(link.Hash);\n    const subShard = dagPB__namespace.decode(block);\n    if (!path[index]) {\n      log(`Loaded new subshard ${ segment.prefix }`);\n      await hamtUtils.recreateHamtLevel(context, subShard.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16));\n      const position = await rootBucket._findNewBucketAndPos(file.name);\n      path.push({\n        bucket: position.bucket,\n        prefix: hamtUtils.toPrefix(position.pos),\n        node: subShard\n      });\n      break;\n    }\n    const nextSegment = path[index];\n    await hamtUtils.addLinksToHamtBucket(context, subShard.Links, nextSegment.bucket, rootBucket);\n    nextSegment.node = subShard;\n  }\n  await shard._bucket.put(file.name, {\n    size: file.size,\n    cid: file.cid\n  });\n  return {\n    shard,\n    path\n  };\n};\nconst toBucketPath = position => {\n  const path = [{\n      bucket: position.bucket,\n      prefix: hamtUtils.toPrefix(position.pos)\n    }];\n  let bucket = position.bucket._parent;\n  let positionInBucket = position.bucket._posAtParent;\n  while (bucket) {\n    path.push({\n      bucket,\n      prefix: hamtUtils.toPrefix(positionInBucket)\n    });\n    positionInBucket = bucket._posAtParent;\n    bucket = bucket._parent;\n  }\n  path.reverse();\n  return path;\n};\n\nexports.addLink = addLink;\n"},"lineCount":264}},"error":null,"hash":"c4f1c255b4ba897d6dcb277a9fe0376f","cacheData":{"env":{}}}