{"id":"../node_modules/noble-ed25519/index.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\noble-ed25519\\package.json","includedInParent":true,"mtime":1638722712467}],"generated":{"js":"\"use strict\";\n/*! noble-ed25519 - MIT License (c) Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.verify = exports.sign = exports.getPublicKey = exports.SignResult = exports.Signature = exports.Point = exports.ExtendedPoint = exports.CURVE = void 0;\nconst CURVE = {\n    a: -1n,\n    d: 37095705934669439343138083508754565189542113879843219016388785533085940283555n,\n    P: 2n ** 255n - 19n,\n    n: 2n ** 252n + 27742317777372353535851937790883648493n,\n    h: 8n,\n    Gx: 15112221349535400772501151409588531511454012693041857206046113283949847762202n,\n    Gy: 46316835694926478169428394003475163141307993866256225615783033603165251855960n,\n};\nexports.CURVE = CURVE;\nconst B32 = 32;\nconst SQRT_M1 = 19681161376707505956807079304988542015446066515923890162744021073123829784752n;\nconst SQRT_AD_MINUS_ONE = 25063068953384623474111414158702152701244531502492656460079210482610430750235n;\nconst INVSQRT_A_MINUS_D = 54469307008909316920995813868745141605393597292927456921205312896311721017578n;\nconst ONE_MINUS_D_SQ = 1159843021668779879193775521855586647937357759715417654439879720876111806838n;\nconst D_MINUS_ONE_SQ = 40440834346308536858101042469323190826248399146238708352240133220865137265952n;\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, 1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    static fromRistrettoHash(hash) {\n        const r1 = bytes255ToNumberLE(hash.slice(0, B32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hash.slice(B32, B32 * 2));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return R1.add(R2);\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + 1n) * ONE_MINUS_D_SQ);\n        let c = -1n;\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - 1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(1n - s2);\n        const W3 = mod(1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static fromRistrettoBytes(bytes) {\n        const { a, d } = CURVE;\n        const emsg = 'ExtendedPoint.fromRistrettoBytes: Cannot convert bytes to Ristretto Point';\n        const s = bytes255ToNumberLE(bytes);\n        if (!equalBytes(numberToBytesPadded(s, B32), bytes) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(1n + a * s2);\n        const u2 = mod(1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === 0n)\n            throw new Error(emsg);\n        return new ExtendedPoint(x, y, 1n, t);\n    }\n    toRistrettoBytes() {\n        let { x, y, z, t } = this;\n        const u1 = mod((z + y) * (z - y));\n        const u2 = mod(x * y);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2 ** 2n));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            [x, y] = [mod(y * SQRT_M1), mod(x * SQRT_M1)];\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberToBytesPadded(s, B32);\n    }\n    equals(other) {\n        const a = this;\n        const b = other;\n        const [T1, T2, Z1, Z2] = [a.t, b.t, a.z, b.z];\n        return mod(T1 * Z2) === mod(T2 * Z1);\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const { a } = CURVE;\n        const A = mod(X1 ** 2n);\n        const B = mod(Y1 ** 2n);\n        const C = mod(2n * Z1 ** 2n);\n        const D = mod(a * A);\n        const E = mod((X1 + Y1) ** 2n - A - B);\n        const G = mod(D + B);\n        const F = mod(G - C);\n        const H = mod(D - B);\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const T1 = this.t;\n        const X2 = other.x;\n        const Y2 = other.y;\n        const Z2 = other.z;\n        const T2 = other.t;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === 0n) {\n            return this.double();\n        }\n        const C = mod(Z1 * 2n * T2);\n        const D = mod(T1 * 2n * Z2);\n        const E = mod(D + C);\n        const G = mod(B + A);\n        const H = mod(D - C);\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        if (!isValidScalar(scalar))\n            throw new TypeError('Point#multiply: expected number or bigint');\n        let n = mod(BigInt(scalar), CURVE.n);\n        if (n === 1n)\n            return this;\n        let p = ExtendedPoint.ZERO;\n        let d = this;\n        while (n > 0n) {\n            if (n & 1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= 1n;\n        }\n        return p;\n    }\n    precomputeWindow(W) {\n        const windows = 256 / W + 1;\n        let points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 256 / W + 1;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += 1n;\n            }\n            if (wbits === 0) {\n                f = f.add(window % 2 ? precomputes[offset].negate() : precomputes[offset]);\n            }\n            else {\n                const cached = precomputes[offset + Math.abs(wbits) - 1];\n                p = p.add(wbits < 0 ? cached.negate() : cached);\n            }\n        }\n        return [p, f];\n    }\n    multiply(scalar, affinePoint) {\n        if (!isValidScalar(scalar))\n            throw new TypeError('Point#multiply: expected number or bigint');\n        const n = mod(BigInt(scalar), CURVE.n);\n        return ExtendedPoint.normalizeZ(this.wNAF(n, affinePoint))[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const x = mod(this.x * invZ);\n        const y = mod(this.y * invZ);\n        return new Point(x, y);\n    }\n}\nexports.ExtendedPoint = ExtendedPoint;\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, 1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(0n, 1n, 1n, 0n);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hash) {\n        const { d, P } = CURVE;\n        const bytes = hash instanceof Uint8Array ? hash : hexToBytes(hash);\n        if (bytes.length !== 32)\n            throw new Error('Point.fromHex: expected 32 bytes');\n        const last = bytes[31];\n        const normedLast = last & ~0x80;\n        const isLastByteOdd = (last & 0x80) !== 0;\n        const normed = Uint8Array.from(Array.from(bytes.slice(0, 31)).concat(normedLast));\n        const y = bytesToNumberLE(normed);\n        if (y >= P)\n            throw new Error('Point.fromHex expects hex <= Fp');\n        const y2 = mod(y * y);\n        const u = mod(y2 - 1n);\n        const v = mod(d * y2 + 1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & 1n) === 1n;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        const privBytes = await exports.utils.sha512(normalizePrivateKey(privateKey));\n        return Point.BASE.multiply(encodePrivate(privBytes));\n    }\n    toRawBytes() {\n        const hex = numberToHex(this.y);\n        const u8 = new Uint8Array(B32);\n        for (let i = hex.length - 2, j = 0; j < B32 && i >= 0; i -= 2, j++) {\n            u8[j] = Number.parseInt(hex[i] + hex[i + 1], 16);\n        }\n        const mask = this.x & 1n ? 0x80 : 0;\n        u8[B32 - 1] |= mask;\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        return mod((1n + this.y) * invert(1n - this.y));\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(0n, 1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex);\n        const r = Point.fromHex(hex.slice(0, 32));\n        const s = bytesToNumberLE(hex.slice(32));\n        if (!isWithinCurveOrder(s))\n            throw new Error('Signature.fromHex expects s <= CURVE.n');\n        return new Signature(r, s);\n    }\n    toRawBytes() {\n        const numberBytes = hexToBytes(numberToHex(this.s)).reverse();\n        const sBytes = new Uint8Array(B32);\n        sBytes.set(numberBytes);\n        const res = new Uint8Array(B32 * 2);\n        res.set(this.r.toRawBytes());\n        res.set(sBytes, 32);\n        return res;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexports.Signature = Signature;\nexports.SignResult = Signature;\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction bytesToHex(uint8a) {\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += uint8a[i].toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = Number.parseInt(hex.slice(j, j + 2), 16);\n    }\n    return array;\n}\nfunction numberToHex(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction numberToBytesPadded(num, length = B32) {\n    const hex = numberToHex(num).padStart(length * 2, '0');\n    return hexToBytes(hex).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & 1n) === 1n;\n}\nfunction isValidScalar(num) {\n    if (typeof num === 'bigint' && num > 0n)\n        return true;\n    if (typeof num === 'number' && num > 0 && Number.isSafeInteger(num))\n        return true;\n    return false;\n}\nfunction bytesToNumberLE(uint8a) {\n    let value = 0n;\n    for (let i = 0; i < uint8a.length; i++) {\n        value += BigInt(uint8a[i]) << (8n * BigInt(i));\n    }\n    return value;\n}\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & (2n ** 255n - 1n));\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= 0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === 0n || modulo <= 0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let [x, y, u, v] = [0n, 1n, 1n, 0n];\n    while (a !== 0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        [b, a] = [a, r];\n        [x, y] = [u, v];\n        [u, v] = [m, n];\n    }\n    const gcd = b;\n    if (gcd !== 1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, n = CURVE.P) {\n    const len = nums.length;\n    const scratch = new Array(len);\n    let acc = 1n;\n    for (let i = 0; i < len; i++) {\n        if (nums[i] === 0n)\n            continue;\n        scratch[i] = acc;\n        acc = mod(acc * nums[i], n);\n    }\n    acc = invert(acc, n);\n    for (let i = len - 1; i >= 0; i--) {\n        if (nums[i] === 0n)\n            continue;\n        let tmp = mod(acc * nums[i], n);\n        nums[i] = mod(acc * scratch[i], n);\n        acc = tmp;\n    }\n    return nums;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > 0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, 2n) * b2) % P;\n    const b5 = (pow2(b4, 1n) * x) % P;\n    const b10 = (pow2(b5, 5n) * b5) % P;\n    const b20 = (pow2(b10, 10n) * b10) % P;\n    const b40 = (pow2(b20, 20n) * b20) % P;\n    const b80 = (pow2(b40, 40n) * b40) % P;\n    const b160 = (pow2(b80, 80n) * b80) % P;\n    const b240 = (pow2(b160, 80n) * b80) % P;\n    const b250 = (pow2(b240, 10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, 2n) * x) % P;\n    return pow_p_5_8;\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    let x = mod(u * v3 * pow_2_252_3(u * v7));\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(1n, number);\n}\nasync function sha512ToNumberLE(...args) {\n    const messageArray = concatBytes(...args);\n    const hash = await exports.utils.sha512(messageArray);\n    const value = bytesToNumberLE(hash);\n    return mod(value, CURVE.n);\n}\nfunction keyPrefix(privateBytes) {\n    return privateBytes.slice(B32);\n}\nfunction encodePrivate(privateBytes) {\n    const last = B32 - 1;\n    const head = privateBytes.slice(0, B32);\n    head[0] &= 248;\n    head[last] &= 127;\n    head[last] |= 64;\n    return mod(bytesToNumberLE(head), CURVE.n);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hash) {\n    return hash instanceof Uint8Array ? hash : hexToBytes(hash);\n}\nfunction isWithinCurveOrder(num) {\n    return 0 < num && num < CURVE.n;\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint' || (typeof key === 'number' && Number.isSafeInteger(key))) {\n        num = BigInt(key);\n        if (num < 0n || num > 2n ** 256n)\n            throw new Error('Expected 32 bytes of private key');\n        key = num.toString(16).padStart(B32 * 2, '0');\n    }\n    if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        return hexToBytes(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        return key;\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n}\nasync function getPublicKey(privateKey) {\n    const key = await Point.fromPrivateKey(privateKey);\n    return typeof privateKey === 'string' ? key.toHex() : key.toRawBytes();\n}\nexports.getPublicKey = getPublicKey;\nasync function sign(hash, privateKey) {\n    const privBytes = await exports.utils.sha512(normalizePrivateKey(privateKey));\n    const p = encodePrivate(privBytes);\n    const P = Point.BASE.multiply(p);\n    const msg = ensureBytes(hash);\n    const r = await sha512ToNumberLE(keyPrefix(privBytes), msg);\n    const R = Point.BASE.multiply(r);\n    const h = await sha512ToNumberLE(R.toRawBytes(), P.toRawBytes(), msg);\n    const S = mod(r + h * p, CURVE.n);\n    const sig = new Signature(R, S);\n    return typeof hash === 'string' ? sig.toHex() : sig.toRawBytes();\n}\nexports.sign = sign;\nasync function verify(signature, hash, publicKey) {\n    hash = ensureBytes(hash);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey);\n    if (!(signature instanceof Signature))\n        signature = Signature.fromHex(signature);\n    const hs = await sha512ToNumberLE(signature.r.toRawBytes(), publicKey.toRawBytes(), hash);\n    const Ph = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(hs);\n    const Gs = ExtendedPoint.BASE.multiply(signature.s);\n    const RPh = ExtendedPoint.fromAffine(signature.r).add(Ph);\n    return RPh.subtract(Gs).multiplyUnsafe(8n).equals(ExtendedPoint.ZERO);\n}\nexports.verify = verify;\nPoint.BASE._setWindowSize(8);\nconst crypto = (() => {\n    const webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire('crypto') : undefined,\n        web: webCrypto,\n    };\n})();\nexports.utils = {\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        let i = 1024;\n        while (i--) {\n            const b32 = exports.utils.randomBytes(32);\n            const num = bytesToNumberLE(b32);\n            if (num > 1n && num < CURVE.n)\n                return b32;\n        }\n        throw new Error('Valid private key was not found in 1024 iterations. PRNG is broken');\n    },\n    sha512: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(1n);\n        return cached;\n    },\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/noble-ed25519/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/noble-ed25519/index.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}}],"sources":{"../node_modules/noble-ed25519/index.js":"\"use strict\";\n/*! noble-ed25519 - MIT License (c) Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.verify = exports.sign = exports.getPublicKey = exports.SignResult = exports.Signature = exports.Point = exports.ExtendedPoint = exports.CURVE = void 0;\nconst CURVE = {\n    a: -1n,\n    d: 37095705934669439343138083508754565189542113879843219016388785533085940283555n,\n    P: 2n ** 255n - 19n,\n    n: 2n ** 252n + 27742317777372353535851937790883648493n,\n    h: 8n,\n    Gx: 15112221349535400772501151409588531511454012693041857206046113283949847762202n,\n    Gy: 46316835694926478169428394003475163141307993866256225615783033603165251855960n,\n};\nexports.CURVE = CURVE;\nconst B32 = 32;\nconst SQRT_M1 = 19681161376707505956807079304988542015446066515923890162744021073123829784752n;\nconst SQRT_AD_MINUS_ONE = 25063068953384623474111414158702152701244531502492656460079210482610430750235n;\nconst INVSQRT_A_MINUS_D = 54469307008909316920995813868745141605393597292927456921205312896311721017578n;\nconst ONE_MINUS_D_SQ = 1159843021668779879193775521855586647937357759715417654439879720876111806838n;\nconst D_MINUS_ONE_SQ = 40440834346308536858101042469323190826248399146238708352240133220865137265952n;\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, 1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    static fromRistrettoHash(hash) {\n        const r1 = bytes255ToNumberLE(hash.slice(0, B32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hash.slice(B32, B32 * 2));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return R1.add(R2);\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + 1n) * ONE_MINUS_D_SQ);\n        let c = -1n;\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - 1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(1n - s2);\n        const W3 = mod(1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static fromRistrettoBytes(bytes) {\n        const { a, d } = CURVE;\n        const emsg = 'ExtendedPoint.fromRistrettoBytes: Cannot convert bytes to Ristretto Point';\n        const s = bytes255ToNumberLE(bytes);\n        if (!equalBytes(numberToBytesPadded(s, B32), bytes) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(1n + a * s2);\n        const u2 = mod(1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === 0n)\n            throw new Error(emsg);\n        return new ExtendedPoint(x, y, 1n, t);\n    }\n    toRistrettoBytes() {\n        let { x, y, z, t } = this;\n        const u1 = mod((z + y) * (z - y));\n        const u2 = mod(x * y);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2 ** 2n));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            [x, y] = [mod(y * SQRT_M1), mod(x * SQRT_M1)];\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberToBytesPadded(s, B32);\n    }\n    equals(other) {\n        const a = this;\n        const b = other;\n        const [T1, T2, Z1, Z2] = [a.t, b.t, a.z, b.z];\n        return mod(T1 * Z2) === mod(T2 * Z1);\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const { a } = CURVE;\n        const A = mod(X1 ** 2n);\n        const B = mod(Y1 ** 2n);\n        const C = mod(2n * Z1 ** 2n);\n        const D = mod(a * A);\n        const E = mod((X1 + Y1) ** 2n - A - B);\n        const G = mod(D + B);\n        const F = mod(G - C);\n        const H = mod(D - B);\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const T1 = this.t;\n        const X2 = other.x;\n        const Y2 = other.y;\n        const Z2 = other.z;\n        const T2 = other.t;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === 0n) {\n            return this.double();\n        }\n        const C = mod(Z1 * 2n * T2);\n        const D = mod(T1 * 2n * Z2);\n        const E = mod(D + C);\n        const G = mod(B + A);\n        const H = mod(D - C);\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        if (!isValidScalar(scalar))\n            throw new TypeError('Point#multiply: expected number or bigint');\n        let n = mod(BigInt(scalar), CURVE.n);\n        if (n === 1n)\n            return this;\n        let p = ExtendedPoint.ZERO;\n        let d = this;\n        while (n > 0n) {\n            if (n & 1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= 1n;\n        }\n        return p;\n    }\n    precomputeWindow(W) {\n        const windows = 256 / W + 1;\n        let points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 256 / W + 1;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += 1n;\n            }\n            if (wbits === 0) {\n                f = f.add(window % 2 ? precomputes[offset].negate() : precomputes[offset]);\n            }\n            else {\n                const cached = precomputes[offset + Math.abs(wbits) - 1];\n                p = p.add(wbits < 0 ? cached.negate() : cached);\n            }\n        }\n        return [p, f];\n    }\n    multiply(scalar, affinePoint) {\n        if (!isValidScalar(scalar))\n            throw new TypeError('Point#multiply: expected number or bigint');\n        const n = mod(BigInt(scalar), CURVE.n);\n        return ExtendedPoint.normalizeZ(this.wNAF(n, affinePoint))[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const x = mod(this.x * invZ);\n        const y = mod(this.y * invZ);\n        return new Point(x, y);\n    }\n}\nexports.ExtendedPoint = ExtendedPoint;\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, 1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(0n, 1n, 1n, 0n);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hash) {\n        const { d, P } = CURVE;\n        const bytes = hash instanceof Uint8Array ? hash : hexToBytes(hash);\n        if (bytes.length !== 32)\n            throw new Error('Point.fromHex: expected 32 bytes');\n        const last = bytes[31];\n        const normedLast = last & ~0x80;\n        const isLastByteOdd = (last & 0x80) !== 0;\n        const normed = Uint8Array.from(Array.from(bytes.slice(0, 31)).concat(normedLast));\n        const y = bytesToNumberLE(normed);\n        if (y >= P)\n            throw new Error('Point.fromHex expects hex <= Fp');\n        const y2 = mod(y * y);\n        const u = mod(y2 - 1n);\n        const v = mod(d * y2 + 1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & 1n) === 1n;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        const privBytes = await exports.utils.sha512(normalizePrivateKey(privateKey));\n        return Point.BASE.multiply(encodePrivate(privBytes));\n    }\n    toRawBytes() {\n        const hex = numberToHex(this.y);\n        const u8 = new Uint8Array(B32);\n        for (let i = hex.length - 2, j = 0; j < B32 && i >= 0; i -= 2, j++) {\n            u8[j] = Number.parseInt(hex[i] + hex[i + 1], 16);\n        }\n        const mask = this.x & 1n ? 0x80 : 0;\n        u8[B32 - 1] |= mask;\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        return mod((1n + this.y) * invert(1n - this.y));\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(0n, 1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex);\n        const r = Point.fromHex(hex.slice(0, 32));\n        const s = bytesToNumberLE(hex.slice(32));\n        if (!isWithinCurveOrder(s))\n            throw new Error('Signature.fromHex expects s <= CURVE.n');\n        return new Signature(r, s);\n    }\n    toRawBytes() {\n        const numberBytes = hexToBytes(numberToHex(this.s)).reverse();\n        const sBytes = new Uint8Array(B32);\n        sBytes.set(numberBytes);\n        const res = new Uint8Array(B32 * 2);\n        res.set(this.r.toRawBytes());\n        res.set(sBytes, 32);\n        return res;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexports.Signature = Signature;\nexports.SignResult = Signature;\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction bytesToHex(uint8a) {\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += uint8a[i].toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = Number.parseInt(hex.slice(j, j + 2), 16);\n    }\n    return array;\n}\nfunction numberToHex(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction numberToBytesPadded(num, length = B32) {\n    const hex = numberToHex(num).padStart(length * 2, '0');\n    return hexToBytes(hex).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & 1n) === 1n;\n}\nfunction isValidScalar(num) {\n    if (typeof num === 'bigint' && num > 0n)\n        return true;\n    if (typeof num === 'number' && num > 0 && Number.isSafeInteger(num))\n        return true;\n    return false;\n}\nfunction bytesToNumberLE(uint8a) {\n    let value = 0n;\n    for (let i = 0; i < uint8a.length; i++) {\n        value += BigInt(uint8a[i]) << (8n * BigInt(i));\n    }\n    return value;\n}\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & (2n ** 255n - 1n));\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= 0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === 0n || modulo <= 0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let [x, y, u, v] = [0n, 1n, 1n, 0n];\n    while (a !== 0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        [b, a] = [a, r];\n        [x, y] = [u, v];\n        [u, v] = [m, n];\n    }\n    const gcd = b;\n    if (gcd !== 1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, n = CURVE.P) {\n    const len = nums.length;\n    const scratch = new Array(len);\n    let acc = 1n;\n    for (let i = 0; i < len; i++) {\n        if (nums[i] === 0n)\n            continue;\n        scratch[i] = acc;\n        acc = mod(acc * nums[i], n);\n    }\n    acc = invert(acc, n);\n    for (let i = len - 1; i >= 0; i--) {\n        if (nums[i] === 0n)\n            continue;\n        let tmp = mod(acc * nums[i], n);\n        nums[i] = mod(acc * scratch[i], n);\n        acc = tmp;\n    }\n    return nums;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > 0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, 2n) * b2) % P;\n    const b5 = (pow2(b4, 1n) * x) % P;\n    const b10 = (pow2(b5, 5n) * b5) % P;\n    const b20 = (pow2(b10, 10n) * b10) % P;\n    const b40 = (pow2(b20, 20n) * b20) % P;\n    const b80 = (pow2(b40, 40n) * b40) % P;\n    const b160 = (pow2(b80, 80n) * b80) % P;\n    const b240 = (pow2(b160, 80n) * b80) % P;\n    const b250 = (pow2(b240, 10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, 2n) * x) % P;\n    return pow_p_5_8;\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    let x = mod(u * v3 * pow_2_252_3(u * v7));\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(1n, number);\n}\nasync function sha512ToNumberLE(...args) {\n    const messageArray = concatBytes(...args);\n    const hash = await exports.utils.sha512(messageArray);\n    const value = bytesToNumberLE(hash);\n    return mod(value, CURVE.n);\n}\nfunction keyPrefix(privateBytes) {\n    return privateBytes.slice(B32);\n}\nfunction encodePrivate(privateBytes) {\n    const last = B32 - 1;\n    const head = privateBytes.slice(0, B32);\n    head[0] &= 248;\n    head[last] &= 127;\n    head[last] |= 64;\n    return mod(bytesToNumberLE(head), CURVE.n);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hash) {\n    return hash instanceof Uint8Array ? hash : hexToBytes(hash);\n}\nfunction isWithinCurveOrder(num) {\n    return 0 < num && num < CURVE.n;\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint' || (typeof key === 'number' && Number.isSafeInteger(key))) {\n        num = BigInt(key);\n        if (num < 0n || num > 2n ** 256n)\n            throw new Error('Expected 32 bytes of private key');\n        key = num.toString(16).padStart(B32 * 2, '0');\n    }\n    if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        return hexToBytes(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        return key;\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n}\nasync function getPublicKey(privateKey) {\n    const key = await Point.fromPrivateKey(privateKey);\n    return typeof privateKey === 'string' ? key.toHex() : key.toRawBytes();\n}\nexports.getPublicKey = getPublicKey;\nasync function sign(hash, privateKey) {\n    const privBytes = await exports.utils.sha512(normalizePrivateKey(privateKey));\n    const p = encodePrivate(privBytes);\n    const P = Point.BASE.multiply(p);\n    const msg = ensureBytes(hash);\n    const r = await sha512ToNumberLE(keyPrefix(privBytes), msg);\n    const R = Point.BASE.multiply(r);\n    const h = await sha512ToNumberLE(R.toRawBytes(), P.toRawBytes(), msg);\n    const S = mod(r + h * p, CURVE.n);\n    const sig = new Signature(R, S);\n    return typeof hash === 'string' ? sig.toHex() : sig.toRawBytes();\n}\nexports.sign = sign;\nasync function verify(signature, hash, publicKey) {\n    hash = ensureBytes(hash);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey);\n    if (!(signature instanceof Signature))\n        signature = Signature.fromHex(signature);\n    const hs = await sha512ToNumberLE(signature.r.toRawBytes(), publicKey.toRawBytes(), hash);\n    const Ph = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(hs);\n    const Gs = ExtendedPoint.BASE.multiply(signature.s);\n    const RPh = ExtendedPoint.fromAffine(signature.r).add(Ph);\n    return RPh.subtract(Gs).multiplyUnsafe(8n).equals(ExtendedPoint.ZERO);\n}\nexports.verify = verify;\nPoint.BASE._setWindowSize(8);\nconst crypto = (() => {\n    const webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire('crypto') : undefined,\n        web: webCrypto,\n    };\n})();\nexports.utils = {\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        let i = 1024;\n        while (i--) {\n            const b32 = exports.utils.randomBytes(32);\n            const num = bytesToNumberLE(b32);\n            if (num > 1n && num < CURVE.n)\n                return b32;\n        }\n        throw new Error('Valid private key was not found in 1024 iterations. PRNG is broken');\n    },\n    sha512: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(1n);\n        return cached;\n    },\n};\n"},"lineCount":665}},"error":null,"hash":"4d83bba3709938878aee1452203b4874","cacheData":{"env":{}}}