{"id":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\package.json","includedInParent":true,"mtime":1638722720608},{"name":"debug","loc":{"line":5,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\utils\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"},{"name":"uint8arrays/equals","loc":{"line":6,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\utils\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\equals.js"},{"name":"../message/entry.js","loc":{"line":7,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\utils\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-bitswap\\cjs\\src\\message\\entry.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar equals = require('uint8arrays/equals');\nvar entry = require('../message/entry.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst logger = (id, subsystem) => {\n  const name = ['bitswap'];\n  if (subsystem) {\n    name.push(subsystem);\n  }\n  if (id) {\n    name.push(`${ id.toB58String().slice(0, 8) }`);\n  }\n  return Object.assign(debug__default[\"default\"](name.join(':')), { error: debug__default[\"default\"](name.concat(['error']).join(':')) });\n};\nconst includesWith = (pred, x, list) => {\n  let idx = 0;\n  const len = list.length;\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\nconst uniqWith = (pred, list) => {\n  let idx = 0;\n  const len = list.length;\n  const result = [];\n  let item;\n  while (idx < len) {\n    item = list[idx];\n    if (!includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n};\nconst groupBy = (pred, list) => {\n  return list.reduce((acc, v) => {\n    const k = pred(v);\n    if (acc[k]) {\n      acc[k].push(v);\n    } else {\n      acc[k] = [v];\n    }\n    return acc;\n  }, {});\n};\nconst pullAllWith = (pred, list, values) => {\n  return list.filter(i => {\n    return !includesWith(pred, i, values);\n  });\n};\nconst sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a);\n    const bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n};\nconst isMapEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const [key, valueA] of a) {\n    const valueB = b.get(key);\n    if (valueB === undefined) {\n      return false;\n    }\n    if (valueA instanceof Uint8Array && valueB instanceof Uint8Array && !equals.equals(valueA, valueB)) {\n      return false;\n    }\n    if (valueA instanceof entry.BitswapMessageEntry && valueB instanceof entry.BitswapMessageEntry && !valueA.equals(valueB)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.groupBy = groupBy;\nexports.includesWith = includesWith;\nexports.isMapEqual = isMapEqual;\nexports.logger = logger;\nexports.pullAllWith = pullAllWith;\nexports.sortBy = sortBy;\nexports.uniqWith = uniqWith;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-bitswap/cjs/src/utils/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}}],"sources":{"../node_modules/ipfs-bitswap/cjs/src/utils/index.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar equals = require('uint8arrays/equals');\nvar entry = require('../message/entry.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst logger = (id, subsystem) => {\n  const name = ['bitswap'];\n  if (subsystem) {\n    name.push(subsystem);\n  }\n  if (id) {\n    name.push(`${ id.toB58String().slice(0, 8) }`);\n  }\n  return Object.assign(debug__default[\"default\"](name.join(':')), { error: debug__default[\"default\"](name.concat(['error']).join(':')) });\n};\nconst includesWith = (pred, x, list) => {\n  let idx = 0;\n  const len = list.length;\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\nconst uniqWith = (pred, list) => {\n  let idx = 0;\n  const len = list.length;\n  const result = [];\n  let item;\n  while (idx < len) {\n    item = list[idx];\n    if (!includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n};\nconst groupBy = (pred, list) => {\n  return list.reduce((acc, v) => {\n    const k = pred(v);\n    if (acc[k]) {\n      acc[k].push(v);\n    } else {\n      acc[k] = [v];\n    }\n    return acc;\n  }, {});\n};\nconst pullAllWith = (pred, list, values) => {\n  return list.filter(i => {\n    return !includesWith(pred, i, values);\n  });\n};\nconst sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a);\n    const bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n};\nconst isMapEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const [key, valueA] of a) {\n    const valueB = b.get(key);\n    if (valueB === undefined) {\n      return false;\n    }\n    if (valueA instanceof Uint8Array && valueB instanceof Uint8Array && !equals.equals(valueA, valueB)) {\n      return false;\n    }\n    if (valueA instanceof entry.BitswapMessageEntry && valueB instanceof entry.BitswapMessageEntry && !valueA.equals(valueB)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexports.groupBy = groupBy;\nexports.includesWith = includesWith;\nexports.isMapEqual = isMapEqual;\nexports.logger = logger;\nexports.pullAllWith = pullAllWith;\nexports.sortBy = sortBy;\nexports.uniqWith = uniqWith;\n"},"lineCount":97}},"error":null,"hash":"0df821c117610cefaa0d06d7b05da7b8","cacheData":{"env":{}}}