{"id":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\package.json","includedInParent":true,"mtime":1638722720622},{"name":"interface-datastore/key","loc":{"line":5,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\utils\\blockstore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\interface-datastore\\cjs\\src\\key.js"},{"name":"multiformats","loc":{"line":6,"column":27},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\utils\\blockstore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\index.js"},{"name":"multiformats/codecs/raw","loc":{"line":7,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\utils\\blockstore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\codecs\\raw.js"},{"name":"err-code","loc":{"line":8,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\utils\\blockstore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"multiformats/bases/base32","loc":{"line":9,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\utils\\blockstore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\bases\\base32.js"},{"name":"multiformats/hashes/digest","loc":{"line":10,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\utils\\blockstore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\hashes\\digest.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar key = require('interface-datastore/key');\nvar multiformats = require('multiformats');\nvar raw = require('multiformats/codecs/raw');\nvar errCode = require('err-code');\nvar base32 = require('multiformats/bases/base32');\nvar Digest = require('multiformats/hashes/digest');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\n\nfunction cidToKey(c) {\n  const cid = multiformats.CID.asCID(c);\n  if (cid == null) {\n    throw errCode__default[\"default\"](new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n  const encoded = base32.base32.encode(cid.multihash.bytes);\n  return new key.Key('/' + encoded.slice(1).toUpperCase(), false);\n}\nfunction keyToCid(key) {\n  return multiformats.CID.createV1(raw__namespace.code, keyToMultihash(key));\n}\nfunction keyToMultihash(key) {\n  return Digest__namespace.decode(base32.base32.decode(`b${ key.toString().toLowerCase().substring(1) }`));\n}\n\nexports.cidToKey = cidToKey;\nexports.keyToCid = keyToCid;\nexports.keyToMultihash = keyToMultihash;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../node_modules/ipfs-repo/cjs/src/utils/blockstore.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar key = require('interface-datastore/key');\nvar multiformats = require('multiformats');\nvar raw = require('multiformats/codecs/raw');\nvar errCode = require('err-code');\nvar base32 = require('multiformats/bases/base32');\nvar Digest = require('multiformats/hashes/digest');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\n\nfunction cidToKey(c) {\n  const cid = multiformats.CID.asCID(c);\n  if (cid == null) {\n    throw errCode__default[\"default\"](new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n  const encoded = base32.base32.encode(cid.multihash.bytes);\n  return new key.Key('/' + encoded.slice(1).toUpperCase(), false);\n}\nfunction keyToCid(key) {\n  return multiformats.CID.createV1(raw__namespace.code, keyToMultihash(key));\n}\nfunction keyToMultihash(key) {\n  return Digest__namespace.decode(base32.base32.decode(`b${ key.toString().toLowerCase().substring(1) }`));\n}\n\nexports.cidToKey = cidToKey;\nexports.keyToCid = keyToCid;\nexports.keyToMultihash = keyToMultihash;\n"},"lineCount":54}},"error":null,"hash":"466f902441833c3450cb9daf6081c73a","cacheData":{"env":{}}}