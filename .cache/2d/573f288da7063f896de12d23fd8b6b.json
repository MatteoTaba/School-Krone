{"id":"../node_modules/ipfs-core/cjs/src/components/start.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"../utils/service.js","loc":{"line":5,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\start.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\utils\\service.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar service = require('../utils/service.js');\n\nfunction createStart({network, preload, peerId, keychain, repo, ipns, mfsPreload, print, hashers, options}) {\n  const start = async () => {\n    const {libp2p} = await service.Service.start(network, {\n      peerId,\n      repo,\n      print,\n      hashers,\n      options\n    });\n    await Promise.all([\n      ipns.startOnline({\n        keychain,\n        libp2p,\n        peerId,\n        repo\n      }),\n      preload.start(),\n      mfsPreload.start()\n    ]);\n  };\n  return start;\n}\n\nexports.createStart = createStart;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/start.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/start.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar service = require('../utils/service.js');\n\nfunction createStart({network, preload, peerId, keychain, repo, ipns, mfsPreload, print, hashers, options}) {\n  const start = async () => {\n    const {libp2p} = await service.Service.start(network, {\n      peerId,\n      repo,\n      print,\n      hashers,\n      options\n    });\n    await Promise.all([\n      ipns.startOnline({\n        keychain,\n        libp2p,\n        peerId,\n        repo\n      }),\n      preload.start(),\n      mfsPreload.start()\n    ]);\n  };\n  return start;\n}\n\nexports.createStart = createStart;\n"},"lineCount":31}},"error":null,"hash":"3622080ca2e988101738c53c05cedc40","cacheData":{"env":{}}}