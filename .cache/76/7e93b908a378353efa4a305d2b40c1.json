{"id":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"ipfs-core-utils/pins/normalise-input","loc":{"line":5,"column":29},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\pin\\ls.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-utils\\cjs\\src\\pins\\normalise-input.js"},{"name":"../../utils.js","loc":{"line":6,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\pin\\ls.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\utils.js"},{"name":"ipfs-core-utils/with-timeout-option","loc":{"line":7,"column":32},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\pin\\ls.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-utils\\cjs\\src\\with-timeout-option.js"},{"name":"err-code","loc":{"line":8,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\pin\\ls.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"ipfs-repo/pin-types","loc":{"line":9,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\pin\\ls.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\pin-types.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\nvar utils = require('../../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar errCode = require('err-code');\nvar pinTypes = require('ipfs-repo/pin-types');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction toPin(type, cid, metadata) {\n  const output = {\n    type,\n    cid\n  };\n  if (metadata) {\n    output.metadata = metadata;\n  }\n  return output;\n}\nfunction createLs({repo, codecs}) {\n  async function* ls(options = {}) {\n    let type = pinTypes.PinTypes.all;\n    if (options.type) {\n      type = options.type;\n      if (!Object.keys(pinTypes.PinTypes).includes(type)) {\n        throw errCode__default[\"default\"](new Error('Invalid pin type'), 'ERR_INVALID_PIN_TYPE');\n      }\n    }\n    if (options.paths) {\n      let matched = false;\n      for await (const {path} of normaliseInput.normaliseInput(options.paths)) {\n        const {cid} = await utils.resolvePath(repo, codecs, path);\n        const {reason, pinned, parent, metadata} = await repo.pins.isPinnedWithType(cid, type);\n        if (!pinned) {\n          throw errCode__default[\"default\"](new Error(`path '${ path }' is not pinned`), 'ERR_NOT_PINNED');\n        }\n        switch (reason) {\n        case pinTypes.PinTypes.direct:\n        case pinTypes.PinTypes.recursive:\n          matched = true;\n          yield toPin(reason, cid, metadata);\n          break;\n        default:\n          matched = true;\n          yield toPin(`${ pinTypes.PinTypes.indirect } through ${ parent }`, cid, metadata);\n        }\n      }\n      if (!matched) {\n        throw new Error('No match found');\n      }\n      return;\n    }\n    if (type === pinTypes.PinTypes.recursive || type === pinTypes.PinTypes.all) {\n      for await (const {cid, metadata} of repo.pins.recursiveKeys()) {\n        yield toPin(pinTypes.PinTypes.recursive, cid, metadata);\n      }\n    }\n    if (type === pinTypes.PinTypes.indirect || type === pinTypes.PinTypes.all) {\n      for await (const cid of repo.pins.indirectKeys(options)) {\n        yield toPin(pinTypes.PinTypes.indirect, cid);\n      }\n    }\n    if (type === pinTypes.PinTypes.direct || type === pinTypes.PinTypes.all) {\n      for await (const {cid, metadata} of repo.pins.directKeys()) {\n        yield toPin(pinTypes.PinTypes.direct, cid, metadata);\n      }\n    }\n  }\n  return withTimeoutOption.withTimeoutOption(ls);\n}\n\nexports.createLs = createLs;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/pin/ls.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/pin/ls.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\nvar utils = require('../../utils.js');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar errCode = require('err-code');\nvar pinTypes = require('ipfs-repo/pin-types');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction toPin(type, cid, metadata) {\n  const output = {\n    type,\n    cid\n  };\n  if (metadata) {\n    output.metadata = metadata;\n  }\n  return output;\n}\nfunction createLs({repo, codecs}) {\n  async function* ls(options = {}) {\n    let type = pinTypes.PinTypes.all;\n    if (options.type) {\n      type = options.type;\n      if (!Object.keys(pinTypes.PinTypes).includes(type)) {\n        throw errCode__default[\"default\"](new Error('Invalid pin type'), 'ERR_INVALID_PIN_TYPE');\n      }\n    }\n    if (options.paths) {\n      let matched = false;\n      for await (const {path} of normaliseInput.normaliseInput(options.paths)) {\n        const {cid} = await utils.resolvePath(repo, codecs, path);\n        const {reason, pinned, parent, metadata} = await repo.pins.isPinnedWithType(cid, type);\n        if (!pinned) {\n          throw errCode__default[\"default\"](new Error(`path '${ path }' is not pinned`), 'ERR_NOT_PINNED');\n        }\n        switch (reason) {\n        case pinTypes.PinTypes.direct:\n        case pinTypes.PinTypes.recursive:\n          matched = true;\n          yield toPin(reason, cid, metadata);\n          break;\n        default:\n          matched = true;\n          yield toPin(`${ pinTypes.PinTypes.indirect } through ${ parent }`, cid, metadata);\n        }\n      }\n      if (!matched) {\n        throw new Error('No match found');\n      }\n      return;\n    }\n    if (type === pinTypes.PinTypes.recursive || type === pinTypes.PinTypes.all) {\n      for await (const {cid, metadata} of repo.pins.recursiveKeys()) {\n        yield toPin(pinTypes.PinTypes.recursive, cid, metadata);\n      }\n    }\n    if (type === pinTypes.PinTypes.indirect || type === pinTypes.PinTypes.all) {\n      for await (const cid of repo.pins.indirectKeys(options)) {\n        yield toPin(pinTypes.PinTypes.indirect, cid);\n      }\n    }\n    if (type === pinTypes.PinTypes.direct || type === pinTypes.PinTypes.all) {\n      for await (const {cid, metadata} of repo.pins.directKeys()) {\n        yield toPin(pinTypes.PinTypes.direct, cid, metadata);\n      }\n    }\n  }\n  return withTimeoutOption.withTimeoutOption(ls);\n}\n\nexports.createLs = createLs;\n"},"lineCount":78}},"error":null,"hash":"65d3d57b096f58015388906b78cf4b74","cacheData":{"env":{}}}