{"id":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"datastore-core/tiered","loc":{"line":5,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\config.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\datastore-core\\cjs\\src\\tiered.js"},{"name":"dlv","loc":{"line":6,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\config.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\dlv\\dist\\dlv.umd.js"},{"name":"./pubsub-datastore.js","loc":{"line":7,"column":30},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\config.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\pubsub-datastore.js"},{"name":"./offline-datastore.js","loc":{"line":8,"column":31},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\config.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\offline-datastore.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tiered = require('datastore-core/tiered');\nvar get = require('dlv');\nvar pubsubDatastore = require('./pubsub-datastore.js');\nvar offlineDatastore = require('./offline-datastore.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\n\nfunction createRouting({libp2p, repo, peerId, options}) {\n  const ipnsStores = [];\n  let pubsubDs;\n  if (get__default[\"default\"](options, 'EXPERIMENTAL.ipnsPubsub', false)) {\n    const pubsub = libp2p.pubsub;\n    const localDatastore = repo.datastore;\n    pubsubDs = new pubsubDatastore.IpnsPubsubDatastore(pubsub, localDatastore, peerId);\n    ipnsStores.push(pubsubDs);\n  }\n  if (get__default[\"default\"](options, 'offline') || !get__default[\"default\"](options, 'libp2p.config.dht.enabled', false)) {\n    const offlineDatastore$1 = new offlineDatastore.OfflineDatastore(repo);\n    ipnsStores.push(offlineDatastore$1);\n  } else {\n    ipnsStores.push(libp2p._dht);\n  }\n  return new tiered.TieredDatastore(ipnsStores);\n}\n\nexports.createRouting = createRouting;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/ipns/routing/config.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tiered = require('datastore-core/tiered');\nvar get = require('dlv');\nvar pubsubDatastore = require('./pubsub-datastore.js');\nvar offlineDatastore = require('./offline-datastore.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\n\nfunction createRouting({libp2p, repo, peerId, options}) {\n  const ipnsStores = [];\n  let pubsubDs;\n  if (get__default[\"default\"](options, 'EXPERIMENTAL.ipnsPubsub', false)) {\n    const pubsub = libp2p.pubsub;\n    const localDatastore = repo.datastore;\n    pubsubDs = new pubsubDatastore.IpnsPubsubDatastore(pubsub, localDatastore, peerId);\n    ipnsStores.push(pubsubDs);\n  }\n  if (get__default[\"default\"](options, 'offline') || !get__default[\"default\"](options, 'libp2p.config.dht.enabled', false)) {\n    const offlineDatastore$1 = new offlineDatastore.OfflineDatastore(repo);\n    ipnsStores.push(offlineDatastore$1);\n  } else {\n    ipnsStores.push(libp2p._dht);\n  }\n  return new tiered.TieredDatastore(ipnsStores);\n}\n\nexports.createRouting = createRouting;\n"},"lineCount":33}},"error":null,"hash":"d090862bc0cdc3651d93e1cb79c14749","cacheData":{"env":{}}}