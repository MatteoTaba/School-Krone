{"id":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"dlv","loc":{"line":5,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\dlv\\dist\\dlv.umd.js"},{"name":"merge-options","loc":{"line":6,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\merge-options\\index.js"},{"name":"err-code","loc":{"line":7,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"ipfs-core-config/libp2p-pubsub-routers","loc":{"line":8,"column":34},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-config\\cjs\\src\\libp2p-pubsub-routers.browser.js"},{"name":"libp2p-delegated-peer-routing","loc":{"line":9,"column":34},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-delegated-peer-routing\\src\\index.js"},{"name":"libp2p-delegated-content-routing","loc":{"line":10,"column":37},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-delegated-content-routing\\src\\index.js"},{"name":"ipfs-http-client","loc":{"line":11,"column":29},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-http-client\\cjs\\src\\index.js"},{"name":"multiaddr","loc":{"line":12,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiaddr\\src\\index.js"},{"name":"../version.js","loc":{"line":13,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\version.js"},{"name":"ipfs-core-config/libp2p","loc":{"line":14,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-config\\cjs\\src\\libp2p.browser.js"},{"name":"libp2p-bootstrap","loc":{"line":15,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-bootstrap\\src\\index.js"},{"name":"libp2p","loc":{"line":16,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\libp2p.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p\\src\\index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar get = require('dlv');\nvar mergeOpts = require('merge-options');\nvar errCode = require('err-code');\nvar libp2pPubsubRouters = require('ipfs-core-config/libp2p-pubsub-routers');\nvar DelegatedPeerRouter = require('libp2p-delegated-peer-routing');\nvar DelegatedContentRouter = require('libp2p-delegated-content-routing');\nvar ipfsHttpClient = require('ipfs-http-client');\nvar multiaddr = require('multiaddr');\nvar version = require('../version.js');\nvar libp2p = require('ipfs-core-config/libp2p');\nvar bootstrap = require('libp2p-bootstrap');\nvar Libp2p = require('libp2p');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar DelegatedPeerRouter__default = /*#__PURE__*/_interopDefaultLegacy(DelegatedPeerRouter);\nvar DelegatedContentRouter__default = /*#__PURE__*/_interopDefaultLegacy(DelegatedContentRouter);\nvar bootstrap__default = /*#__PURE__*/_interopDefaultLegacy(bootstrap);\nvar Libp2p__default = /*#__PURE__*/_interopDefaultLegacy(Libp2p);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({ ignoreUndefined: true });\nfunction createLibp2p({options = {}, peerId, multiaddrs = [], repo, keychainConfig = {}, config = {}}) {\n  const {datastore, keys} = repo;\n  const libp2pOptions = getLibp2pOptions({\n    options,\n    config,\n    datastore,\n    keys,\n    keychainConfig,\n    peerId,\n    multiaddrs\n  });\n  if (typeof options.libp2p === 'function') {\n    return options.libp2p({\n      libp2pOptions,\n      options,\n      config,\n      datastore,\n      peerId\n    });\n  }\n  return Libp2p__default[\"default\"].create(libp2pOptions);\n}\nfunction getLibp2pOptions({options, config, datastore, keys, keychainConfig, peerId, multiaddrs}) {\n  const getPubsubRouter = () => {\n    const router = get__default[\"default\"](config, 'Pubsub.Router') || 'gossipsub';\n    if (!libp2pPubsubRouters.routers[router]) {\n      throw errCode__default[\"default\"](new Error(`Router unavailable. Configure libp2p.modules.pubsub to use the ${ router } router.`), 'ERR_NOT_SUPPORTED');\n    }\n    return libp2pPubsubRouters.routers[router];\n  };\n  const libp2pDefaults = {\n    datastore,\n    peerId: peerId,\n    modules: {}\n  };\n  const libp2pOptions = {\n    modules: {\n      pubsub: getPubsubRouter(),\n      contentRouting: [],\n      peerRouting: []\n    },\n    config: {\n      peerDiscovery: {\n        mdns: { enabled: get__default[\"default\"](options, 'config.Discovery.MDNS.Enabled', get__default[\"default\"](config, 'Discovery.MDNS.Enabled', true)) },\n        webRTCStar: { enabled: get__default[\"default\"](options, 'config.Discovery.webRTCStar.Enabled', get__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', true)) },\n        bootstrap: { list: get__default[\"default\"](options, 'config.Bootstrap', get__default[\"default\"](config, 'Bootstrap', [])) }\n      },\n      relay: {\n        enabled: get__default[\"default\"](options, 'relay.enabled', get__default[\"default\"](config, 'relay.enabled', true)),\n        hop: {\n          enabled: get__default[\"default\"](options, 'relay.hop.enabled', get__default[\"default\"](config, 'relay.hop.enabled', false)),\n          active: get__default[\"default\"](options, 'relay.hop.active', get__default[\"default\"](config, 'relay.hop.active', false))\n        }\n      },\n      dht: {\n        enabled: get__default[\"default\"](config, 'Routing.Type', 'none') !== 'none',\n        clientMode: get__default[\"default\"](config, 'Routing.Type', 'dht') !== 'dhtserver',\n        kBucketSize: get__default[\"default\"](options, 'dht.kBucketSize', 20)\n      },\n      pubsub: { enabled: get__default[\"default\"](options, 'config.Pubsub.Enabled', get__default[\"default\"](config, 'Pubsub.Enabled', true)) },\n      nat: { enabled: !get__default[\"default\"](config, 'Swarm.DisableNatPortMap', false) }\n    },\n    addresses: {\n      listen: multiaddrs.map(ma => ma.toString()),\n      announce: get__default[\"default\"](options, 'addresses.announce', get__default[\"default\"](config, 'Addresses.Announce', [])),\n      noAnnounce: get__default[\"default\"](options, 'addresses.noAnnounce', get__default[\"default\"](config, 'Addresses.NoAnnounce', []))\n    },\n    connectionManager: get__default[\"default\"](options, 'connectionManager', {\n      maxConnections: get__default[\"default\"](options, 'config.Swarm.ConnMgr.HighWater', get__default[\"default\"](config, 'Swarm.ConnMgr.HighWater')),\n      minConnections: get__default[\"default\"](options, 'config.Swarm.ConnMgr.LowWater', get__default[\"default\"](config, 'Swarm.ConnMgr.LowWater'))\n    }),\n    keychain: {\n      datastore: keys,\n      ...keychainConfig\n    },\n    host: { agentVersion: `js-ipfs/${ version.ipfsCore }` }\n  };\n  let constructorOptions = get__default[\"default\"](options, 'libp2p', undefined);\n  if (typeof constructorOptions === 'function') {\n    constructorOptions = undefined;\n  }\n  const libp2pConfig = mergeOptions(libp2pDefaults, libp2p.libp2pConfig(), libp2pOptions, constructorOptions);\n  const bootstrapList = get__default[\"default\"](libp2pConfig, 'config.peerDiscovery.bootstrap.list', []);\n  if (bootstrapList.length > 0) {\n    libp2pConfig.modules.peerDiscovery.push(bootstrap__default[\"default\"]);\n  }\n  const delegateHosts = get__default[\"default\"](options, 'config.Addresses.Delegates', get__default[\"default\"](config, 'Addresses.Delegates', []));\n  if (delegateHosts.length > 0) {\n    const delegateString = delegateHosts[Math.floor(Math.random() * delegateHosts.length)];\n    const delegateAddr = new multiaddr.Multiaddr(delegateString).toOptions();\n    const delegateApiOptions = {\n      host: delegateAddr.host,\n      protocol: parseInt(delegateAddr.port) === 443 ? 'https' : 'http',\n      port: delegateAddr.port\n    };\n    const delegateHttpClient = ipfsHttpClient.create(delegateApiOptions);\n    libp2pOptions.modules.contentRouting = libp2pOptions.modules.contentRouting || [];\n    libp2pOptions.modules.contentRouting.push(new DelegatedContentRouter__default[\"default\"](peerId, delegateHttpClient));\n    libp2pOptions.modules.peerRouting = libp2pOptions.modules.peerRouting || [];\n    libp2pOptions.modules.peerRouting.push(new DelegatedPeerRouter__default[\"default\"](delegateHttpClient));\n  }\n  return libp2pConfig;\n}\n\nexports.createLibp2p = createLibp2p;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/libp2p.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/libp2p.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar get = require('dlv');\nvar mergeOpts = require('merge-options');\nvar errCode = require('err-code');\nvar libp2pPubsubRouters = require('ipfs-core-config/libp2p-pubsub-routers');\nvar DelegatedPeerRouter = require('libp2p-delegated-peer-routing');\nvar DelegatedContentRouter = require('libp2p-delegated-content-routing');\nvar ipfsHttpClient = require('ipfs-http-client');\nvar multiaddr = require('multiaddr');\nvar version = require('../version.js');\nvar libp2p = require('ipfs-core-config/libp2p');\nvar bootstrap = require('libp2p-bootstrap');\nvar Libp2p = require('libp2p');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar get__default = /*#__PURE__*/_interopDefaultLegacy(get);\nvar mergeOpts__default = /*#__PURE__*/_interopDefaultLegacy(mergeOpts);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar DelegatedPeerRouter__default = /*#__PURE__*/_interopDefaultLegacy(DelegatedPeerRouter);\nvar DelegatedContentRouter__default = /*#__PURE__*/_interopDefaultLegacy(DelegatedContentRouter);\nvar bootstrap__default = /*#__PURE__*/_interopDefaultLegacy(bootstrap);\nvar Libp2p__default = /*#__PURE__*/_interopDefaultLegacy(Libp2p);\n\nconst mergeOptions = mergeOpts__default[\"default\"].bind({ ignoreUndefined: true });\nfunction createLibp2p({options = {}, peerId, multiaddrs = [], repo, keychainConfig = {}, config = {}}) {\n  const {datastore, keys} = repo;\n  const libp2pOptions = getLibp2pOptions({\n    options,\n    config,\n    datastore,\n    keys,\n    keychainConfig,\n    peerId,\n    multiaddrs\n  });\n  if (typeof options.libp2p === 'function') {\n    return options.libp2p({\n      libp2pOptions,\n      options,\n      config,\n      datastore,\n      peerId\n    });\n  }\n  return Libp2p__default[\"default\"].create(libp2pOptions);\n}\nfunction getLibp2pOptions({options, config, datastore, keys, keychainConfig, peerId, multiaddrs}) {\n  const getPubsubRouter = () => {\n    const router = get__default[\"default\"](config, 'Pubsub.Router') || 'gossipsub';\n    if (!libp2pPubsubRouters.routers[router]) {\n      throw errCode__default[\"default\"](new Error(`Router unavailable. Configure libp2p.modules.pubsub to use the ${ router } router.`), 'ERR_NOT_SUPPORTED');\n    }\n    return libp2pPubsubRouters.routers[router];\n  };\n  const libp2pDefaults = {\n    datastore,\n    peerId: peerId,\n    modules: {}\n  };\n  const libp2pOptions = {\n    modules: {\n      pubsub: getPubsubRouter(),\n      contentRouting: [],\n      peerRouting: []\n    },\n    config: {\n      peerDiscovery: {\n        mdns: { enabled: get__default[\"default\"](options, 'config.Discovery.MDNS.Enabled', get__default[\"default\"](config, 'Discovery.MDNS.Enabled', true)) },\n        webRTCStar: { enabled: get__default[\"default\"](options, 'config.Discovery.webRTCStar.Enabled', get__default[\"default\"](config, 'Discovery.webRTCStar.Enabled', true)) },\n        bootstrap: { list: get__default[\"default\"](options, 'config.Bootstrap', get__default[\"default\"](config, 'Bootstrap', [])) }\n      },\n      relay: {\n        enabled: get__default[\"default\"](options, 'relay.enabled', get__default[\"default\"](config, 'relay.enabled', true)),\n        hop: {\n          enabled: get__default[\"default\"](options, 'relay.hop.enabled', get__default[\"default\"](config, 'relay.hop.enabled', false)),\n          active: get__default[\"default\"](options, 'relay.hop.active', get__default[\"default\"](config, 'relay.hop.active', false))\n        }\n      },\n      dht: {\n        enabled: get__default[\"default\"](config, 'Routing.Type', 'none') !== 'none',\n        clientMode: get__default[\"default\"](config, 'Routing.Type', 'dht') !== 'dhtserver',\n        kBucketSize: get__default[\"default\"](options, 'dht.kBucketSize', 20)\n      },\n      pubsub: { enabled: get__default[\"default\"](options, 'config.Pubsub.Enabled', get__default[\"default\"](config, 'Pubsub.Enabled', true)) },\n      nat: { enabled: !get__default[\"default\"](config, 'Swarm.DisableNatPortMap', false) }\n    },\n    addresses: {\n      listen: multiaddrs.map(ma => ma.toString()),\n      announce: get__default[\"default\"](options, 'addresses.announce', get__default[\"default\"](config, 'Addresses.Announce', [])),\n      noAnnounce: get__default[\"default\"](options, 'addresses.noAnnounce', get__default[\"default\"](config, 'Addresses.NoAnnounce', []))\n    },\n    connectionManager: get__default[\"default\"](options, 'connectionManager', {\n      maxConnections: get__default[\"default\"](options, 'config.Swarm.ConnMgr.HighWater', get__default[\"default\"](config, 'Swarm.ConnMgr.HighWater')),\n      minConnections: get__default[\"default\"](options, 'config.Swarm.ConnMgr.LowWater', get__default[\"default\"](config, 'Swarm.ConnMgr.LowWater'))\n    }),\n    keychain: {\n      datastore: keys,\n      ...keychainConfig\n    },\n    host: { agentVersion: `js-ipfs/${ version.ipfsCore }` }\n  };\n  let constructorOptions = get__default[\"default\"](options, 'libp2p', undefined);\n  if (typeof constructorOptions === 'function') {\n    constructorOptions = undefined;\n  }\n  const libp2pConfig = mergeOptions(libp2pDefaults, libp2p.libp2pConfig(), libp2pOptions, constructorOptions);\n  const bootstrapList = get__default[\"default\"](libp2pConfig, 'config.peerDiscovery.bootstrap.list', []);\n  if (bootstrapList.length > 0) {\n    libp2pConfig.modules.peerDiscovery.push(bootstrap__default[\"default\"]);\n  }\n  const delegateHosts = get__default[\"default\"](options, 'config.Addresses.Delegates', get__default[\"default\"](config, 'Addresses.Delegates', []));\n  if (delegateHosts.length > 0) {\n    const delegateString = delegateHosts[Math.floor(Math.random() * delegateHosts.length)];\n    const delegateAddr = new multiaddr.Multiaddr(delegateString).toOptions();\n    const delegateApiOptions = {\n      host: delegateAddr.host,\n      protocol: parseInt(delegateAddr.port) === 443 ? 'https' : 'http',\n      port: delegateAddr.port\n    };\n    const delegateHttpClient = ipfsHttpClient.create(delegateApiOptions);\n    libp2pOptions.modules.contentRouting = libp2pOptions.modules.contentRouting || [];\n    libp2pOptions.modules.contentRouting.push(new DelegatedContentRouter__default[\"default\"](peerId, delegateHttpClient));\n    libp2pOptions.modules.peerRouting = libp2pOptions.modules.peerRouting || [];\n    libp2pOptions.modules.peerRouting.push(new DelegatedPeerRouter__default[\"default\"](delegateHttpClient));\n  }\n  return libp2pConfig;\n}\n\nexports.createLibp2p = createLibp2p;\n"},"lineCount":134}},"error":null,"hash":"10b4a67ac8322f67f5d24d3a5ad87c96","cacheData":{"env":{}}}