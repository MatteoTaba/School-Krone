{"id":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"interface-datastore/key","loc":{"line":5,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\offline-datastore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\interface-datastore\\cjs\\src\\key.js"},{"name":"libp2p-record","loc":{"line":6,"column":27},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\offline-datastore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\libp2p-record\\src\\index.js"},{"name":"err-code","loc":{"line":7,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\offline-datastore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"debug","loc":{"line":8,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\offline-datastore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"},{"name":"uint8arrays/to-string","loc":{"line":9,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\ipns\\routing\\offline-datastore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\to-string.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar key = require('interface-datastore/key');\nvar libp2pRecord = require('libp2p-record');\nvar errCode = require('err-code');\nvar debug = require('debug');\nvar toString = require('uint8arrays/to-string');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = Object.assign(debug__default[\"default\"]('ipfs:ipns:offline-datastore'), { error: debug__default[\"default\"]('ipfs:ipns:offline-datastore:error') });\nclass OfflineDatastore {\n  constructor(repo) {\n    this._repo = repo;\n    this.stores = [];\n  }\n  async put(key, value) {\n    if (!(key instanceof Uint8Array)) {\n      throw errCode__default[\"default\"](new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY');\n    }\n    if (!(value instanceof Uint8Array)) {\n      throw errCode__default[\"default\"](new Error('Offline datastore value must be a Uint8Array'), 'ERR_INVALID_VALUE');\n    }\n    let routingKey;\n    try {\n      routingKey = this._routingKey(key);\n    } catch (err) {\n      log.error(err);\n      throw errCode__default[\"default\"](new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY');\n    }\n    const record = new libp2pRecord.Record(key, value);\n    return this._repo.datastore.put(routingKey, record.serialize());\n  }\n  async get(key) {\n    if (!(key instanceof Uint8Array)) {\n      throw errCode__default[\"default\"](new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY');\n    }\n    let routingKey;\n    try {\n      routingKey = this._routingKey(key);\n    } catch (err) {\n      log.error(err);\n      throw errCode__default[\"default\"](new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY');\n    }\n    const res = await this._repo.datastore.get(routingKey);\n    let record;\n    try {\n      record = libp2pRecord.Record.deserialize(res);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    return record.value;\n  }\n  _routingKey(key$1) {\n    return new key.Key('/' + toString.toString(key$1, 'base32upper'), false);\n  }\n}\n\nexports.OfflineDatastore = OfflineDatastore;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/ipns/routing/offline-datastore.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar key = require('interface-datastore/key');\nvar libp2pRecord = require('libp2p-record');\nvar errCode = require('err-code');\nvar debug = require('debug');\nvar toString = require('uint8arrays/to-string');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = Object.assign(debug__default[\"default\"]('ipfs:ipns:offline-datastore'), { error: debug__default[\"default\"]('ipfs:ipns:offline-datastore:error') });\nclass OfflineDatastore {\n  constructor(repo) {\n    this._repo = repo;\n    this.stores = [];\n  }\n  async put(key, value) {\n    if (!(key instanceof Uint8Array)) {\n      throw errCode__default[\"default\"](new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY');\n    }\n    if (!(value instanceof Uint8Array)) {\n      throw errCode__default[\"default\"](new Error('Offline datastore value must be a Uint8Array'), 'ERR_INVALID_VALUE');\n    }\n    let routingKey;\n    try {\n      routingKey = this._routingKey(key);\n    } catch (err) {\n      log.error(err);\n      throw errCode__default[\"default\"](new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY');\n    }\n    const record = new libp2pRecord.Record(key, value);\n    return this._repo.datastore.put(routingKey, record.serialize());\n  }\n  async get(key) {\n    if (!(key instanceof Uint8Array)) {\n      throw errCode__default[\"default\"](new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY');\n    }\n    let routingKey;\n    try {\n      routingKey = this._routingKey(key);\n    } catch (err) {\n      log.error(err);\n      throw errCode__default[\"default\"](new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY');\n    }\n    const res = await this._repo.datastore.get(routingKey);\n    let record;\n    try {\n      record = libp2pRecord.Record.deserialize(res);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    return record.value;\n  }\n  _routingKey(key$1) {\n    return new key.Key('/' + toString.toString(key$1, 'base32upper'), false);\n  }\n}\n\nexports.OfflineDatastore = OfflineDatastore;\n"},"lineCount":66}},"error":null,"hash":"96f1e0114dd4502a4c7f16232c2d9196","cacheData":{"env":{}}}