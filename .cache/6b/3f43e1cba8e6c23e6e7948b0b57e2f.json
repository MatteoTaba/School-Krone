{"id":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\package.json","includedInParent":true,"mtime":1638722720622},{"name":"it-map","loc":{"line":5,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\pinned-blockstore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\it-map\\index.js"},{"name":"err-code","loc":{"line":6,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\pinned-blockstore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"./pin-types.js","loc":{"line":7,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\pinned-blockstore.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-repo\\cjs\\src\\pin-types.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar map = require('it-map');\nvar errCode = require('err-code');\nvar pinTypes = require('./pin-types.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction createPinnedBlockstore(pins, store) {\n  return {\n    open() {\n      return store.open();\n    },\n    close() {\n      return store.close();\n    },\n    query(query, options) {\n      return store.query(query, options);\n    },\n    queryKeys(query, options) {\n      return store.queryKeys(query, options);\n    },\n    async get(cid, options) {\n      return store.get(cid, options);\n    },\n    async *getMany(cids, options) {\n      yield* store.getMany(cids, options);\n    },\n    async put(cid, buf, options) {\n      await store.put(cid, buf, options);\n    },\n    async *putMany(pairs, options) {\n      yield* store.putMany(pairs, options);\n    },\n    has(cid, options) {\n      return store.has(cid, options);\n    },\n    async delete(cid, options) {\n      await ensureNotPinned(cid, pins);\n      return store.delete(cid, options);\n    },\n    deleteMany(cids, options) {\n      return store.deleteMany(map__default[\"default\"](cids, async cid => {\n        await ensureNotPinned(cid, pins);\n        return cid;\n      }), options);\n    },\n    batch() {\n      return store.batch();\n    }\n  };\n}\nasync function ensureNotPinned(cid, pins) {\n  const {pinned, reason} = await pins.isPinnedWithType(cid, pinTypes.PinTypes.all);\n  if (pinned) {\n    throw errCode__default[\"default\"](new Error(`pinned: ${ reason }`), 'ERR_BLOCK_PINNED');\n  }\n}\n\nexports.createPinnedBlockstore = createPinnedBlockstore;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../node_modules/ipfs-repo/cjs/src/pinned-blockstore.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar map = require('it-map');\nvar errCode = require('err-code');\nvar pinTypes = require('./pin-types.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction createPinnedBlockstore(pins, store) {\n  return {\n    open() {\n      return store.open();\n    },\n    close() {\n      return store.close();\n    },\n    query(query, options) {\n      return store.query(query, options);\n    },\n    queryKeys(query, options) {\n      return store.queryKeys(query, options);\n    },\n    async get(cid, options) {\n      return store.get(cid, options);\n    },\n    async *getMany(cids, options) {\n      yield* store.getMany(cids, options);\n    },\n    async put(cid, buf, options) {\n      await store.put(cid, buf, options);\n    },\n    async *putMany(pairs, options) {\n      yield* store.putMany(pairs, options);\n    },\n    has(cid, options) {\n      return store.has(cid, options);\n    },\n    async delete(cid, options) {\n      await ensureNotPinned(cid, pins);\n      return store.delete(cid, options);\n    },\n    deleteMany(cids, options) {\n      return store.deleteMany(map__default[\"default\"](cids, async cid => {\n        await ensureNotPinned(cid, pins);\n        return cid;\n      }), options);\n    },\n    batch() {\n      return store.batch();\n    }\n  };\n}\nasync function ensureNotPinned(cid, pins) {\n  const {pinned, reason} = await pins.isPinnedWithType(cid, pinTypes.PinTypes.all);\n  if (pinned) {\n    throw errCode__default[\"default\"](new Error(`pinned: ${ reason }`), 'ERR_BLOCK_PINNED');\n  }\n}\n\nexports.createPinnedBlockstore = createPinnedBlockstore;\n"},"lineCount":66}},"error":null,"hash":"1ddff1dd2679ff9c7e81b2394608fdee","cacheData":{"env":{}}}