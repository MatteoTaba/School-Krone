{"id":"../node_modules/ipfs-core/cjs/src/components/id.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"../version.js","loc":{"line":5,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\id.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\version.js"},{"name":"multiaddr","loc":{"line":6,"column":24},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\id.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiaddr\\src\\index.js"},{"name":"ipfs-core-utils/with-timeout-option","loc":{"line":7,"column":32},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\id.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core-utils\\cjs\\src\\with-timeout-option.js"},{"name":"uint8arrays/to-string","loc":{"line":8,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\id.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\to-string.js"},{"name":"peer-id","loc":{"line":9,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\id.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\peer-id\\src\\index.js"},{"name":"../errors.js","loc":{"line":10,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\id.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\errors.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar version = require('../version.js');\nvar multiaddr = require('multiaddr');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar toString = require('uint8arrays/to-string');\nvar PeerId = require('peer-id');\nvar errors = require('../errors.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\n\nfunction createId({peerId, network}) {\n  async function id(options = {}) {\n    if (options.peerId === peerId.toB58String()) {\n      delete options.peerId;\n    }\n    const net = network.try();\n    if (!net) {\n      if (options.peerId) {\n        throw new errors.NotStartedError();\n      }\n      const idStr = peerId.toB58String();\n      return {\n        id: idStr,\n        publicKey: toString.toString(peerId.pubKey.bytes, 'base64pad'),\n        addresses: [],\n        agentVersion: `js-ipfs/${ version.ipfsCore }`,\n        protocolVersion: '9000',\n        protocols: []\n      };\n    }\n    const id = options.peerId ? PeerId__default[\"default\"].createFromB58String(options.peerId.toString()) : peerId;\n    const {libp2p} = net;\n    const publicKey = options.peerId ? libp2p.peerStore.keyBook.get(id) : id.pubKey;\n    const addresses = options.peerId ? libp2p.peerStore.addressBook.getMultiaddrsForPeer(id) : libp2p.multiaddrs;\n    const protocols = options.peerId ? libp2p.peerStore.protoBook.get(id) : Array.from(libp2p.upgrader.protocols.keys());\n    const agentVersion = toString.toString(libp2p.peerStore.metadataBook.getValue(id, 'AgentVersion') || new Uint8Array());\n    const protocolVersion = toString.toString(libp2p.peerStore.metadataBook.getValue(id, 'ProtocolVersion') || new Uint8Array());\n    const idStr = id.toB58String();\n    return {\n      id: idStr,\n      publicKey: toString.toString(publicKey.bytes, 'base64pad'),\n      addresses: (addresses || []).map(ma => {\n        const str = ma.toString();\n        if (str.endsWith(`/p2p/${ idStr }`)) {\n          return str;\n        }\n        return `${ str }/p2p/${ idStr }`;\n      }).sort().map(ma => new multiaddr.Multiaddr(ma)),\n      agentVersion,\n      protocolVersion,\n      protocols: (protocols || []).sort()\n    };\n  }\n  return withTimeoutOption.withTimeoutOption(id);\n}\n\nexports.createId = createId;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/id.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/id.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar version = require('../version.js');\nvar multiaddr = require('multiaddr');\nvar withTimeoutOption = require('ipfs-core-utils/with-timeout-option');\nvar toString = require('uint8arrays/to-string');\nvar PeerId = require('peer-id');\nvar errors = require('../errors.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\n\nfunction createId({peerId, network}) {\n  async function id(options = {}) {\n    if (options.peerId === peerId.toB58String()) {\n      delete options.peerId;\n    }\n    const net = network.try();\n    if (!net) {\n      if (options.peerId) {\n        throw new errors.NotStartedError();\n      }\n      const idStr = peerId.toB58String();\n      return {\n        id: idStr,\n        publicKey: toString.toString(peerId.pubKey.bytes, 'base64pad'),\n        addresses: [],\n        agentVersion: `js-ipfs/${ version.ipfsCore }`,\n        protocolVersion: '9000',\n        protocols: []\n      };\n    }\n    const id = options.peerId ? PeerId__default[\"default\"].createFromB58String(options.peerId.toString()) : peerId;\n    const {libp2p} = net;\n    const publicKey = options.peerId ? libp2p.peerStore.keyBook.get(id) : id.pubKey;\n    const addresses = options.peerId ? libp2p.peerStore.addressBook.getMultiaddrsForPeer(id) : libp2p.multiaddrs;\n    const protocols = options.peerId ? libp2p.peerStore.protoBook.get(id) : Array.from(libp2p.upgrader.protocols.keys());\n    const agentVersion = toString.toString(libp2p.peerStore.metadataBook.getValue(id, 'AgentVersion') || new Uint8Array());\n    const protocolVersion = toString.toString(libp2p.peerStore.metadataBook.getValue(id, 'ProtocolVersion') || new Uint8Array());\n    const idStr = id.toB58String();\n    return {\n      id: idStr,\n      publicKey: toString.toString(publicKey.bytes, 'base64pad'),\n      addresses: (addresses || []).map(ma => {\n        const str = ma.toString();\n        if (str.endsWith(`/p2p/${ idStr }`)) {\n          return str;\n        }\n        return `${ str }/p2p/${ idStr }`;\n      }).sort().map(ma => new multiaddr.Multiaddr(ma)),\n      agentVersion,\n      protocolVersion,\n      protocols: (protocols || []).sort()\n    };\n  }\n  return withTimeoutOption.withTimeoutOption(id);\n}\n\nexports.createId = createId;\n"},"lineCount":63}},"error":null,"hash":"e7414ce09860388622d6251ba9dfb136","cacheData":{"env":{}}}