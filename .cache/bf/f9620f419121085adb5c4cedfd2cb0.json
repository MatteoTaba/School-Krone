{"id":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\package.json","includedInParent":true,"mtime":1638722721198},{"name":"err-code","loc":{"line":5,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-async-iterator.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"debug","loc":{"line":6,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-async-iterator.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"},{"name":"../../../utils.js","loc":{"line":7,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-async-iterator.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\utils.js"},{"name":"uint8arrays/from-string","loc":{"line":8,"column":25},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipfs-core\\cjs\\src\\components\\files\\utils\\to-async-iterator.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\from-string.js"}],"generated":{"js":"var global = arguments[3];\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errCode = require('err-code');\nvar debug = require('debug');\nvar utils = require('../../../utils.js');\nvar fromString = require('uint8arrays/from-string');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:mfs:utils:to-async-iterator');\nfunction toAsyncIterator(content) {\n  if (!content) {\n    throw errCode__default[\"default\"](new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH');\n  }\n  if (typeof content === 'string' || content instanceof String) {\n    log('Content was a string');\n    content = fromString.fromString(content.toString());\n  }\n  if (content.length) {\n    log('Content was array-like');\n    return {\n      [Symbol.asyncIterator]: function* bufferContent() {\n        yield content;\n      }\n    };\n  }\n  if (content[Symbol.asyncIterator]) {\n    log('Content was an async iterator');\n    return content;\n  }\n  if (content[Symbol.iterator]) {\n    log('Content was an iterator');\n    return content;\n  }\n  if (global.Blob && content instanceof global.Blob) {\n    log('Content was an HTML5 Blob');\n    let index = 0;\n    const iterator = {\n      next: () => {\n        if (index > content.size) {\n          return { done: true };\n        }\n        return new Promise((resolve, reject) => {\n          const chunk = content.slice(index, utils.MFS_MAX_CHUNK_SIZE);\n          index += utils.MFS_MAX_CHUNK_SIZE;\n          const reader = new global.FileReader();\n          const handleLoad = ev => {\n            reader.removeEventListener('loadend', handleLoad, false);\n            if (ev.error) {\n              return reject(ev.error);\n            }\n            resolve({\n              done: false,\n              value: new Uint8Array(reader.result)\n            });\n          };\n          reader.addEventListener('loadend', handleLoad);\n          reader.readAsArrayBuffer(chunk);\n        });\n      }\n    };\n    return {\n      [Symbol.asyncIterator]: () => {\n        return iterator;\n      }\n    };\n  }\n  throw errCode__default[\"default\"](new Error(`Don't know how to convert ${ content } into an async iterator`), 'ERR_INVALID_PARAMS');\n}\n\nexports.toAsyncIterator = toAsyncIterator;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}}],"sources":{"../node_modules/ipfs-core/cjs/src/components/files/utils/to-async-iterator.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errCode = require('err-code');\nvar debug = require('debug');\nvar utils = require('../../../utils.js');\nvar fromString = require('uint8arrays/from-string');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs:mfs:utils:to-async-iterator');\nfunction toAsyncIterator(content) {\n  if (!content) {\n    throw errCode__default[\"default\"](new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH');\n  }\n  if (typeof content === 'string' || content instanceof String) {\n    log('Content was a string');\n    content = fromString.fromString(content.toString());\n  }\n  if (content.length) {\n    log('Content was array-like');\n    return {\n      [Symbol.asyncIterator]: function* bufferContent() {\n        yield content;\n      }\n    };\n  }\n  if (content[Symbol.asyncIterator]) {\n    log('Content was an async iterator');\n    return content;\n  }\n  if (content[Symbol.iterator]) {\n    log('Content was an iterator');\n    return content;\n  }\n  if (global.Blob && content instanceof global.Blob) {\n    log('Content was an HTML5 Blob');\n    let index = 0;\n    const iterator = {\n      next: () => {\n        if (index > content.size) {\n          return { done: true };\n        }\n        return new Promise((resolve, reject) => {\n          const chunk = content.slice(index, utils.MFS_MAX_CHUNK_SIZE);\n          index += utils.MFS_MAX_CHUNK_SIZE;\n          const reader = new global.FileReader();\n          const handleLoad = ev => {\n            reader.removeEventListener('loadend', handleLoad, false);\n            if (ev.error) {\n              return reject(ev.error);\n            }\n            resolve({\n              done: false,\n              value: new Uint8Array(reader.result)\n            });\n          };\n          reader.addEventListener('loadend', handleLoad);\n          reader.readAsArrayBuffer(chunk);\n        });\n      }\n    };\n    return {\n      [Symbol.asyncIterator]: () => {\n        return iterator;\n      }\n    };\n  }\n  throw errCode__default[\"default\"](new Error(`Don't know how to convert ${ content } into an async iterator`), 'ERR_INVALID_PARAMS');\n}\n\nexports.toAsyncIterator = toAsyncIterator;\n"},"lineCount":78}},"error":null,"hash":"c16916c585881dd7751f00cbecee6ae8","cacheData":{"env":{}}}