{"id":"../node_modules/ipns/cjs/src/index.js","dependencies":[{"name":"C:\\Users\\matte\\Documents\\SKR\\package.json","includedInParent":true,"mtime":1638722727563},{"name":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\package.json","includedInParent":true,"mtime":1638722720486},{"name":"timestamp-nano","loc":{"line":5,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\timestamp-nano\\timestamp.js"},{"name":"interface-datastore/key","loc":{"line":6,"column":18},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\interface-datastore\\cjs\\src\\key.js"},{"name":"libp2p-crypto","loc":{"line":7,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\node_modules\\libp2p-crypto\\src\\index.js"},{"name":"peer-id","loc":{"line":8,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\peer-id\\src\\index.js"},{"name":"multiformats/hashes/digest","loc":{"line":9,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\hashes\\digest.js"},{"name":"multiformats/hashes/identity","loc":{"line":10,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\hashes\\identity.js"},{"name":"err-code","loc":{"line":11,"column":22},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\err-code\\index.js"},{"name":"multiformats/bases/base32","loc":{"line":12,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\multiformats\\cjs\\src\\bases\\base32.js"},{"name":"uint8arrays/from-string","loc":{"line":13,"column":25},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\from-string.js"},{"name":"uint8arrays/to-string","loc":{"line":14,"column":23},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\to-string.js"},{"name":"uint8arrays/concat","loc":{"line":15,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\concat.js"},{"name":"uint8arrays/equals","loc":{"line":16,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\uint8arrays\\cjs\\src\\equals.js"},{"name":"cborg","loc":{"line":17,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\cborg\\cjs\\cborg.js"},{"name":"long","loc":{"line":18,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\long\\src\\long.js"},{"name":"debug","loc":{"line":19,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\debug\\src\\browser.js"},{"name":"./pb/ipns.js","loc":{"line":20,"column":19},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\pb\\ipns.js"},{"name":"./utils.js","loc":{"line":21,"column":20},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\utils.js"},{"name":"./errors.js","loc":{"line":22,"column":21},"parent":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\index.js","resolved":"C:\\Users\\matte\\Documents\\SKR\\node_modules\\ipns\\cjs\\src\\errors.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar NanoDate = require('timestamp-nano');\nvar key = require('interface-datastore/key');\nvar crypto = require('libp2p-crypto');\nvar PeerId = require('peer-id');\nvar Digest = require('multiformats/hashes/digest');\nvar identity = require('multiformats/hashes/identity');\nvar errCode = require('err-code');\nvar base32 = require('multiformats/bases/base32');\nvar fromString = require('uint8arrays/from-string');\nvar toString = require('uint8arrays/to-string');\nvar concat = require('uint8arrays/concat');\nvar equals = require('uint8arrays/equals');\nvar cborg = require('cborg');\nvar Long = require('long');\nvar debug = require('debug');\nvar ipns = require('./pb/ipns.js');\nvar utils = require('./utils.js');\nvar errors = require('./errors.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar NanoDate__default = /*#__PURE__*/_interopDefaultLegacy(NanoDate);\nvar crypto__default = /*#__PURE__*/_interopDefaultLegacy(crypto);\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar cborg__namespace = /*#__PURE__*/_interopNamespace(cborg);\nvar Long__default = /*#__PURE__*/_interopDefaultLegacy(Long);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = Object.assign(debug__default[\"default\"]('jsipns'), { error: debug__default[\"default\"]('jsipns:error') });\nconst ID_MULTIHASH_CODE = identity.identity.code;\nconst IPNS_PREFIX = fromString.fromString('/ipns/');\nconst namespace = '/ipns/';\nconst namespaceLength = namespace.length;\nconst create = (privateKey, value, seq, lifetime) => {\n  const expirationDate = new NanoDate__default[\"default\"](Date.now() + Number(lifetime));\n  const validityType = ipns.IpnsEntry.ValidityType.EOL;\n  const [ms, ns] = lifetime.toString().split('.');\n  const lifetimeNs = BigInt(ms) * BigInt(100000) + BigInt(ns || 0);\n  return _create(privateKey, value, seq, validityType, expirationDate, lifetimeNs);\n};\nconst createWithExpiration = (privateKey, value, seq, expiration) => {\n  const expirationDate = NanoDate__default[\"default\"].fromString(expiration);\n  const validityType = ipns.IpnsEntry.ValidityType.EOL;\n  const ttlMs = expirationDate.toDate().getTime() - Date.now();\n  const ttlNs = BigInt(ttlMs) * BigInt(100000) + BigInt(expirationDate.getNano());\n  return _create(privateKey, value, seq, validityType, expirationDate, ttlNs);\n};\nconst _create = async (privateKey, value, seq, validityType, expirationDate, ttl) => {\n  seq = BigInt(seq);\n  const isoValidity = fromString.fromString(expirationDate.toString());\n  const signatureV1 = await sign(privateKey, value, validityType, isoValidity);\n  const data = createCborData(value, isoValidity, validityType, seq, ttl);\n  const sigData = ipnsEntryDataForV2Sig(data);\n  const signatureV2 = await privateKey.sign(sigData);\n  const entry = {\n    value,\n    signature: signatureV1,\n    validityType: validityType,\n    validity: isoValidity,\n    sequence: seq,\n    ttl,\n    signatureV2,\n    data\n  };\n  log(`ipns entry for ${ value } created`);\n  return entry;\n};\nconst createCborData = (value, validity, validityType, sequence, ttl) => {\n  const data = {\n    Value: value,\n    Validity: validity,\n    ValidityType: validityType,\n    Sequence: sequence,\n    TTL: ttl\n  };\n  return cborg__namespace.encode(data);\n};\nconst validate = async (publicKey, entry) => {\n  const {value, validityType, validity} = entry;\n  let dataForSignature;\n  let signature;\n  if (entry.signatureV2 && entry.data) {\n    signature = entry.signatureV2;\n    dataForSignature = ipnsEntryDataForV2Sig(entry.data);\n    validateCborDataMatchesPbData(entry);\n  } else {\n    signature = entry.signature;\n    dataForSignature = ipnsEntryDataForV1Sig(value, validityType, validity);\n  }\n  let isValid;\n  try {\n    isValid = await publicKey.verify(dataForSignature, signature);\n  } catch (err) {\n    isValid = false;\n  }\n  if (!isValid) {\n    log.error('record signature verification failed');\n    throw errCode__default[\"default\"](new Error('record signature verification failed'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (validityType === ipns.IpnsEntry.ValidityType.EOL) {\n    let validityDate;\n    try {\n      validityDate = utils.parseRFC3339(toString.toString(validity));\n    } catch (e) {\n      log.error('unrecognized validity format (not an rfc3339 format)');\n      throw errCode__default[\"default\"](new Error('unrecognized validity format (not an rfc3339 format)'), errors.ERR_UNRECOGNIZED_FORMAT);\n    }\n    if (validityDate.getTime() < Date.now()) {\n      log.error('record has expired');\n      throw errCode__default[\"default\"](new Error('record has expired'), errors.ERR_IPNS_EXPIRED_RECORD);\n    }\n  } else if (validityType) {\n    log.error('unrecognized validity type');\n    throw errCode__default[\"default\"](new Error('unrecognized validity type'), errors.ERR_UNRECOGNIZED_VALIDITY);\n  }\n  log(`ipns entry for ${ value } is valid`);\n};\nconst validateCborDataMatchesPbData = entry => {\n  if (!entry.data) {\n    throw errCode__default[\"default\"](new Error('Record data is missing'), errors.ERR_INVALID_RECORD_DATA);\n  }\n  const data = cborg__namespace.decode(entry.data);\n  if (Number.isInteger(data.Sequence)) {\n    data.Sequence = BigInt(data.Sequence);\n  }\n  if (Number.isInteger(data.TTL)) {\n    data.TTL = BigInt(data.TTL);\n  }\n  if (!equals.equals(data.Value, entry.value)) {\n    throw errCode__default[\"default\"](new Error('Field \"value\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (!equals.equals(data.Validity, entry.validity)) {\n    throw errCode__default[\"default\"](new Error('Field \"validity\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (data.ValidityType !== entry.validityType) {\n    throw errCode__default[\"default\"](new Error('Field \"validityType\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (data.Sequence !== entry.sequence) {\n    throw errCode__default[\"default\"](new Error('Field \"sequence\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (data.TTL !== entry.ttl) {\n    throw errCode__default[\"default\"](new Error('Field \"ttl\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n};\nconst embedPublicKey = async (publicKey, entry) => {\n  if (!publicKey || !publicKey.bytes || !entry) {\n    const error = new Error('one or more of the provided parameters are not defined');\n    log.error(error);\n    throw errCode__default[\"default\"](error, errors.ERR_UNDEFINED_PARAMETER);\n  }\n  let peerId;\n  try {\n    peerId = await PeerId__default[\"default\"].createFromPubKey(publicKey.bytes);\n  } catch (err) {\n    throw errCode__default[\"default\"](err, errors.ERR_PEER_ID_FROM_PUBLIC_KEY);\n  }\n  let extractedPublicKey;\n  try {\n    extractedPublicKey = extractPublicKeyFromId(peerId);\n  } catch (err) {\n    log.error(err);\n    throw errCode__default[\"default\"](err, errors.ERR_PUBLIC_KEY_FROM_ID);\n  }\n  if (extractedPublicKey) {\n    return null;\n  }\n  try {\n    entry.pubKey = crypto__default[\"default\"].keys.marshalPublicKey(publicKey);\n  } catch (err) {\n    log.error(err);\n    throw err;\n  }\n  return entry;\n};\nconst extractPublicKey = async (peerId, entry) => {\n  if (!entry || !peerId) {\n    const error = new Error('one or more of the provided parameters are not defined');\n    log.error(error);\n    throw errCode__default[\"default\"](error, errors.ERR_UNDEFINED_PARAMETER);\n  }\n  let pubKey;\n  if (entry.pubKey) {\n    try {\n      pubKey = crypto__default[\"default\"].keys.unmarshalPublicKey(entry.pubKey);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    const otherId = await PeerId__default[\"default\"].createFromPubKey(entry.pubKey);\n    if (!otherId.equals(peerId)) {\n      throw errCode__default[\"default\"](new Error('Embedded public key did not match PeerID'), errors.ERR_INVALID_EMBEDDED_KEY);\n    }\n  } else if (peerId.pubKey) {\n    pubKey = peerId.pubKey;\n  }\n  if (pubKey) {\n    return pubKey;\n  }\n  throw errCode__default[\"default\"](new Error('no public key is available'), errors.ERR_UNDEFINED_PARAMETER);\n};\nconst rawStdEncoding = key => base32.base32upper.encode(key).slice(1);\nconst getLocalKey = key$1 => new key.Key(`/ipns/${ rawStdEncoding(key$1) }`);\nconst getIdKeys = pid => {\n  const pkBuffer = fromString.fromString('/pk/');\n  const ipnsBuffer = fromString.fromString('/ipns/');\n  return {\n    routingPubKey: new key.Key(concat.concat([\n      pkBuffer,\n      pid\n    ]), false),\n    pkKey: new key.Key(rawStdEncoding(concat.concat([\n      pkBuffer,\n      pid\n    ]))),\n    routingKey: new key.Key(concat.concat([\n      ipnsBuffer,\n      pid\n    ]), false),\n    ipnsKey: new key.Key(rawStdEncoding(concat.concat([\n      ipnsBuffer,\n      pid\n    ])))\n  };\n};\nconst sign = (privateKey, value, validityType, validity) => {\n  try {\n    const dataForSignature = ipnsEntryDataForV1Sig(value, validityType, validity);\n    return privateKey.sign(dataForSignature);\n  } catch (error) {\n    log.error('record signature creation failed');\n    throw errCode__default[\"default\"](new Error('record signature creation failed: ' + error.message), errors.ERR_SIGNATURE_CREATION);\n  }\n};\nconst getValidityType = validityType => {\n  if (validityType.toString() === '0') {\n    return 'EOL';\n  }\n  const error = new Error(`unrecognized validity type ${ validityType.toString() }`);\n  log.error(error);\n  throw errCode__default[\"default\"](error, errors.ERR_UNRECOGNIZED_VALIDITY);\n};\nconst ipnsEntryDataForV1Sig = (value, validityType, validity) => {\n  const validityTypeBuffer = fromString.fromString(getValidityType(validityType));\n  return concat.concat([\n    value,\n    validity,\n    validityTypeBuffer\n  ]);\n};\nconst ipnsEntryDataForV2Sig = data => {\n  const entryData = fromString.fromString('ipns-signature:');\n  return concat.concat([\n    entryData,\n    data\n  ]);\n};\nconst extractPublicKeyFromId = peerId => {\n  const digest = Digest__namespace.decode(peerId.id);\n  if (digest.code !== ID_MULTIHASH_CODE) {\n    return null;\n  }\n  return crypto__default[\"default\"].keys.unmarshalPublicKey(digest.digest);\n};\nconst marshal = obj => {\n  return ipns.IpnsEntry.encode({\n    ...obj,\n    sequence: Long__default[\"default\"].fromString(obj.sequence.toString()),\n    ttl: obj.ttl == null ? undefined : Long__default[\"default\"].fromString(obj.ttl.toString())\n  }).finish();\n};\nconst unmarshal = buf => {\n  const message = ipns.IpnsEntry.decode(buf);\n  const object = ipns.IpnsEntry.toObject(message, {\n    defaults: false,\n    arrays: true,\n    objects: false\n  });\n  return {\n    value: object.value,\n    signature: object.signature,\n    validityType: object.validityType,\n    validity: object.validity,\n    sequence: Object.hasOwnProperty.call(object, 'sequence') ? BigInt(`${ object.sequence }`) : 0,\n    pubKey: object.pubKey,\n    ttl: Object.hasOwnProperty.call(object, 'ttl') ? BigInt(`${ object.ttl }`) : undefined,\n    signatureV2: object.signatureV2,\n    data: object.data\n  };\n};\nconst validator = {\n  validate: async (marshalledData, key) => {\n    const receivedEntry = unmarshal(marshalledData);\n    const bufferId = key.slice(IPNS_PREFIX.length);\n    const peerId = PeerId__default[\"default\"].createFromBytes(bufferId);\n    const pubKey = await extractPublicKey(peerId, receivedEntry);\n    await validate(pubKey, receivedEntry);\n  },\n  select: (dataA, dataB) => {\n    const entryA = unmarshal(dataA);\n    const entryB = unmarshal(dataB);\n    if (entryA.signatureV2 && !entryB.signatureV2) {\n      return 0;\n    } else if (entryB.signatureV2 && !entryA.signatureV2) {\n      return 1;\n    }\n    if (entryA.sequence > entryB.sequence) {\n      return 0;\n    } else if (entryA.sequence < entryB.sequence) {\n      return 1;\n    }\n    const entryAValidityDate = utils.parseRFC3339(toString.toString(entryA.validity));\n    const entryBValidityDate = utils.parseRFC3339(toString.toString(entryB.validity));\n    return entryBValidityDate.getTime() > entryAValidityDate.getTime() ? 1 : 0;\n  }\n};\n\nexports.create = create;\nexports.createWithExpiration = createWithExpiration;\nexports.embedPublicKey = embedPublicKey;\nexports.extractPublicKey = extractPublicKey;\nexports.getIdKeys = getIdKeys;\nexports.getLocalKey = getLocalKey;\nexports.marshal = marshal;\nexports.namespace = namespace;\nexports.namespaceLength = namespaceLength;\nexports.unmarshal = unmarshal;\nexports.validate = validate;\nexports.validator = validator;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/ipns/cjs/src/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}}],"sources":{"../node_modules/ipns/cjs/src/index.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar NanoDate = require('timestamp-nano');\nvar key = require('interface-datastore/key');\nvar crypto = require('libp2p-crypto');\nvar PeerId = require('peer-id');\nvar Digest = require('multiformats/hashes/digest');\nvar identity = require('multiformats/hashes/identity');\nvar errCode = require('err-code');\nvar base32 = require('multiformats/bases/base32');\nvar fromString = require('uint8arrays/from-string');\nvar toString = require('uint8arrays/to-string');\nvar concat = require('uint8arrays/concat');\nvar equals = require('uint8arrays/equals');\nvar cborg = require('cborg');\nvar Long = require('long');\nvar debug = require('debug');\nvar ipns = require('./pb/ipns.js');\nvar utils = require('./utils.js');\nvar errors = require('./errors.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar NanoDate__default = /*#__PURE__*/_interopDefaultLegacy(NanoDate);\nvar crypto__default = /*#__PURE__*/_interopDefaultLegacy(crypto);\nvar PeerId__default = /*#__PURE__*/_interopDefaultLegacy(PeerId);\nvar Digest__namespace = /*#__PURE__*/_interopNamespace(Digest);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar cborg__namespace = /*#__PURE__*/_interopNamespace(cborg);\nvar Long__default = /*#__PURE__*/_interopDefaultLegacy(Long);\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = Object.assign(debug__default[\"default\"]('jsipns'), { error: debug__default[\"default\"]('jsipns:error') });\nconst ID_MULTIHASH_CODE = identity.identity.code;\nconst IPNS_PREFIX = fromString.fromString('/ipns/');\nconst namespace = '/ipns/';\nconst namespaceLength = namespace.length;\nconst create = (privateKey, value, seq, lifetime) => {\n  const expirationDate = new NanoDate__default[\"default\"](Date.now() + Number(lifetime));\n  const validityType = ipns.IpnsEntry.ValidityType.EOL;\n  const [ms, ns] = lifetime.toString().split('.');\n  const lifetimeNs = BigInt(ms) * BigInt(100000) + BigInt(ns || 0);\n  return _create(privateKey, value, seq, validityType, expirationDate, lifetimeNs);\n};\nconst createWithExpiration = (privateKey, value, seq, expiration) => {\n  const expirationDate = NanoDate__default[\"default\"].fromString(expiration);\n  const validityType = ipns.IpnsEntry.ValidityType.EOL;\n  const ttlMs = expirationDate.toDate().getTime() - Date.now();\n  const ttlNs = BigInt(ttlMs) * BigInt(100000) + BigInt(expirationDate.getNano());\n  return _create(privateKey, value, seq, validityType, expirationDate, ttlNs);\n};\nconst _create = async (privateKey, value, seq, validityType, expirationDate, ttl) => {\n  seq = BigInt(seq);\n  const isoValidity = fromString.fromString(expirationDate.toString());\n  const signatureV1 = await sign(privateKey, value, validityType, isoValidity);\n  const data = createCborData(value, isoValidity, validityType, seq, ttl);\n  const sigData = ipnsEntryDataForV2Sig(data);\n  const signatureV2 = await privateKey.sign(sigData);\n  const entry = {\n    value,\n    signature: signatureV1,\n    validityType: validityType,\n    validity: isoValidity,\n    sequence: seq,\n    ttl,\n    signatureV2,\n    data\n  };\n  log(`ipns entry for ${ value } created`);\n  return entry;\n};\nconst createCborData = (value, validity, validityType, sequence, ttl) => {\n  const data = {\n    Value: value,\n    Validity: validity,\n    ValidityType: validityType,\n    Sequence: sequence,\n    TTL: ttl\n  };\n  return cborg__namespace.encode(data);\n};\nconst validate = async (publicKey, entry) => {\n  const {value, validityType, validity} = entry;\n  let dataForSignature;\n  let signature;\n  if (entry.signatureV2 && entry.data) {\n    signature = entry.signatureV2;\n    dataForSignature = ipnsEntryDataForV2Sig(entry.data);\n    validateCborDataMatchesPbData(entry);\n  } else {\n    signature = entry.signature;\n    dataForSignature = ipnsEntryDataForV1Sig(value, validityType, validity);\n  }\n  let isValid;\n  try {\n    isValid = await publicKey.verify(dataForSignature, signature);\n  } catch (err) {\n    isValid = false;\n  }\n  if (!isValid) {\n    log.error('record signature verification failed');\n    throw errCode__default[\"default\"](new Error('record signature verification failed'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (validityType === ipns.IpnsEntry.ValidityType.EOL) {\n    let validityDate;\n    try {\n      validityDate = utils.parseRFC3339(toString.toString(validity));\n    } catch (e) {\n      log.error('unrecognized validity format (not an rfc3339 format)');\n      throw errCode__default[\"default\"](new Error('unrecognized validity format (not an rfc3339 format)'), errors.ERR_UNRECOGNIZED_FORMAT);\n    }\n    if (validityDate.getTime() < Date.now()) {\n      log.error('record has expired');\n      throw errCode__default[\"default\"](new Error('record has expired'), errors.ERR_IPNS_EXPIRED_RECORD);\n    }\n  } else if (validityType) {\n    log.error('unrecognized validity type');\n    throw errCode__default[\"default\"](new Error('unrecognized validity type'), errors.ERR_UNRECOGNIZED_VALIDITY);\n  }\n  log(`ipns entry for ${ value } is valid`);\n};\nconst validateCborDataMatchesPbData = entry => {\n  if (!entry.data) {\n    throw errCode__default[\"default\"](new Error('Record data is missing'), errors.ERR_INVALID_RECORD_DATA);\n  }\n  const data = cborg__namespace.decode(entry.data);\n  if (Number.isInteger(data.Sequence)) {\n    data.Sequence = BigInt(data.Sequence);\n  }\n  if (Number.isInteger(data.TTL)) {\n    data.TTL = BigInt(data.TTL);\n  }\n  if (!equals.equals(data.Value, entry.value)) {\n    throw errCode__default[\"default\"](new Error('Field \"value\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (!equals.equals(data.Validity, entry.validity)) {\n    throw errCode__default[\"default\"](new Error('Field \"validity\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (data.ValidityType !== entry.validityType) {\n    throw errCode__default[\"default\"](new Error('Field \"validityType\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (data.Sequence !== entry.sequence) {\n    throw errCode__default[\"default\"](new Error('Field \"sequence\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n  if (data.TTL !== entry.ttl) {\n    throw errCode__default[\"default\"](new Error('Field \"ttl\" did not match between protobuf and CBOR'), errors.ERR_SIGNATURE_VERIFICATION);\n  }\n};\nconst embedPublicKey = async (publicKey, entry) => {\n  if (!publicKey || !publicKey.bytes || !entry) {\n    const error = new Error('one or more of the provided parameters are not defined');\n    log.error(error);\n    throw errCode__default[\"default\"](error, errors.ERR_UNDEFINED_PARAMETER);\n  }\n  let peerId;\n  try {\n    peerId = await PeerId__default[\"default\"].createFromPubKey(publicKey.bytes);\n  } catch (err) {\n    throw errCode__default[\"default\"](err, errors.ERR_PEER_ID_FROM_PUBLIC_KEY);\n  }\n  let extractedPublicKey;\n  try {\n    extractedPublicKey = extractPublicKeyFromId(peerId);\n  } catch (err) {\n    log.error(err);\n    throw errCode__default[\"default\"](err, errors.ERR_PUBLIC_KEY_FROM_ID);\n  }\n  if (extractedPublicKey) {\n    return null;\n  }\n  try {\n    entry.pubKey = crypto__default[\"default\"].keys.marshalPublicKey(publicKey);\n  } catch (err) {\n    log.error(err);\n    throw err;\n  }\n  return entry;\n};\nconst extractPublicKey = async (peerId, entry) => {\n  if (!entry || !peerId) {\n    const error = new Error('one or more of the provided parameters are not defined');\n    log.error(error);\n    throw errCode__default[\"default\"](error, errors.ERR_UNDEFINED_PARAMETER);\n  }\n  let pubKey;\n  if (entry.pubKey) {\n    try {\n      pubKey = crypto__default[\"default\"].keys.unmarshalPublicKey(entry.pubKey);\n    } catch (err) {\n      log.error(err);\n      throw err;\n    }\n    const otherId = await PeerId__default[\"default\"].createFromPubKey(entry.pubKey);\n    if (!otherId.equals(peerId)) {\n      throw errCode__default[\"default\"](new Error('Embedded public key did not match PeerID'), errors.ERR_INVALID_EMBEDDED_KEY);\n    }\n  } else if (peerId.pubKey) {\n    pubKey = peerId.pubKey;\n  }\n  if (pubKey) {\n    return pubKey;\n  }\n  throw errCode__default[\"default\"](new Error('no public key is available'), errors.ERR_UNDEFINED_PARAMETER);\n};\nconst rawStdEncoding = key => base32.base32upper.encode(key).slice(1);\nconst getLocalKey = key$1 => new key.Key(`/ipns/${ rawStdEncoding(key$1) }`);\nconst getIdKeys = pid => {\n  const pkBuffer = fromString.fromString('/pk/');\n  const ipnsBuffer = fromString.fromString('/ipns/');\n  return {\n    routingPubKey: new key.Key(concat.concat([\n      pkBuffer,\n      pid\n    ]), false),\n    pkKey: new key.Key(rawStdEncoding(concat.concat([\n      pkBuffer,\n      pid\n    ]))),\n    routingKey: new key.Key(concat.concat([\n      ipnsBuffer,\n      pid\n    ]), false),\n    ipnsKey: new key.Key(rawStdEncoding(concat.concat([\n      ipnsBuffer,\n      pid\n    ])))\n  };\n};\nconst sign = (privateKey, value, validityType, validity) => {\n  try {\n    const dataForSignature = ipnsEntryDataForV1Sig(value, validityType, validity);\n    return privateKey.sign(dataForSignature);\n  } catch (error) {\n    log.error('record signature creation failed');\n    throw errCode__default[\"default\"](new Error('record signature creation failed: ' + error.message), errors.ERR_SIGNATURE_CREATION);\n  }\n};\nconst getValidityType = validityType => {\n  if (validityType.toString() === '0') {\n    return 'EOL';\n  }\n  const error = new Error(`unrecognized validity type ${ validityType.toString() }`);\n  log.error(error);\n  throw errCode__default[\"default\"](error, errors.ERR_UNRECOGNIZED_VALIDITY);\n};\nconst ipnsEntryDataForV1Sig = (value, validityType, validity) => {\n  const validityTypeBuffer = fromString.fromString(getValidityType(validityType));\n  return concat.concat([\n    value,\n    validity,\n    validityTypeBuffer\n  ]);\n};\nconst ipnsEntryDataForV2Sig = data => {\n  const entryData = fromString.fromString('ipns-signature:');\n  return concat.concat([\n    entryData,\n    data\n  ]);\n};\nconst extractPublicKeyFromId = peerId => {\n  const digest = Digest__namespace.decode(peerId.id);\n  if (digest.code !== ID_MULTIHASH_CODE) {\n    return null;\n  }\n  return crypto__default[\"default\"].keys.unmarshalPublicKey(digest.digest);\n};\nconst marshal = obj => {\n  return ipns.IpnsEntry.encode({\n    ...obj,\n    sequence: Long__default[\"default\"].fromString(obj.sequence.toString()),\n    ttl: obj.ttl == null ? undefined : Long__default[\"default\"].fromString(obj.ttl.toString())\n  }).finish();\n};\nconst unmarshal = buf => {\n  const message = ipns.IpnsEntry.decode(buf);\n  const object = ipns.IpnsEntry.toObject(message, {\n    defaults: false,\n    arrays: true,\n    objects: false\n  });\n  return {\n    value: object.value,\n    signature: object.signature,\n    validityType: object.validityType,\n    validity: object.validity,\n    sequence: Object.hasOwnProperty.call(object, 'sequence') ? BigInt(`${ object.sequence }`) : 0,\n    pubKey: object.pubKey,\n    ttl: Object.hasOwnProperty.call(object, 'ttl') ? BigInt(`${ object.ttl }`) : undefined,\n    signatureV2: object.signatureV2,\n    data: object.data\n  };\n};\nconst validator = {\n  validate: async (marshalledData, key) => {\n    const receivedEntry = unmarshal(marshalledData);\n    const bufferId = key.slice(IPNS_PREFIX.length);\n    const peerId = PeerId__default[\"default\"].createFromBytes(bufferId);\n    const pubKey = await extractPublicKey(peerId, receivedEntry);\n    await validate(pubKey, receivedEntry);\n  },\n  select: (dataA, dataB) => {\n    const entryA = unmarshal(dataA);\n    const entryB = unmarshal(dataB);\n    if (entryA.signatureV2 && !entryB.signatureV2) {\n      return 0;\n    } else if (entryB.signatureV2 && !entryA.signatureV2) {\n      return 1;\n    }\n    if (entryA.sequence > entryB.sequence) {\n      return 0;\n    } else if (entryA.sequence < entryB.sequence) {\n      return 1;\n    }\n    const entryAValidityDate = utils.parseRFC3339(toString.toString(entryA.validity));\n    const entryBValidityDate = utils.parseRFC3339(toString.toString(entryB.validity));\n    return entryBValidityDate.getTime() > entryAValidityDate.getTime() ? 1 : 0;\n  }\n};\n\nexports.create = create;\nexports.createWithExpiration = createWithExpiration;\nexports.embedPublicKey = embedPublicKey;\nexports.extractPublicKey = extractPublicKey;\nexports.getIdKeys = getIdKeys;\nexports.getLocalKey = getLocalKey;\nexports.marshal = marshal;\nexports.namespace = namespace;\nexports.namespaceLength = namespaceLength;\nexports.unmarshal = unmarshal;\nexports.validate = validate;\nexports.validator = validator;\n"},"lineCount":353}},"error":null,"hash":"7bf96e16c8d243d79a8324b92c50f427","cacheData":{"env":{}}}